var searchIndex = JSON.parse('{\
"adler":{"doc":"Adler-32 checksum implementation.","i":[[3,"Adler32","adler","Adler-32 checksum calculator.",null,null],[5,"adler32_slice","","Calculates the Adler-32 checksum of a byte slice.",null,[[]]],[11,"new","","Creates a new Adler-32 instance with default state.",0,[[]]],[11,"from_checksum","","Creates an `Adler32` instance from a precomputed Adler-32…",0,[[]]],[11,"checksum","","Returns the calculated checksum at this point in time.",0,[[]]],[11,"write_slice","","Adds `bytes` to the checksum calculation.",0,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"finish","","",0,[[]]],[11,"write","","",0,[[]]],[11,"clone","","",0,[[],["adler32",3]]],[11,"default","","",0,[[]]]],"p":[[3,"Adler32"]]},\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can \'forget\'…",null,null],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",null,[[["read",8]],["result",6]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32",3]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[],["rollingadler32",3]]],[11,"from_buffer","","Convenience function initializing a context from the hash…",0,[[],["rollingadler32",3]]],[11,"hash","","Returns the current hash.",0,[[]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm…",0,[[]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["rollingadler32",3]]],[11,"default","","",0,[[],["rollingadler32",3]]]],"p":[[3,"RollingAdler32"]]},\
"aho_corasick":{"doc":"A library for finding occurrences of many patterns at…","i":[[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear time.",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular…",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular haystack.",null,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an…",null,null],[3,"Match","","A representation of a match reported by an Aho-Corasick…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an…",null,null],[13,"Standard","","Use standard match semantics, which support overlapping…",0,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",0,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",2,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",3,null],[12,"requested_max","","The maximum ID required by premultiplication.",3,null],[11,"new","aho_corasick","Create a new Aho-Corasick automaton using the default…",4,[[],["ahocorasick",3]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically…",4,[[],["ahocorasick",3]]],[11,"is_match","","Returns true if and only if this automaton matches the…",4,[[["asref",8]]]],[11,"earliest_find","","Returns the location of the first detected match in…",4,[[["asref",8]],[["match",3],["option",4]]]],[11,"find","","Returns the location of the first match according to the…",4,[[["asref",8]],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the…",4,[[],["finditer",3]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given…",4,[[],["findoverlappingiter",3]]],[11,"replace_all","","Replace all matches with a corresponding value in the…",4,[[],["string",3]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding…",4,[[],["vec",3]]],[11,"replace_all_with","","Replace all matches using a closure called on each match.…",4,[[["string",3]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called…",4,[[["vec",3]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the…",4,[[["read",8]],[["streamfinditer",3],["read",8]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in…",4,[[],["result",6]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this…",4,[[],["result",6]]],[11,"match_kind","","Returns the match kind used by this automaton.",4,[[],["matchkind",4]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this…",4,[[]]],[11,"pattern_count","","Return the total number of patterns matched by this…",4,[[]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports…",4,[[]]],[11,"supports_stream","","Returns true if and only if this automaton supports stream…",4,[[]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",4,[[]]],[11,"new","","Create a new builder for configuring an Aho-Corasick…",5,[[],["ahocorasickbuilder",3]]],[11,"build","","Build an Aho-Corasick automaton using the configuration…",5,[[],["ahocorasick",3]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration…",5,[[],[["error",3],["ahocorasick",3],["result",4]]]],[11,"auto_configure","","Automatically configure the settings on this builder…",5,[[],["ahocorasickbuilder",3]]],[11,"match_kind","","Set the desired match semantics.",5,[[["matchkind",4]],["ahocorasickbuilder",3]]],[11,"anchored","","Enable anchored mode, which requires all matches to start…",5,[[],["ahocorasickbuilder",3]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",5,[[],["ahocorasickbuilder",3]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense…",5,[[],["ahocorasickbuilder",3]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a…",5,[[],["ahocorasickbuilder",3]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",5,[[],["ahocorasickbuilder",3]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping…",5,[[],["ahocorasickbuilder",3]]],[11,"premultiply","","Premultiply state identifiers in the transition table.…",5,[[],["ahocorasickbuilder",3]]],[11,"kind","","Return the kind of this error.",6,[[],["errorkind",4]]],[0,"packed","","A lower level API for packed multiple substring search,…",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a…",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed…",null,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed…",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",7,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",7,null],[11,"new","","Create a new default configuration. A default…",8,[[],["config",3]]],[11,"builder","","Create a packed builder from this configuration. The…",8,[[],["builder",3]]],[11,"match_kind","","Set the match semantics for this configuration.",8,[[["matchkind",4]],["config",3]]],[11,"new","","Create a new builder for constructing a multi-pattern…",9,[[],["builder",3]]],[11,"build","","Build a searcher from the patterns added to this builder…",9,[[],[["searcher",3],["option",4]]]],[11,"add","","Add the given pattern to this set to match.",9,[[["asref",8]],["builder",3]]],[11,"extend","","Add the given iterator of patterns to this set to match.",9,[[],["builder",3]]],[11,"new","","A convenience function for constructing a searcher from an…",10,[[],[["searcher",3],["option",4]]]],[11,"find","","Return the first occurrence of any of the patterns in this…",10,[[["asref",8]],[["match",3],["option",4]]]],[11,"find_at","","Return the first occurrence of any of the patterns in this…",10,[[["asref",8]],[["match",3],["option",4]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the…",10,[[],["finditer",3]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",10,[[],["matchkind",4]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required…",10,[[]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",10,[[]]],[8,"StateID","aho_corasick","A trait describing the representation of an automaton\'s…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation\'s…",11,[[]]],[10,"to_usize","","Convert this implementation\'s representation to a `usize`.",11,[[]]],[10,"max_id","","Return the maximum state identifier supported by this…",11,[[]]],[11,"pattern","","Returns the identifier of the pattern that matched.",12,[[]]],[11,"start","","The starting position of the match.",12,[[]]],[11,"end","","The ending position of the match.",12,[[]]],[11,"is_empty","","Returns true if and only if this match is empty. That is,…",12,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","aho_corasick::packed","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"next","aho_corasick","",13,[[],[["match",3],["option",4]]]],[11,"next","","",14,[[],[["match",3],["option",4]]]],[11,"next","","",15,[[],[["option",4],["result",6]]]],[11,"next","aho_corasick::packed","",16,[[],[["match",3],["option",4]]]],[11,"clone","aho_corasick","",4,[[],["ahocorasick",3]]],[11,"clone","","",5,[[],["ahocorasickbuilder",3]]],[11,"clone","","",0,[[],["matchkind",4]]],[11,"clone","","",6,[[],["error",3]]],[11,"clone","","",1,[[],["errorkind",4]]],[11,"clone","aho_corasick::packed","",7,[[],["matchkind",4]]],[11,"clone","","",8,[[],["config",3]]],[11,"clone","","",9,[[],["builder",3]]],[11,"clone","","",10,[[],["searcher",3]]],[11,"clone","aho_corasick","",12,[[],["match",3]]],[11,"default","","",5,[[],["ahocorasickbuilder",3]]],[11,"default","","",0,[[],["matchkind",4]]],[11,"default","aho_corasick::packed","",7,[[],["matchkind",4]]],[11,"default","","",8,[[],["config",3]]],[11,"default","","",9,[[],["builder",3]]],[11,"eq","aho_corasick","",0,[[["matchkind",4]]]],[11,"eq","aho_corasick::packed","",7,[[["matchkind",4]]]],[11,"eq","aho_corasick","",12,[[["match",3]]]],[11,"ne","","",12,[[["match",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick::packed","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",12,[[]]],[11,"description","","",6,[[]]]],"p":[[4,"MatchKind"],[4,"ErrorKind"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[3,"AhoCorasick"],[3,"AhoCorasickBuilder"],[3,"Error"],[4,"MatchKind"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"FindIter"]]},\
"ansi_term":{"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style\'s foreground colour, if it has one.",0,null],[12,"background","","The style\'s background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings",6]]],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings",6]]],[11,"prefix","","The prefix for this style.",0,[[],["prefix",3]]],[11,"infix","","The infix between this style and another.",0,[[["style",3]],["infix",3]]],[11,"suffix","","The suffix for this style.",0,[[],["suffix",3]]],[11,"prefix","","The prefix for this colour.",2,[[],["prefix",3]]],[11,"infix","","The infix between this colour and another.",2,[[["colour",4]],["infix",3]]],[11,"suffix","","The suffix for this colour.",2,[[],["suffix",3]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[],["style",3]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["colour",4]],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour",4]],["style",3]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["colour",4]],["style",3]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",3,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",1,[[],["result",6]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour",4]],["style",3]]],[11,"from","","",3,[[],["ansigenericstring",3]]],[11,"clone","","",4,[[],["prefix",3]]],[11,"clone","","",5,[[],["infix",3]]],[11,"clone","","",6,[[],["suffix",3]]],[11,"clone","","",0,[[],["style",3]]],[11,"clone","","",2,[[],["colour",4]]],[11,"clone","","",3,[[],["ansigenericstring",3]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style",3]]],[11,"eq","","",0,[[["style",3]]]],[11,"ne","","",0,[[["style",3]]]],[11,"eq","","",2,[[["colour",4]]]],[11,"ne","","",2,[[["colour",4]]]],[11,"eq","","",3,[[["ansigenericstring",3]]]],[11,"ne","","",3,[[["ansigenericstring",3]]]],[11,"deref","","",3,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[],["result",6]]]],"p":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"atty":{"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream",4]]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream",4]]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["stream",4]]]],"p":[[4,"Stream"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain…","i":[[4,"PodCastError","bytemuck","The things that can go wrong when casting between [`Pod`]…",null,null],[13,"TargetAlignmentGreaterAndInputNotAligned","","You tried to cast a slice to an element type with a higher…",0,null],[13,"OutputSliceWouldHaveSlop","","If the element size changes then the output slice changes…",0,null],[13,"SizeMismatch","","When casting a slice you can\'t convert between ZST…",0,null],[13,"AlignmentMismatch","","For this type of cast the alignments must be exactly the…",0,null],[5,"bytes_of","","Re-interprets `&T` as `&[u8]`.",null,[[]]],[5,"bytes_of_mut","","Re-interprets `&mut T` as `&mut [u8]`.",null,[[]]],[5,"from_bytes","","Re-interprets `&[u8]` as `&T`.",null,[[]]],[5,"from_bytes_mut","","Re-interprets `&mut [u8]` as `&mut T`.",null,[[]]],[5,"try_from_bytes","","Re-interprets `&[u8]` as `&T`.",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_from_bytes_mut","","Re-interprets `&mut [u8]` as `&mut T`.",null,[[],[["podcasterror",4],["result",4]]]],[5,"cast","","Cast `T` into `U`",null,[[["pod",8]],["pod",8]]],[5,"cast_mut","","Cast `&mut T` into `&mut U`.",null,[[]]],[5,"cast_ref","","Cast `&T` into `&U`.",null,[[]]],[5,"cast_slice","","Cast `&[A]` into `&[B]`.",null,[[]]],[5,"cast_slice_mut","","Cast `&mut [T]` into `&mut [U]`.",null,[[]]],[5,"pod_align_to","","As `align_to`, but safe because of the [`Pod`] bound.",null,[[]]],[5,"pod_align_to_mut","","As `align_to_mut`, but safe because of the [`Pod`] bound.",null,[[]]],[5,"try_cast","","Try to cast `T` into `U`.",null,[[["pod",8]],[["pod",8],["podcasterror",4],["result",4]]]],[5,"try_cast_ref","","Try to convert a `&T` into `&U`.",null,[[],[["podcasterror",4],["result",4]]]],[5,"try_cast_mut","","Try to convert a `&mut T` into `&mut U`.",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_cast_slice","","Try to convert `&[A]` into `&[B]` (possibly with a change…",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_cast_slice_mut","","Try to convert `&mut [A]` into `&mut [B]` (possibly with a…",null,[[],[["result",4],["podcasterror",4]]]],[8,"Zeroable","","Trait for types that can be safely created with `zeroed`.",null,null],[11,"zeroed","","Calls `zeroed`.",1,[[]]],[8,"Pod","","Marker trait for \\\"plain old data\\\".",null,null],[8,"Contiguous","","A trait indicating that:",null,null],[16,"Int","","The primitive integer type with an identical…",2,null],[18,"MAX_VALUE","","The upper inclusive bound for valid instances of this type.",2,null],[18,"MIN_VALUE","","The lower inclusive bound for valid instances of this type.",2,null],[11,"from_integer","","If `value` is within the range for valid instances of this…",2,[[],["option",4]]],[11,"into_integer","","Perform the conversion from `C` into the underlying…",2,[[]]],[8,"TransparentWrapper","","A trait which indicates that a type is a…",null,null],[11,"wrap_ref","","Convert a reference to a wrapped type into a reference to…",3,[[]]],[11,"wrap_mut","","Convert a mut reference to a wrapped type into a mut…",3,[[]]],[14,"offset_of","","Find the offset in bytes of the given `$field` of `$Type`.…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["podcasterror",4]]]],[11,"hash","","",0,[[]]],[11,"clone","","",0,[[],["podcasterror",4]]],[11,"zeroed","","Calls `zeroed`.",1,[[]]],[18,"MAX_VALUE","","The upper inclusive bound for valid instances of this type.",2,null],[18,"MIN_VALUE","","The lower inclusive bound for valid instances of this type.",2,null],[11,"from_integer","","If `value` is within the range for valid instances of this…",2,[[],["option",4]]],[11,"into_integer","","Perform the conversion from `C` into the underlying…",2,[[]]],[11,"wrap_ref","","Convert a reference to a wrapped type into a reference to…",3,[[]]],[11,"wrap_mut","","Convert a mut reference to a wrapped type into a mut…",3,[[]]]],"p":[[4,"PodCastError"],[8,"Zeroable"],[8,"Contiguous"],[8,"TransparentWrapper"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[],["result",6]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[]]],[11,"read_u32","","",3,[[]]],[11,"read_u64","","",3,[[]]],[11,"read_u128","","",3,[[]]],[11,"read_uint","","",3,[[]]],[11,"read_uint128","","",3,[[]]],[11,"write_u16","","",3,[[]]],[11,"write_u32","","",3,[[]]],[11,"write_u64","","",3,[[]]],[11,"write_u128","","",3,[[]]],[11,"write_uint","","",3,[[]]],[11,"write_uint128","","",3,[[]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[]]],[11,"read_u32","","",4,[[]]],[11,"read_u64","","",4,[[]]],[11,"read_u128","","",4,[[]]],[11,"read_uint","","",4,[[]]],[11,"read_uint128","","",4,[[]]],[11,"write_u16","","",4,[[]]],[11,"write_u32","","",4,[[]]],[11,"write_u64","","",4,[[]]],[11,"write_u128","","",4,[[]]],[11,"write_uint","","",4,[[]]],[11,"write_uint128","","",4,[[]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]]]],[11,"eq","","",4,[[["littleendian",4]]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"clap":{"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"App","clap","Used to create a representation of a command line program…",null,null],[3,"Arg","","The abstract representation of a command line argument.…",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",null,null],[3,"ArgMatches","","Used to get information about the arguments that were…",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument…",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument…",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the…",0,null],[4,"AppSettings","","Application level settings, which affect how [`App`]…",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",1,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\\\"itself\\\")`] for all…",1,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",1,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",1,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",1,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",1,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",1,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",1,null],[13,"ColoredHelp","","Uses colorized help messages.",1,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",1,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",1,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",1,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",1,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",1,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` [`App`] without affecting any…",1,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",1,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",1,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",1,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",1,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",1,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",1,null],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",1,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",1,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",1,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",1,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",1,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",1,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",1,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",1,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \\\"VarArg\\\"…",1,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",1,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",1,null],[13,"WaitOnError","","Will display a message \\\"Press [ENTER]/[RETURN] to…",1,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",null,null],[13,"Required","","The argument must be used",2,null],[13,"Multiple","","The argument may be used multiple times such as `--flag…",2,null],[13,"EmptyValues","","The argument allows empty values such as `--option \\\"\\\"`",2,null],[13,"Global","","The argument should be propagated down through all child…",2,null],[13,"Hidden","","The argument should not be shown in help text",2,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",2,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",2,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",2,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",2,null],[13,"HidePossibleValues","","Hides the possible values from the help string",2,null],[13,"AllowLeadingHyphen","","Allows vals that start with a \'-\'",2,null],[13,"RequireEquals","","Require options use `--option=val` syntax",2,null],[13,"Last","","Specifies that the arg is the last positional argument and…",2,null],[13,"HideDefaultValue","","Hides the default value from the help string",2,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",2,null],[13,"HideEnvValues","","Hides ENV values in the help message",2,null],[13,"HiddenShortHelp","","The argument should not be shown in short help text",2,null],[13,"HiddenLongHelp","","The argument should not be shown in long help text",2,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",3,null],[13,"Fish","","Generates a .fish completion file for the Friendly…",3,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",3,null],[13,"PowerShell","","Generates a completion file for PowerShell",3,null],[13,"Elvish","","Generates a completion file for Elvish",3,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",4,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",4,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",4,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",4,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",4,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",4,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",4,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",4,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",4,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",4,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",4,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",4,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",4,null],[13,"HelpDisplayed","","Not a true \\\"error\\\" as it means `--help` or similar was…",4,null],[13,"VersionDisplayed","","Not a true \\\"error\\\" as it means `--version` or similar was…",4,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",4,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",4,null],[13,"Format","","Represents a [Format error] (which is a part of…",4,null],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["string",3],["into",8]]]],[11,"get_name","","Get the name of the app",5,[[]]],[11,"get_bin_name","","Get the name of the binary",5,[[],["option",4]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["string",3],["into",8]]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["into",8]]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["string",3],["into",8]]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"name","","Sets the program\'s name. This will be displayed when…",5,[[["string",3],["into",8]]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["into",8]]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["into",8]]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["asref",8]]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",5,[[["asref",8]]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["into",8]]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["into",8]]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["into",8]]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["appsettings",4]]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,[[]]],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["appsettings",4]]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,[[]]],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["appsettings",4]]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",5,[[]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["into",8],["arg",3]]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,[[]]],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",5,[[]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",5,[[]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",5,[[["into",8]]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",5,[[]]],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",5,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",5,[[]]],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["arggroup",3]]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[]]],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app",3]]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",5,[[]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[],["clapresult",6]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[],["clapresult",6]]],[11,"write_help","","Writes the full help message to the user to a…",5,[[],["clapresult",6]]],[11,"write_long_help","","Writes the full help message to the user to a…",5,[[],["clapresult",6]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",5,[[],["clapresult",6]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",5,[[],["clapresult",6]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["string",3],["into",8],["into",8],["osstring",3],["shell",4]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["string",3],["into",8],["shell",4]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[],["argmatches",3]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",5,[[],["argmatches",3]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",6,[[]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",6,[[]]],[11,"short","","Sets the short version of the argument without the…",6,[[["asref",8]]]],[11,"long","","Sets the long version of the argument without the…",6,[[]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \\\"hidden\\\"…",6,[[["into",8]]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \\\"hidden\\\"…",6,[[]]],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",6,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",6,[[]]],[11,"help","","Sets the short help text of the argument that will be…",6,[[]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[]]],[11,"required_unless","","Sets an arg that override this arg\'s required setting.…",6,[[]]],[11,"required_unless_all","","Sets args that override this arg\'s required setting. (i.e.…",6,[[]]],[11,"required_unless_one","","Sets args that override this arg\'s [required] setting.…",6,[[]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",6,[[]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,[[]]],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,[[]]],[11,"required_if","","Allows specifying that an argument is [required]…",6,[[]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",6,[[]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,[[]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[]]],[11,"hidden","","Hides an argument from help message output.",6,[[]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,[[]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",6,[[]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]\'s the…",6,[[]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,[[]]],[11,"value_name","","Specifies the name for value of [option] or [positional]…",6,[[]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["osstr",3]]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["option",4]]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["option",4],["osstr",3]]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,[[]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,[[]]],[11,"env","","Specifies that if the value is not passed in as an…",6,[[]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["osstr",3]]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",6,[[["argsettings",4]]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings",4]]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings",4]]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["asref",8]],["option",4]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["asref",8]],[["option",4],["cow",4]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["asref",8]],[["osstr",3],["option",4]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["asref",8]],[["values",3],["option",4]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["asref",8]],[["option",4],["vec",3]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["asref",8]],[["option",4],["osvalues",3]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["asref",8]]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["asref",8]]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["asref",8]],["option",4]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["asref",8]],[["indices",3],["option",4]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \\\"sub-[`App`]s\\\"…",7,[[["asref",8]],[["option",4],["argmatches",3]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \\\"sub-[`App`]s\\\"…",7,[[],["option",4]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,[[]]],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[]]],[11,"arg","","Adds an [argument] to this group by name",8,[[]]],[11,"args","","Adds multiple [arguments] to this group by name",8,[[]]],[11,"multiple","","Allows more than one of the [\'Arg\']s in this group to be…",8,[[]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,[[]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,[[]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",9,[[],["app",3]]],[11,"variants","","A list of possible variants in `&\'static str` form",3,[[]]],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,[[]]],[11,"with_description","","Create an error with a custom description.",0,[[["errorkind",4]]]],[6,"Result","","Short hand for [`Result`] type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with…",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your…",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your…",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",null,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[["arg",3]]]],[11,"from","","",8,[[["arggroup",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",10,[[],[["option",4],["osstr",3]]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",10,[[],[["option",4],["osstr",3]]]],[11,"size_hint","","",10,[[]]],[11,"clone","","",1,[[],["appsettings",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["arg",3]]],[11,"clone","","",7,[[],["argmatches",3]]],[11,"clone","","",11,[[],["values",3]]],[11,"clone","","",10,[[],["osvalues",3]]],[11,"clone","","",8,[[]]],[11,"clone","","",2,[[],["argsettings",4]]],[11,"clone","","",9,[[],["subcommand",3]]],[11,"clone","","",3,[[],["shell",4]]],[11,"clone","","",4,[[],["errorkind",4]]],[11,"default","","",6,[[],["arg",3]]],[11,"default","","",7,[[]]],[11,"default","","",11,[[]]],[11,"default","","",10,[[]]],[11,"default","","",8,[[],["arggroup",3]]],[11,"eq","","",1,[[["appsettings",4]]]],[11,"eq","","",6,[[["arg",3]]]],[11,"eq","","",2,[[["argsettings",4]]]],[11,"eq","","",4,[[["errorkind",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[],["result",4]]],[11,"from_str","","",2,[[],["result",4]]],[11,"from_str","","",3,[[],["result",4]]],[11,"description","","",0,[[]]]],"p":[[3,"Error"],[4,"AppSettings"],[4,"ArgSettings"],[4,"Shell"],[4,"ErrorKind"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"SubCommand"],[3,"OsValues"],[3,"Values"]]},\
"color_quant":{"doc":"Color quantization library","i":[[3,"NeuQuant","color_quant","",null,null],[11,"new","","Creates a new neuronal network and trains it with the…",0,[[]]],[11,"init","","Initializes the neuronal network and trains it with the…",0,[[]]],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color in…",0,[[]]],[11,"index_of","","Finds the best-matching index in the color map.",0,[[]]],[11,"lookup","","Lookup pixel values for color at `idx` in the colormap.",0,[[],["option",4]]],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample.",0,[[],["vec",3]]],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample.",0,[[],["vec",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"NeuQuant"]]},\
"const_fn":{"doc":"An attribute for easy generation of const functions with…","i":[[23,"const_fn","const_fn","An attribute for easy generation of const functions with…",null,null]],"p":[]},\
"crc32fast":{"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",null,null],[11,"new","","Create a new `Hasher`.",0,[[]]],[11,"new_with_initial","","Create a new `Hasher` with an initial CRC32 state.",0,[[]]],[11,"update","","Process the given byte slice and update the hash state.",0,[[]]],[11,"finalize","","Finalize the hash state and return the computed CRC32 value.",0,[[]]],[11,"reset","","Reset the hash state.",0,[[]]],[11,"combine","","Combine the hash state with the hash state for the…",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["hasher",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"write","","",0,[[]]],[11,"finish","","",0,[[]]]],"p":[[3,"Hasher"]]},\
"crossbeam_channel":{"doc":"Multi-producer multi-consumer channels for message passing.","i":[[3,"IntoIter","crossbeam_channel","A blocking iterator over messages in a channel.",null,null],[3,"Iter","","A blocking iterator over messages in a channel.",null,null],[3,"TryIter","","A non-blocking iterator over messages in a channel.",null,null],[3,"Receiver","","The receiving side of a channel.",null,null],[3,"Sender","","The sending side of a channel.",null,null],[3,"Select","","Selects from a set of channel operations.",null,null],[3,"SelectedOperation","","A selected operation that needs to be completed.",null,null],[3,"ReadyTimeoutError","","An error returned from the [`ready_timeout`] method.",null,null],[3,"SelectTimeoutError","","An error returned from the [`select_timeout`] method.",null,null],[3,"TryReadyError","","An error returned from the [`try_ready`] method.",null,null],[3,"TrySelectError","","An error returned from the [`try_select`] method.",null,null],[3,"RecvError","","An error returned from the [`recv`] method.",null,null],[3,"SendError","","An error returned from the [`send`] method.",null,null],[12,"0","","",0,null],[4,"RecvTimeoutError","","An error returned from the [`recv_timeout`] method.",null,null],[13,"Timeout","","A message could not be received because the channel is…",1,null],[13,"Disconnected","","The message could not be received because the channel is…",1,null],[4,"TryRecvError","","An error returned from the [`try_recv`] method.",null,null],[13,"Empty","","A message could not be received because the channel is…",2,null],[13,"Disconnected","","The message could not be received because the channel is…",2,null],[4,"SendTimeoutError","","An error returned from the [`send_timeout`] method.",null,null],[13,"Timeout","","The message could not be sent because the channel is full…",3,null],[13,"Disconnected","","The message could not be sent because the channel is…",3,null],[4,"TrySendError","","An error returned from the [`try_send`] method.",null,null],[13,"Full","","The message could not be sent because the channel is full.",4,null],[13,"Disconnected","","The message could not be sent because the channel is…",4,null],[5,"after","","Creates a receiver that delivers a message after a certain…",null,[[["duration",3]],[["receiver",3],["instant",3]]]],[5,"at","","Creates a receiver that delivers a message at a certain…",null,[[["instant",3]],[["receiver",3],["instant",3]]]],[5,"never","","Creates a receiver that never delivers messages.",null,[[],["receiver",3]]],[5,"tick","","Creates a receiver that delivers messages periodically.",null,[[["duration",3]],[["receiver",3],["instant",3]]]],[5,"bounded","","Creates a channel of bounded capacity.",null,[[]]],[5,"unbounded","","Creates a channel of unbounded capacity.",null,[[]]],[11,"try_send","","Attempts to send a message into the channel without…",5,[[],[["trysenderror",4],["result",4]]]],[11,"send","","Blocks the current thread until a message is sent or the…",5,[[],[["senderror",3],["result",4]]]],[11,"send_timeout","","Waits for a message to be sent into the channel, but only…",5,[[["duration",3]],[["result",4],["sendtimeouterror",4]]]],[11,"send_deadline","","Waits for a message to be sent into the channel, but only…",5,[[["instant",3]],[["result",4],["sendtimeouterror",4]]]],[11,"is_empty","","Returns `true` if the channel is empty.",5,[[]]],[11,"is_full","","Returns `true` if the channel is full.",5,[[]]],[11,"len","","Returns the number of messages in the channel.",5,[[]]],[11,"capacity","","If the channel is bounded, returns its capacity.",5,[[],["option",4]]],[11,"same_channel","","Returns `true` if senders belong to the same channel.",5,[[["sender",3]]]],[11,"try_recv","","Attempts to receive a message from the channel without…",6,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Blocks the current thread until a message is received or…",6,[[],[["result",4],["recverror",3]]]],[11,"recv_timeout","","Waits for a message to be received from the channel, but…",6,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_deadline","","Waits for a message to be received from the channel, but…",6,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"is_empty","","Returns `true` if the channel is empty.",6,[[]]],[11,"is_full","","Returns `true` if the channel is full.",6,[[]]],[11,"len","","Returns the number of messages in the channel.",6,[[]]],[11,"capacity","","If the channel is bounded, returns its capacity.",6,[[],["option",4]]],[11,"iter","","A blocking iterator over messages in the channel.",6,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over messages in the channel.",6,[[],["tryiter",3]]],[11,"same_channel","","Returns `true` if receivers belong to the same channel.",6,[[["receiver",3]]]],[11,"into_inner","","Unwraps the message.",0,[[]]],[11,"into_inner","","Unwraps the message.",4,[[]]],[11,"is_full","","Returns `true` if the send operation failed because the…",4,[[]]],[11,"is_disconnected","","Returns `true` if the send operation failed because the…",4,[[]]],[11,"into_inner","","Unwraps the message.",3,[[]]],[11,"is_timeout","","Returns `true` if the send operation timed out.",3,[[]]],[11,"is_disconnected","","Returns `true` if the send operation failed because the…",3,[[]]],[11,"is_empty","","Returns `true` if the receive operation failed because the…",2,[[]]],[11,"is_disconnected","","Returns `true` if the receive operation failed because the…",2,[[]]],[11,"is_timeout","","Returns `true` if the receive operation timed out.",1,[[]]],[11,"is_disconnected","","Returns `true` if the receive operation failed because the…",1,[[]]],[11,"new","","Creates an empty list of channel operations for selection.",7,[[],["select",3]]],[11,"send","","Adds a send operation.",7,[[["sender",3]]]],[11,"recv","","Adds a receive operation.",7,[[["receiver",3]]]],[11,"remove","","Removes a previously added operation.",7,[[]]],[11,"try_select","","Attempts to select one of the operations without blocking.",7,[[],[["selectedoperation",3],["tryselecterror",3],["result",4]]]],[11,"select","","Blocks until one of the operations becomes ready and…",7,[[],["selectedoperation",3]]],[11,"select_timeout","","Blocks for a limited time until one of the operations…",7,[[["duration",3]],[["result",4],["selectedoperation",3],["selecttimeouterror",3]]]],[11,"select_deadline","","Blocks until a given deadline, or until one of the…",7,[[["instant",3]],[["result",4],["selectedoperation",3],["selecttimeouterror",3]]]],[11,"try_ready","","Attempts to find a ready operation without blocking.",7,[[],[["tryreadyerror",3],["result",4]]]],[11,"ready","","Blocks until one of the operations becomes ready.",7,[[]]],[11,"ready_timeout","","Blocks for a limited time until one of the operations…",7,[[["duration",3]],[["result",4],["readytimeouterror",3]]]],[11,"ready_deadline","","Blocks until a given deadline, or until one of the…",7,[[["instant",3]],[["result",4],["readytimeouterror",3]]]],[11,"index","","Returns the index of the selected operation.",8,[[]]],[11,"send","","Completes the send operation.",8,[[["sender",3]],[["senderror",3],["result",4]]]],[11,"recv","","Completes the receive operation.",8,[[["receiver",3]],[["result",4],["recverror",3]]]],[14,"select","","Selects from a set of channel operations.",null,null],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",4,[[["senderror",3]],["trysenderror",4]]],[11,"from","","",3,[[["senderror",3]],["sendtimeouterror",4]]],[11,"from","","",2,[[["recverror",3]],["tryrecverror",4]]],[11,"from","","",1,[[["recverror",3]],["recvtimeouterror",4]]],[11,"into_iter","","",6,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",0,[[],["senderror",3]]],[11,"clone","","",4,[[],["trysenderror",4]]],[11,"clone","","",3,[[],["sendtimeouterror",4]]],[11,"clone","","",16,[[],["recverror",3]]],[11,"clone","","",2,[[],["tryrecverror",4]]],[11,"clone","","",1,[[],["recvtimeouterror",4]]],[11,"clone","","",15,[[],["tryselecterror",3]]],[11,"clone","","",13,[[],["selecttimeouterror",3]]],[11,"clone","","",14,[[],["tryreadyerror",3]]],[11,"clone","","",12,[[],["readytimeouterror",3]]],[11,"clone","","",7,[[],["select",3]]],[11,"default","","",7,[[],["select",3]]],[11,"eq","","",0,[[["senderror",3]]]],[11,"ne","","",0,[[["senderror",3]]]],[11,"eq","","",4,[[["trysenderror",4]]]],[11,"ne","","",4,[[["trysenderror",4]]]],[11,"eq","","",3,[[["sendtimeouterror",4]]]],[11,"ne","","",3,[[["sendtimeouterror",4]]]],[11,"eq","","",16,[[["recverror",3]]]],[11,"eq","","",2,[[["tryrecverror",4]]]],[11,"eq","","",1,[[["recvtimeouterror",4]]]],[11,"eq","","",15,[[["tryselecterror",3]]]],[11,"eq","","",13,[[["selecttimeouterror",3]]]],[11,"eq","","",14,[[["tryreadyerror",3]]]],[11,"eq","","",12,[[["readytimeouterror",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]]],"p":[[3,"SendError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"SendTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"Receiver"],[3,"Select"],[3,"SelectedOperation"],[3,"IntoIter"],[3,"Iter"],[3,"TryIter"],[3,"ReadyTimeoutError"],[3,"SelectTimeoutError"],[3,"TryReadyError"],[3,"TrySelectError"],[3,"RecvError"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","i":[[3,"Injector","crossbeam_deque","An injector queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Worker","","A worker queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker",3]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker",3]]],[11,"stealer","","Creates a stealer for this queue.",1,[[],["stealer",3]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[]]],[11,"len","","Returns the number of tasks in the deque.",1,[[]]],[11,"push","","Pushes a task into the queue.",1,[[]]],[11,"pop","","Pops a task from the queue.",1,[[],["option",4]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[]]],[11,"steal","","Steals a task from the queue.",2,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker",3]],["steal",4]]],[11,"new","","Creates a new injector queue.",3,[[],["injector",3]]],[11,"push","","Pushes a task into the queue.",3,[[]]],[11,"steal","","Steals a task from the queue.",3,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker",3]],["steal",4]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[]]],[11,"len","","Returns the number of tasks in the queue.",3,[[]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option",4]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[],["steal",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"drop","","",3,[[]]],[11,"clone","","",2,[[],["stealer",3]]],[11,"clone","","",0,[[],["steal",4]]],[11,"default","","",3,[[]]],[11,"eq","","",0,[[["steal",4]]]],[11,"ne","","",0,[[["steal",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[],["steal",4]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard",3]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector",3]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[]]],[5,"pin","","Pins the current thread.",null,[[],["guard",3]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[],["atomic",3]]],[11,"init","","Allocates `value` on the heap and returns a new atomic…",1,[[],["atomic",3]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic",3]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \\\"consume\\\"…",1,[[["guard",3]],["shared",3]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering",4],["pointer",8]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering",4],["pointer",8],["guard",3]],["shared",3]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["shared",3],["guard",3]],[["shared",3],["result",4],["compareandseterror",3]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["shared",3],["guard",3]],[["shared",3],["result",4],["compareandseterror",3]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current tag.",1,[[["ordering",4],["guard",3]],["shared",3]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned",3]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned",3]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box",3]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[],["owned",3]]],[11,"init","","Allocates `value` on the heap and returns a new owned…",2,[[],["owned",3]]],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["guard",3]],["shared",3]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[],["owned",3]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[]]],[11,"null","","Returns a new null pointer.",3,[[],["shared",3]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[]]],[11,"deref","","Dereferences the pointer.",3,[[]]],[11,"deref_mut","","Dereferences the pointer.",3,[[]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[],["option",4]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned",3]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[],["shared",3]]],[11,"new","","Creates a new collector.",4,[[]]],[11,"register","","Registers a new handle for the collector.",4,[[],["localhandle",3]]],[11,"pin","","Pins the handle.",5,[[],["guard",3]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[],["collector",3]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["shared",3]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[],[["collector",3],["option",4]]]],[8,"Pointable","","Types that are pointed to by a single word.",null,null],[18,"ALIGN","","The alignment of pointer.",7,null],[16,"Init","","The type for initializers.",7,null],[10,"init","","Initializes a with the given initializer.",7,[[]]],[10,"deref","","Dereferences the given pointer.",7,[[]]],[10,"deref_mut","","Mutably dereferences the given pointer.",7,[[]]],[10,"drop","","Drops the object pointed to by the given pointer.",7,[[]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",8,[[],["ordering",4]]],[10,"failure","","The ordering of the operation when it fails.",8,[[],["ordering",4]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",9,[[]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",9,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_usize","","",2,[[]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[]]],[11,"into_usize","","",3,[[]]],[11,"from_usize","","",3,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"as_mut","","",2,[[]]],[11,"as_ref","","",2,[[]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned",3]]]],[11,"from","","",1,[[["box",3]]]],[11,"from","","",1,[[]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared",3]]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box",3]]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[]]],[11,"clone","","Returns a copy of the atomic value.",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[]]],[11,"default","","",1,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"eq","","",3,[[]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["collector",3]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[18,"ALIGN","","The alignment of pointer.",7,null]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"Pointable"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[],["atomiccell",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",0,[[]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[]]],[11,"store","","Stores `val` into the atomic cell.",0,[[]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[]]],[11,"load","","Loads a value from the atomic cell.",0,[[]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[],["result",4]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns the…",0,[[]]],[11,"fetch_and","","Applies logical \\\"and\\\" to the current value and returns the…",0,[[]]],[11,"fetch_or","","Applies logical \\\"or\\\" to the current value and returns the…",0,[[]]],[11,"fetch_xor","","Applies logical \\\"xor\\\" to the current value and returns the…",0,[[]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \\\"consume\\\" memory…",1,[[]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner value.",2,[[]]],[11,"new","","Creates a new `Backoff`.",3,[[]]],[11,"reset","","Resets the `Backoff`.",3,[[]]],[11,"spin","","Backs off in a lock-free loop.",3,[[]]],[11,"snooze","","Backs off in a blocking loop.",3,[[]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker",3]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["duration",3]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[],["unparker",3]]],[11,"into_raw","","Converts a `Parker` into a raw pointer.",4,[[["parker",3]]]],[11,"from_raw","","Converts a raw pointer into a `Parker`.",4,[[],["parker",3]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[]]],[11,"into_raw","","Converts an `Unparker` into a raw pointer.",5,[[["unparker",3]]]],[11,"from_raw","","Converts a raw pointer into an `Unparker`.",5,[[],["unparker",3]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[],["shardedlock",3]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult",6]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[],["lockresult",6]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[],[["trylockresult",6],["shardedlockreadguard",3]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[],[["lockresult",6],["shardedlockreadguard",3]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[],[["shardedlockwriteguard",3],["trylockresult",6]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[],[["shardedlockwriteguard",3],["lockresult",6]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[],["result",6]]],[11,"spawn","","Spawns a scoped thread.",8,[[],["scopedjoinhandle",3]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[],["scopedthreadbuilder",3]]],[11,"name","","Sets the name for the new thread.",9,[[["string",3]],["scopedthreadbuilder",3]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[],["scopedthreadbuilder",3]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[],[["result",6],["scopedjoinhandle",3]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result",6]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[],["thread",3]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","crossbeam_utils::atomic","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","crossbeam_utils::sync","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","crossbeam_utils::thread","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","crossbeam_utils::sync","",12,[[]]],[11,"drop","","",7,[[]]],[11,"from","crossbeam_utils::atomic","",0,[[],["atomiccell",3]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"from","crossbeam_utils::sync","",6,[[]]],[11,"clone","crossbeam_utils","",2,[[],["cachepadded",3]]],[11,"clone","crossbeam_utils::sync","",5,[[],["unparker",3]]],[11,"clone","","",7,[[],["waitgroup",3]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell",3]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded",3]]],[11,"default","","",3,[[],["backoff",3]]],[11,"default","crossbeam_utils::sync","",4,[[]]],[11,"default","","",6,[[],["shardedlock",3]]],[11,"default","","",7,[[]]],[11,"eq","crossbeam_utils","",2,[[["cachepadded",3]]]],[11,"ne","","",2,[[["cachepadded",3]]]],[11,"deref","","",2,[[]]],[11,"deref","crossbeam_utils::sync","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","crossbeam_utils","",2,[[]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","crossbeam_utils","",2,[[]]],[11,"as_pthread_t","crossbeam_utils::thread","",10,[[],["rawpthread",6]]],[11,"into_pthread_t","","",10,[[],["rawpthread",6]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression…","i":[[3,"CompressionOptions","deflate","A struct describing the options for a compressor or…",null,null],[12,"max_hash_checks","","The maximum number of checks to make in the hash table for…",0,null],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",0,null],[12,"matching_type","","Whether to use lazy or greedy matching.",0,null],[12,"special","","Force fixed/stored blocks (Not implemented yet). * Default…",0,null],[4,"Compression","","An enum describing the level of compression to be used by…",null,null],[13,"Fast","","Fast minimal compression (`CompressionOptions::fast()`).",1,null],[13,"Default","","Default level (`CompressionOptions::default()`).",1,null],[13,"Best","","Higher compression level (`CompressionOptions::high()`).",1,null],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",null,null],[13,"Normal","","Compress normally.",2,null],[13,"_ForceFixed","","Force fixed Huffman tables. (Unimplemented!).",2,null],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",2,null],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",null,null],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a…",3,null],[13,"Lazy","","Use lazy matching: after finding a match, the next input…",3,null],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE compression.",null,[[["into",8],["compressionoptions",3]],["vec",3]]],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE compression…",null,[[],["vec",3]]],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE…",null,[[["into",8],["compressionoptions",3]],["vec",3]]],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE…",null,[[],["vec",3]]],[11,"high","","Returns compression settings roughly corresponding to the…",0,[[],["compressionoptions",3]]],[11,"fast","","Returns  a fast set of compression settings",0,[[],["compressionoptions",3]]],[11,"huffman_only","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions",3]]],[11,"rle","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions",3]]],[0,"write","","Encoders implementing a `Write` interface.",null,null],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",null,null],[3,"ZlibEncoder","","A Zlib encoder/compressor.",null,null],[11,"from","deflate","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","deflate::write","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",4,[[]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[]]],[11,"from","deflate","",0,[[["compression",4]],["compressionoptions",3]]],[11,"clone","","",1,[[],["compression",4]]],[11,"clone","","",2,[[],["specialoptions",4]]],[11,"clone","","",0,[[],["compressionoptions",3]]],[11,"clone","","",3,[[],["matchingtype",4]]],[11,"default","","",1,[[],["compression",4]]],[11,"default","","",2,[[],["specialoptions",4]]],[11,"default","","Returns the options describing the default compression…",0,[[],["compressionoptions",3]]],[11,"cmp","","",1,[[["compression",4]],["ordering",4]]],[11,"cmp","","",3,[[["matchingtype",4]],["ordering",4]]],[11,"eq","","",1,[[["compression",4]]]],[11,"eq","","",2,[[["specialoptions",4]]]],[11,"eq","","",0,[[["compressionoptions",3]]]],[11,"ne","","",0,[[["compressionoptions",3]]]],[11,"eq","","",3,[[["matchingtype",4]]]],[11,"partial_cmp","","",1,[[["compression",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["matchingtype",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"write","deflate::write","",4,[[],["result",6]]],[11,"flush","","Flush the encoder.",4,[[],["result",6]]],[11,"write","","",5,[[],["result",6]]],[11,"flush","","Flush the encoder.",5,[[],["result",6]]],[11,"new","","Creates a new encoder using the provided compression…",4,[[["into",8],["compressionoptions",3]],["deflateencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume…",4,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options),…",4,[[],["result",6]]],[11,"new","","Create a new `ZlibEncoder` using the provided compression…",5,[[["into",8],["compressionoptions",3]],["zlibencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume…",5,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options),…",5,[[],["result",6]]],[11,"checksum","","Return the adler32 checksum of the currently consumed data.",5,[[]]]],"p":[[3,"CompressionOptions"],[4,"Compression"],[4,"SpecialOptions"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]},\
"either":{"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[]]],[11,"expect_right","","Returns the right value",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"hash","","",0,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"extend","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"clone","","",0,[[],["either",4]]]],"p":[[4,"Either"]]},\
"gif":{"doc":"GIF en- and decoding library Build Status","i":[[3,"AnyExtension","gif","A newtype wrapper around an arbitrary extension ID.",null,null],[12,"0","","",0,null],[3,"Frame","","A GIF frame",null,null],[12,"delay","","Frame delay in units of 10 ms.",1,null],[12,"dispose","","Disposal method.",1,null],[12,"transparent","","Transparent index (if available).",1,null],[12,"needs_user_input","","True if the frame needs user input to be displayed.",1,null],[12,"top","","Offset from the top border of the canvas.",1,null],[12,"left","","Offset from the left border of the canvas.",1,null],[12,"width","","Width of the frame.",1,null],[12,"height","","Height of the frame.",1,null],[12,"interlaced","","True if the image is interlaced.",1,null],[12,"palette","","Frame local color palette if available.",1,null],[12,"buffer","","Buffer containing the image data. Only indices unless…",1,null],[3,"StreamingDecoder","","GIF decoder which supports streaming",null,null],[3,"DecodingFormatError","","An error returned in the case of the image not being…",null,null],[3,"MemoryLimit","","Memory limit in bytes. `MemoryLimit::Some(0)` means that…",null,null],[12,"0","","",2,null],[3,"DecodeOptions","","Options for opening a GIF decoder.",null,null],[3,"Decoder","","GIF decoder",null,null],[3,"Encoder","","GIF encoder.",null,null],[4,"Block","","Known GIF block labels.",null,null],[13,"Image","","Image block.",3,null],[13,"Extension","","Extension block.",3,null],[13,"Trailer","","Image trailer.",3,null],[4,"Extension","","Known GIF extension labels.",null,null],[13,"Text","","Plain Text extension.",4,null],[13,"Control","","Control extension.",4,null],[13,"Comment","","Comment extension.",4,null],[13,"Application","","Application extension.",4,null],[4,"DisposalMethod","","Disposal method",null,null],[13,"Any","","StreamingDecoder is not required to take any action.",5,null],[13,"Keep","","Do not dispose.",5,null],[13,"Background","","Restore to background color.",5,null],[13,"Previous","","Restore to previous.",5,null],[4,"Decoded","","Indicates whether a certain object has been decoded",null,null],[13,"Nothing","","Decoded nothing.",6,null],[13,"GlobalPalette","","Global palette.",6,null],[13,"BackgroundColor","","Index of the background color in the global palette.",6,null],[13,"Trailer","","Decoded the image trailer.",6,null],[13,"BlockStart","","The start of a block.",6,null],[13,"SubBlockFinished","","Decoded a sub-block. More sub-block are available.",6,null],[13,"BlockFinished","","Decoded the last (or only) sub-block of a block.",6,null],[13,"Frame","","Decoded all information of the next frame.",6,null],[13,"Data","","Decoded some data of the current frame.",6,null],[13,"DataEnd","","No more data available the current frame.",6,null],[4,"DecodingError","","Decoding error.",null,null],[13,"Format","","Returned if the image is found to be malformed.",7,null],[13,"Io","","Wraps `std::io::Error`.",7,null],[4,"ColorOutput","","Output mode for the image data",null,null],[13,"RGBA","","The decoder expands the image data to 32bit RGBA. This…",8,null],[13,"Indexed","","The decoder returns the raw indexed data.",8,null],[4,"Extensions","","Configures how extensions should be handled",null,null],[13,"Save","","Saves all extention data",9,null],[13,"Skip","","Skips the data of unknown extensions and extracts the data…",9,null],[4,"ExtensionData","","Extension data.",null,null],[13,"Control","","Control extension. Use `ExtensionData::new_control_ext` to…",10,null],[12,"flags","gif::ExtensionData","Flags.",11,null],[12,"delay","","Frame delay.",11,null],[12,"trns","","Transparent index.",11,null],[13,"Repetitions","gif","Sets the number of repetitions",10,null],[4,"Repeat","","Number of repetitions",null,null],[13,"Finite","","Finite number of repetitions",12,null],[13,"Infinite","","Infinite number of repetitions",12,null],[4,"EncodingError","","Encoding error.",null,null],[13,"Format","","Returned if the to image is not encodable as a gif.",13,null],[13,"Io","","Wraps `std::io::Error`.",13,null],[11,"from_u8","","Converts `u8` to `Option<Self>`",5,[[],[["option",4],["disposalmethod",4]]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",3,[[],[["option",4],["block",4]]]],[11,"into_known","","Decode the label as a known extension.",0,[[],[["option",4],["extension",4]]]],[11,"from_u8","","Converts `u8` to a `Extension` if it is known.",4,[[],[["option",4],["extension",4]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format. Note: This…",1,[[],["frame",3]]],[11,"from_rgba_speed","","Creates a frame from pixels in RGBA format. `speed` is a…",1,[[],["frame",3]]],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels.",1,[[["option",4]],["frame",3]]],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette.",1,[[["option",4]],["frame",3]]],[11,"from_rgb","","Creates a frame from pixels in RGB format. Note: This…",1,[[],["frame",3]]],[11,"from_rgb_speed","","Creates a frame from pixels in RGB format. `speed` is a…",1,[[],["frame",3]]],[11,"new","","Creates a new streaming decoder",14,[[],["streamingdecoder",3]]],[11,"update","","Updates the internal state of the decoder. ",14,[[],[["result",4],["decodingerror",4]]]],[11,"last_ext","","Returns the data of the last extension that has been…",14,[[]]],[11,"current_frame_mut","","Current frame info as a mutable ref.",14,[[],["frame",3]]],[11,"current_frame","","Current frame info as a ref.",14,[[],["frame",3]]],[11,"width","","Width of the image",14,[[]]],[11,"height","","Height of the image",14,[[]]],[11,"set_extensions","","Configure whether extensions are saved or skipped.",14,[[["extensions",4]]]],[11,"new","","Creates a new decoder builder",15,[[],["decodeoptions",3]]],[11,"set_color_output","","Configure how color data is decoded.",15,[[["coloroutput",4]]]],[11,"set_memory_limit","","Configure a memory limit for decoding.",15,[[["memorylimit",3]]]],[11,"check_frame_consistency","","Configure if frames must be within the screen descriptor.",15,[[]]],[11,"read_info","","Reads the logical screen descriptor including the global…",15,[[["read",8]],[["decodingerror",4],["decoder",3],["result",4]]]],[11,"new","","Create a new decoder with default options.",16,[[],[["decodingerror",4],["result",4]]]],[11,"build","","Return a builder that allows configuring limits etc.",16,[[],["decodeoptions",3]]],[11,"next_frame_info","","Returns the next frame info",16,[[],[["option",4],["result",4],["decodingerror",4]]]],[11,"read_next_frame","","Reads the next frame from the image.",16,[[],[["option",4],["result",4],["decodingerror",4]]]],[11,"read_into_buffer","","Reads the data of the current frame into a pre-allocated…",16,[[],[["decodingerror",4],["result",4]]]],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated…",16,[[],[["decodingerror",4],["result",4]]]],[11,"buffer_size","","Output buffer size",16,[[]]],[11,"line_length","","Line length of the current frame",16,[[]]],[11,"palette","","Returns the color palette relevant for the current (next)…",16,[[],[["decodingerror",4],["result",4]]]],[11,"global_palette","","The global color palette",16,[[],["option",4]]],[11,"width","","Width of the image",16,[[]]],[11,"height","","Height of the image",16,[[]]],[11,"bg_color","","Index of the background color in the global palette",16,[[],["option",4]]],[11,"new_control_ext","","Constructor for control extension data.",10,[[["disposalmethod",4],["option",4]],["extensiondata",4]]],[11,"new","","Creates a new encoder.",17,[[],[["result",4],["encodingerror",4]]]],[11,"set_repeat","","Write an extension block that signals a repeat behaviour.",17,[[["repeat",4]],[["result",4],["encodingerror",4]]]],[11,"write_global_palette","","Writes the global color palette.",17,[[],[["result",4],["encodingerror",4]]]],[11,"write_frame","","Writes a frame to the image.",17,[[["frame",3]],[["result",4],["encodingerror",4]]]],[11,"write_extension","","Writes an extension to the image.",17,[[["extensiondata",4]],[["result",4],["encodingerror",4]]]],[11,"write_raw_extension","","Writes a raw extension to the image.",17,[[["anyextension",3]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"drop","","",17,[[]]],[11,"from","","",0,[[["extension",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["decodingformaterror",3]]]],[11,"from","","",13,[[["error",3]]]],[11,"clone","","",5,[[],["disposalmethod",4]]],[11,"clone","","",3,[[],["block",4]]],[11,"clone","","",0,[[],["anyextension",3]]],[11,"clone","","",4,[[],["extension",4]]],[11,"clone","","",1,[[],["frame",3]]],[11,"clone","","",8,[[],["coloroutput",4]]],[11,"clone","","",2,[[],["memorylimit",3]]],[11,"clone","","",15,[[],["decodeoptions",3]]],[11,"default","","",1,[[],["frame",3]]],[11,"eq","","",5,[[["disposalmethod",4]]]],[11,"eq","","",3,[[["block",4]]]],[11,"eq","","",0,[[["anyextension",3]]]],[11,"ne","","",0,[[["anyextension",3]]]],[11,"eq","","",4,[[["extension",4]]]],[11,"eq","","",9,[[["extensions",4]]]],[11,"eq","","",8,[[["coloroutput",4]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"source","","",18,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"source","","",13,[[],[["option",4],["error",8]]]]],"p":[[3,"AnyExtension"],[3,"Frame"],[3,"MemoryLimit"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[4,"Extensions"],[4,"ExtensionData"],[13,"Control"],[4,"Repeat"],[4,"EncodingError"],[3,"StreamingDecoder"],[3,"DecodeOptions"],[3,"Decoder"],[3,"Encoder"],[3,"DecodingFormatError"]]},\
"image":{"doc":"Overview","i":[[3,"Luma","image","Grayscale colors",null,null],[12,"0","","",0,null],[3,"LumaA","","Grayscale colors + alpha channel",null,null],[12,"0","","",1,null],[3,"Rgb","","RGB colors",null,null],[12,"0","","",2,null],[3,"Rgba","","RGB colors + alpha channel",null,null],[12,"0","","",3,null],[3,"Bgr","","BGR colors",null,null],[12,"0","","",4,null],[3,"Bgra","","BGR colors + alpha channel",null,null],[12,"0","","",5,null],[3,"Progress","","Represents the progress of an image operation.",null,null],[3,"Pixels","","Immutable pixel iterator",null,null],[3,"SubImage","","A View into another image",null,null],[3,"ImageBuffer","","Generic image buffer",null,null],[3,"Delay","","The delay of a frame relative to the previous one.",null,null],[3,"Frame","","A single animation frame",null,null],[3,"Frames","","An implementation dependent iterator, reading the frames…",null,null],[4,"ColorType","","An enumeration over supported color types and bit depths",null,null],[13,"L8","","Pixel is 8-bit luminance",6,null],[13,"La8","","Pixel is 8-bit luminance with an alpha channel",6,null],[13,"Rgb8","","Pixel contains 8-bit R, G and B channels",6,null],[13,"Rgba8","","Pixel is 8-bit RGB with an alpha channel",6,null],[13,"L16","","Pixel is 16-bit luminance",6,null],[13,"La16","","Pixel is 16-bit luminance with an alpha channel",6,null],[13,"Rgb16","","Pixel is 16-bit RGB",6,null],[13,"Rgba16","","Pixel is 16-bit RGBA",6,null],[13,"Bgr8","","Pixel contains 8-bit B, G and R channels",6,null],[13,"Bgra8","","Pixel is 8-bit BGR with an alpha channel",6,null],[4,"ExtendedColorType","","An enumeration of color types encountered in image formats.",null,null],[13,"L1","","Pixel is 1-bit luminance",7,null],[13,"La1","","Pixel is 1-bit luminance with an alpha channel",7,null],[13,"Rgb1","","Pixel contains 1-bit R, G and B channels",7,null],[13,"Rgba1","","Pixel is 1-bit RGB with an alpha channel",7,null],[13,"L2","","Pixel is 2-bit luminance",7,null],[13,"La2","","Pixel is 2-bit luminance with an alpha channel",7,null],[13,"Rgb2","","Pixel contains 2-bit R, G and B channels",7,null],[13,"Rgba2","","Pixel is 2-bit RGB with an alpha channel",7,null],[13,"L4","","Pixel is 4-bit luminance",7,null],[13,"La4","","Pixel is 4-bit luminance with an alpha channel",7,null],[13,"Rgb4","","Pixel contains 4-bit R, G and B channels",7,null],[13,"Rgba4","","Pixel is 4-bit RGB with an alpha channel",7,null],[13,"L8","","Pixel is 8-bit luminance",7,null],[13,"La8","","Pixel is 8-bit luminance with an alpha channel",7,null],[13,"Rgb8","","Pixel contains 8-bit R, G and B channels",7,null],[13,"Rgba8","","Pixel is 8-bit RGB with an alpha channel",7,null],[13,"L16","","Pixel is 16-bit luminance",7,null],[13,"La16","","Pixel is 16-bit luminance with an alpha channel",7,null],[13,"Rgb16","","Pixel contains 16-bit R, G and B channels",7,null],[13,"Rgba16","","Pixel is 16-bit RGB with an alpha channel",7,null],[13,"Bgr8","","Pixel contains 8-bit B, G and R channels",7,null],[13,"Bgra8","","Pixel is 8-bit BGR with an alpha channel",7,null],[13,"Unknown","","Pixel is of unknown color type with the specified bits per…",7,null],[4,"ImageFormat","","An enumeration of supported image formats. Not all formats…",null,null],[13,"Png","","An Image in PNG Format",8,null],[13,"Jpeg","","An Image in JPEG Format",8,null],[13,"Gif","","An Image in GIF Format",8,null],[13,"WebP","","An Image in WEBP Format",8,null],[13,"Pnm","","An Image in general PNM Format",8,null],[13,"Tiff","","An Image in TIFF Format",8,null],[13,"Tga","","An Image in TGA Format",8,null],[13,"Dds","","An Image in DDS Format",8,null],[13,"Bmp","","An Image in BMP Format",8,null],[13,"Ico","","An Image in ICO Format",8,null],[13,"Hdr","","An Image in Radiance HDR Format",8,null],[13,"Farbfeld","","An Image in farbfeld Format",8,null],[13,"Avif","","An Image in AVIF format.",8,null],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",null,null],[13,"Png","","An Image in PNG Format",9,null],[13,"Jpeg","","An Image in JPEG Format with specified quality",9,null],[13,"Pnm","","An Image in one of the PNM Formats",9,null],[13,"Gif","","An Image in GIF Format",9,null],[13,"Ico","","An Image in ICO Format",9,null],[13,"Bmp","","An Image in BMP Format",9,null],[13,"Farbfeld","","An Image in farbfeld Format",9,null],[13,"Tga","","An Image in TGA Format",9,null],[13,"Unsupported","","A value for signalling an error: An unsupported format was…",9,null],[4,"DynamicImage","","A Dynamic Image",null,null],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",10,null],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",10,null],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",10,null],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",10,null],[13,"ImageBgr8","","Each pixel in this image is 8-bit Bgr",10,null],[13,"ImageBgra8","","Each pixel in this image is 8-bit Bgr with alpha",10,null],[13,"ImageLuma16","","Each pixel in this image is 16-bit Luma",10,null],[13,"ImageLumaA16","","Each pixel in this image is 16-bit Luma with alpha",10,null],[13,"ImageRgb16","","Each pixel in this image is 16-bit Rgb",10,null],[13,"ImageRgba16","","Each pixel in this image is 16-bit Rgb with alpha",10,null],[5,"guess_format","","Guess image format from memory block",null,[[],[["imageresult",6],["imageformat",4]]]],[5,"load","","Create a new image from a Reader",null,[[["seek",8],["bufread",8],["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory","","Create a new image from a byte slice",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory_with_format","","Create a new image from a byte slice",null,[[["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"open","","Open the image located at the path specified. The image\'s…",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",null,[[["colortype",4]],["imageresult",6]]],[5,"save_buffer_with_format","","Saves the supplied buffer to a file at the path specified…",null,[[["colortype",4],["imageformat",4]],["imageresult",6]]],[5,"image_dimensions","","Read the dimensions of the image located at the specified…",null,[[],["imageresult",6]]],[0,"error","","Contains detailed error representation.",null,null],[3,"UnsupportedError","image::error","The implementation for an operation was not provided.",null,null],[3,"EncodingError","","An error was encountered while encoding an image.",null,null],[3,"ParameterError","","An error was encountered in inputs arguments.",null,null],[3,"DecodingError","","An error was encountered while decoding an image.",null,null],[3,"LimitError","","Completing the operation would have required more…",null,null],[4,"ImageError","","The generic error type for image operations.",null,null],[13,"Decoding","","An error was encountered while decoding.",11,null],[13,"Encoding","","An error was encountered while encoding.",11,null],[13,"Parameter","","An error was encountered in input arguments.",11,null],[13,"Limits","","Completing the operation would have required more…",11,null],[13,"Unsupported","","An operation can not be completed by the chosen abstraction.",11,null],[13,"IoError","","An error occurred while interacting with the environment.",11,null],[4,"UnsupportedErrorKind","","Details what feature is not supported.",null,null],[13,"Color","","The required color type can not be handled.",12,null],[13,"Format","","An image format is not supported.",12,null],[13,"GenericFeature","","Some feature specified by string. This is discouraged and…",12,null],[4,"ParameterErrorKind","","Details how a parameter is malformed.",null,null],[13,"DimensionMismatch","","The dimensions passed are wrong.",13,null],[13,"FailedAlready","","Repeated an operation for which error that could not be…",13,null],[13,"Generic","","A string describing the parameter. This is discouraged and…",13,null],[13,"NoMoreData","","The end of the image has been reached.",13,null],[4,"LimitErrorKind","","Indicates the limit that prevented an operation from…",null,null],[13,"DimensionError","","The resulting image exceed dimension limits in either…",14,null],[13,"InsufficientMemory","","The operation would have performed an allocation larger…",14,null],[4,"ImageFormatHint","","A best effort representation for image formats.",null,null],[13,"Exact","","The format is known exactly.",15,null],[13,"Name","","The format can be identified by a name.",15,null],[13,"PathExtension","","A common path extension for the format is known.",15,null],[13,"Unknown","","The format is not known or could not be determined.",15,null],[6,"ImageResult","","Result of an image decoding/encoding process",null,null],[11,"from_format_and_kind","","Create an `UnsupportedError` for an image with details on…",16,[[["imageformathint",4],["unsupportederrorkind",4]]]],[11,"kind","","Returns the corresponding `UnsupportedErrorKind` of the…",16,[[],["unsupportederrorkind",4]]],[11,"format_hint","","Returns the image format associated with this error.",16,[[],["imageformathint",4]]],[11,"new","","Create a `DecodingError` that stems from an arbitrary…",17,[[["imageformathint",4]]]],[11,"from_format_hint","","Create a `DecodingError` for an image format.",17,[[["imageformathint",4]]]],[11,"format_hint","","Returns the image format associated with this error.",17,[[],["imageformathint",4]]],[11,"new","","Create an `EncodingError` that stems from an arbitrary…",18,[[["imageformathint",4]]]],[11,"from_format_hint","","Create an `EncodingError` for an image format.",18,[[["imageformathint",4]]]],[11,"format_hint","","Return the image format associated with this error.",18,[[],["imageformathint",4]]],[11,"from_kind","","Construct a `ParameterError` directly from a corresponding…",19,[[["parametererrorkind",4]]]],[11,"kind","","Returns the corresponding `ParameterErrorKind` of the error.",19,[[],["parametererrorkind",4]]],[11,"from_kind","","Construct a generic `LimitError` directly from a…",20,[[["limiterrorkind",4]]]],[11,"kind","","Returns the corresponding `LimitErrorKind` of the error.",20,[[],["limiterrorkind",4]]],[0,"buffer","image","Iterators and other auxiliary structure for the…",null,null],[3,"EnumeratePixels","image::buffer","Enumerate the pixels of an image.",null,null],[3,"EnumeratePixelsMut","","Enumerate the pixels of an image.",null,null],[3,"EnumerateRows","","Enumerate the rows of an image.",null,null],[3,"EnumerateRowsMut","","Enumerate the rows of an image.",null,null],[3,"Pixels","","Iterate over pixel refs.",null,null],[3,"PixelsMut","","Iterate over mutable pixel refs.",null,null],[3,"Rows","","Iterate over rows of an image",null,null],[3,"RowsMut","","Iterate over mutable rows of an image",null,null],[8,"ConvertBuffer","","Provides color conversions for whole image buffers.",null,null],[10,"convert","","Converts `self` to a buffer of type T",21,[[]]],[0,"math","image","Mathematical helper functions and types.",null,null],[3,"Rect","image::math","A Rectangle defined by its top left corner, width and…",null,null],[12,"x","","The x coordinate of the top left corner.",22,null],[12,"y","","The y coordinate of the top left corner.",22,null],[12,"width","","The rectangle\'s width.",22,null],[12,"height","","The rectangle\'s height.",22,null],[0,"nq","","NEUQUANT Neural-Net quantization algorithm by Anthony…",null,null],[3,"NeuQuant","image::math::nq","Neural network color quantizer",null,null],[11,"new","","",23,[[]]],[11,"init","","",23,[[]]],[11,"map_pixel","","",23,[[]]],[11,"index_of","","",23,[[]]],[11,"lookup","","",23,[[],["option",4]]],[0,"utils","image::math","Shared mathematical utility functions.",null,null],[5,"clamp","image::math::utils","Cut value to be inside given range",null,[[]]],[0,"imageops","image","Image Processing Functions",null,null],[4,"FilterType","image::imageops","Available Sampling Filters.",null,null],[13,"Nearest","","Nearest Neighbor",24,null],[13,"Triangle","","Linear Filter",24,null],[13,"CatmullRom","","Cubic Filter",24,null],[13,"Gaussian","","Gaussian Filter",24,null],[13,"Lanczos3","","Lanczos with window 3",24,null],[5,"flip_horizontal","","Flip an image horizontally",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"flip_horizontal_in_place","","Flip an image horizontally in place.",null,[[]]],[5,"flip_vertical","","Flip an image vertically",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"flip_vertical_in_place","","Flip an image vertically in place.",null,[[]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"rotate180_in_place","","Rotate an image 180 degrees clockwise in place.",null,[[]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"rotate90","","Rotate an image 90 degrees clockwise.",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"rotate180_in","","Rotate an image 180 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate90_in","","Rotate an image 90 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate270_in","","Rotate an image 270 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_horizontal_in","","Flip an image horizontally and put the result into the…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_vertical_in","","Flip an image vertically and put the result into the…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"blur","","Performs a Gaussian blur on the supplied image. `sigma` is…",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. `kernel`…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"resize","","Resize the supplied image to the specified dimensions.…",null,[[["filtertype",4]],[["imagebuffer",3],["vec",3]]]],[5,"thumbnail","","Resize the supplied image to the specific dimensions.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. `sigma`…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"crop","","Return a mutable view into an image",null,[[],["subimage",3]]],[5,"crop_imm","","Return an immutable view into an image",null,[[],["subimage",3]]],[5,"overlay_bounds","","Calculate the region that can be copied from top to bottom.",null,[[]]],[5,"overlay","","Overlay an image at a given coordinate (x, y)",null,[[]]],[5,"tile","","Tile an image by repeating it multiple times",null,[[]]],[5,"vertical_gradient","","Fill the image with a linear vertical gradient",null,[[]]],[5,"horizontal_gradient","","Fill the image with a linear horizontal gradient",null,[[]]],[5,"replace","","Replace the contents of an image at a given coordinate (x,…",null,[[]]],[0,"colorops","","Functions for altering and converting the color of pixelbufs",null,null],[3,"BiLevel","image::imageops::colorops","A bi-level color map",null,null],[5,"grayscale","","Convert the supplied image to grayscale",null,[[],[["luma",3],["vec",3],["imagebuffer",3]]]],[5,"invert","","Invert each pixel within the supplied image. This function…",null,[[]]],[5,"contrast","","Adjust the contrast of the supplied image. `contrast` is…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"brighten","","Brighten the supplied image. `value` is the amount to…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"dither","","Reduces the colors of the image using the supplied…",null,[[["imagebuffer",3]]]],[5,"index_colors","","Reduces the colors using the supplied `color_map` and…",null,[[["imagebuffer",3]],[["luma",3],["imagebuffer",3],["vec",3]]]],[8,"ColorMap","","A color map",null,null],[16,"Color","","The color type on which the map operates on",25,null],[10,"index_of","","Returns the index of the closest match of `color` in the…",25,[[]]],[11,"lookup","","Looks up color by index in the color map. If `idx` is out…",25,[[],["option",4]]],[11,"has_lookup","","Determine if this implementation of ColorMap overrides the…",25,[[]]],[10,"map_color","","Maps `color` to the closest color in the color map.",25,[[]]],[0,"io","image","Input and output of images.",null,null],[3,"Reader","image::io","A multi-format image reader.",null,null],[11,"new","","Create a new image reader without a preset format.",26,[[]]],[11,"with_format","","Construct a reader with specified format.",26,[[["imageformat",4]]]],[11,"format","","Get the currently determined format.",26,[[],[["option",4],["imageformat",4]]]],[11,"set_format","","Supply the format as which to interpret the read image.",26,[[["imageformat",4]]]],[11,"clear_format","","Remove the current information on the image format.",26,[[]]],[11,"into_inner","","Unwrap the reader.",26,[[]]],[11,"open","","Open a file to read, format will be guessed from path.",26,[[],["result",6]]],[11,"with_guessed_format","","Make a format guess based on the content, replacing it on…",26,[[],["result",6]]],[11,"into_dimensions","","Read the image dimensions.",26,[[],["imageresult",6]]],[11,"decode","","Read the image (replaces `load`).",26,[[],[["imageresult",6],["dynamicimage",4]]]],[0,"flat","image","Image representations for ffi.",null,null],[3,"FlatSamples","image::flat","A flat buffer over a (multi channel) image.",null,null],[12,"samples","","Underlying linear container holding sample values.",27,null],[12,"layout","","A `repr(C)` description of the layout of buffer samples.",27,null],[12,"color_hint","","Supplementary color information.",27,null],[3,"SampleLayout","","A ffi compatible description of a sample buffer.",null,null],[12,"channels","","The number of channels in the color representation of the…",28,null],[12,"channel_stride","","Add this to an index to get to the sample in the next…",28,null],[12,"width","","The width of the represented image.",28,null],[12,"width_stride","","Add this to an index to get to the next sample in…",28,null],[12,"height","","The height of the represented image.",28,null],[12,"height_stride","","Add this to an index to get to the next sample in…",28,null],[3,"View","","A flat buffer that can be used as an image view.",null,null],[3,"ViewMut","","A mutable owning version of a flat buffer.",null,null],[4,"Error","","Denotes invalid flat sample buffers when trying to convert…",null,null],[13,"TooLarge","","The represented image was too large.",29,null],[13,"NormalFormRequired","","The represented image can not use this representation.",29,null],[13,"WrongColor","","The color format did not match the channel count.",29,null],[4,"NormalForm","","Different normal forms of buffers.",null,null],[13,"Unaliased","","No pixel aliases another.",30,null],[13,"PixelPacked","","At least pixels are packed.",30,null],[13,"ImagePacked","","All samples are packed.",30,null],[13,"RowMajorPacked","","The samples are in row-major form and all samples are…",30,null],[13,"ColumnMajorPacked","","The samples are in column-major form and all samples are…",30,null],[11,"row_major_packed","","Describe a row-major image packed in all directions.",28,[[]]],[11,"column_major_packed","","Describe a column-major image packed in all directions.",28,[[]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",28,[[]]],[11,"extents","","Get the dimensions `(channels, width, height)`.",28,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",28,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",28,[[],["option",4]]],[11,"fits","","Check if a buffer of length `len` is large enough.",28,[[]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",28,[[]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",28,[[["normalform",4]]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",28,[[]]],[11,"index","","Resolve the index of a particular sample.",28,[[],["option",4]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (channel, x, y).",28,[[],["option",4]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",28,[[]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",28,[[]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",27,[[]]],[11,"extents","","Get the dimensions `(channels, width, height)`.",27,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",27,[[]]],[11,"as_ref","","Get a reference based version.",27,[[],["flatsamples",3]]],[11,"as_mut","","Get a mutable reference based version.",27,[[],["flatsamples",3]]],[11,"to_vec","","Copy the data into an owned vector.",27,[[],[["flatsamples",3],["vec",3]]]],[11,"get_sample","","Get a reference to a single sample.",27,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a single sample.",27,[[],["option",4]]],[11,"as_view","","View this buffer as an image over some type of pixel.",27,[[],[["result",4],["view",3],["error",4]]]],[11,"as_view_with_mut_samples","","View this buffer but keep mutability at a sample level.",27,[[],[["error",4],["view",3],["result",4]]]],[11,"as_view_mut","","Interpret this buffer as a mutable image.",27,[[],[["error",4],["viewmut",3],["result",4]]]],[11,"as_slice","","View the samples as a slice.",27,[[]]],[11,"as_mut_slice","","View the samples as a slice.",27,[[]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",27,[[],["option",4]]],[11,"image_mut_slice","","Mutable portion of the buffer that holds sample values.",27,[[],["option",4]]],[11,"try_into_buffer","","Move the data into an image buffer.",27,[[],[["result",4],["imagebuffer",3]]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",27,[[],["option",4]]],[11,"fits","","Check if a buffer of length `len` is large enough.",27,[[]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",27,[[]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",27,[[["normalform",4]]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",27,[[]]],[11,"index","","Resolve the index of a particular sample.",27,[[],["option",4]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (x, y, channel).",27,[[],["option",4]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",27,[[]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",27,[[]]],[11,"with_monocolor","","Create a monocolor image from a single pixel.",27,[[]]],[11,"into_inner","","Take out the sample buffer.",31,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the inner sample descriptor.",31,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",31,[[]]],[11,"get_sample","","Get a reference to a selected subpixel if it is in-bounds.",31,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected subpixel if it is…",31,[[],["option",4]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",31,[[]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",31,[[]]],[11,"image_mut_slice","","Return the mutable portion of the buffer that holds sample…",31,[[]]],[11,"shrink_to","","Shrink the inner image.",31,[[]]],[11,"try_upgrade","","Try to convert this into an image with mutable pixels.",31,[[],[["viewmut",3],["result",4]]]],[11,"into_inner","","Take out the sample buffer.",32,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the sample buffer descriptor.",32,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",32,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",32,[[]]],[11,"get_sample","","Get a reference to a selected subpixel.",32,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected sample.",32,[[],["option",4]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",32,[[]]],[11,"image_mut_slice","","Return the mutable buffer that holds sample values.",32,[[]]],[11,"shrink_to","","Shrink the inner image.",32,[[]]],[0,"codecs","image","Encoding and decoding for various image file formats.",null,null],[0,"bmp","image::codecs","Decoding and Encoding of BMP Images",null,null],[3,"BmpDecoder","image::codecs::bmp","A bmp decoder",null,null],[3,"BmpEncoder","","The representation of a BMP encoder.",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",33,[[],[["imageresult",6],["bmpdecoder",3]]]],[11,"new","","Create a new encoder that writes its output to `w`.",34,[[]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",34,[[["colortype",4]],["imageresult",6]]],[6,"BMPEncoder","","BMP Encoder",null,null],[0,"dds","image::codecs","Decoding of DDS images",null,null],[3,"DdsDecoder","image::codecs::dds","The representation of a DDS decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",35,[[],["imageresult",6]]],[0,"dxt","image::codecs","Decoding of DXT (S3TC) compression",null,null],[3,"DxtDecoder","image::codecs::dxt","DXT decoder",null,null],[3,"DxtReader","","DXT reader",null,null],[3,"DxtEncoder","","DXT encoder",null,null],[4,"DXTVariant","","What version of DXT compression are we using? Note that…",null,null],[13,"DXT1","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel…",36,null],[13,"DXT3","","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel…",36,null],[13,"DXT5","","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel…",36,null],[6,"DxtVariant","","DXT compression version.",null,null],[6,"DXTReader","","DXT reader",null,null],[6,"DXTEncoder","","DXT encoder",null,null],[11,"color_type","","Returns the color type that is stored in this DXT variant",36,[[],["colortype",4]]],[11,"new","","Create a new DXT decoder that decodes from the stream `r`.…",37,[[["dxtvariant",4]],[["result",4],["dxtdecoder",3],["imageerror",4]]]],[11,"new","","Create a new encoder that writes its output to `w`",38,[[],["dxtencoder",3]]],[11,"encode","","Encodes the image data `data` that has dimensions `width`…",38,[[["dxtvariant",4]],["imageresult",6]]],[0,"farbfeld","image::codecs","Decoding of farbfeld images",null,null],[3,"FarbfeldReader","image::codecs::farbfeld","farbfeld Reader",null,null],[3,"FarbfeldDecoder","","farbfeld decoder",null,null],[3,"FarbfeldEncoder","","farbfeld encoder",null,null],[11,"new","","Creates a new decoder that decodes from the stream `r`",39,[[],[["imageresult",6],["farbfelddecoder",3]]]],[11,"new","","Create a new encoder that writes its output to `w`",40,[[],["farbfeldencoder",3]]],[11,"encode","","Encodes the image `data` (native endian) that has…",40,[[],["imageresult",6]]],[0,"gif","image::codecs","Decoding of GIF Images",null,null],[3,"GifDecoder","image::codecs::gif","GIF decoder",null,null],[3,"GifReader","","Wrapper struct around a `Cursor<Vec<u8>>`",null,null],[3,"GifEncoder","","GIF encoder.",null,null],[6,"Encoder","","GIF encoder",null,null],[11,"new","","Creates a new decoder that decodes the input steam `r`",41,[[],[["imageresult",6],["gifdecoder",3]]]],[11,"new","","Creates a new GIF encoder.",42,[[],["gifencoder",3]]],[11,"encode","","Encode a single image.",42,[[["colortype",4]],["imageresult",6]]],[11,"encode_frame","","Encode one frame of animation.",42,[[["frame",3]],["imageresult",6]]],[11,"encode_frames","","Encodes Frames. Consider using `try_encode_frames` instead…",42,[[],["imageresult",6]]],[11,"try_encode_frames","","Try to encode a collection of…",42,[[],["imageresult",6]]],[0,"hdr","image::codecs","Decoding of Radiance HDR Images",null,null],[3,"HdrAdapter","image::codecs::hdr","Adapter to conform to `ImageDecoder` trait",null,null],[3,"HdrReader","","Wrapper struct around a `Cursor<Vec<u8>>`",null,null],[3,"HdrDecoder","","An Radiance HDR decoder",null,null],[3,"Rgbe8Pixel","","Refer to wikipedia",null,null],[12,"c","","Color components",43,null],[12,"e","","Exponent",43,null],[3,"HdrImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[3,"HdrMetadata","","Metadata for Radiance HDR image",null,null],[12,"width","","Width of decoded image. It could be either scanline…",44,null],[12,"height","","Height of decoded image. It depends on orientation too.",44,null],[12,"orientation","","Orientation matrix. For standard orientation it is…",44,null],[12,"exposure","","Divide color values by exposure to get to get physical…",44,null],[12,"color_correction","","Divide color values by corresponding tuple member (r, g,…",44,null],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",44,null],[12,"custom_attributes","","All lines contained in image header are put here. Ordering…",44,null],[3,"HdrEncoder","","Radiance HDR encoder",null,null],[5,"rgbe8","","Creates `RGBE8Pixel` from components",null,[[],["rgbe8pixel",3]]],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",null,[[["asref",8],["path",3]],[["result",6],["vec",3]]]],[5,"to_rgbe8","","Converts `Rgb<f32>` into `RGBE8Pixel`",null,[[["rgb",3]],["rgbe8pixel",3]]],[11,"new","","Creates adapter",45,[[],[["hdradapter",3],["imageresult",6]]]],[11,"new_nonstrict","","Allows reading old Radiance HDR images",45,[[],[["hdradapter",3],["imageresult",6]]]],[11,"to_hdr","","Converts `RGBE8Pixel` into `Rgb<f32>` linearly",43,[[],["rgb",3]]],[11,"to_ldr","","Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and…",43,[[],[["primitive",8],["zero",8],["rgb",3]]]],[11,"to_ldr_scale_gamma","","Converts RGBE8Pixel into Rgb using provided scale and gamma",43,[[],[["primitive",8],["zero",8],["rgb",3]]]],[11,"new","","Reads Radiance HDR image header from stream `r` if the…",46,[[],[["imageresult",6],["hdrdecoder",3]]]],[11,"with_strictness","","Reads Radiance HDR image header from stream `reader`, if…",46,[[],[["imageresult",6],["hdrdecoder",3]]]],[11,"metadata","","Returns file metadata. Refer to `HDRMetadata` for details.",46,[[],["hdrmetadata",3]]],[11,"read_image_native","","Consumes decoder and returns a vector of RGBE8 pixels",46,[[],[["imageresult",6],["vec",3]]]],[11,"read_image_transform","","Consumes decoder and returns a vector of transformed pixels",46,[[["send",8],["fn",8],["sync",8]],["imageresult",6]]],[11,"read_image_ldr","","Consumes decoder and returns a vector of Rgb pixels. scale…",46,[[],[["vec",3],["imageresult",6]]]],[11,"read_image_hdr","","Consumes decoder and returns a vector of Rgb pixels.",46,[[],[["imageresult",6],["vec",3]]]],[11,"new","","Creates encoder",47,[[],["hdrencoder",3]]],[11,"encode","","Encodes the image `data` that has dimensions `width` and…",47,[[],["imageresult",6]]],[6,"HDRAdapter","","HDR Adapter",null,null],[6,"RGBE8Pixel","","Refer to wikipedia",null,null],[6,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[6,"HDRMetadata","","HDR MetaData",null,null],[6,"HDREncoder","","HDR Encoder",null,null],[17,"SIGNATURE","","Radiance HDR file signature",null,null],[0,"ico","image::codecs","Decoding and Encoding of ICO files",null,null],[3,"IcoDecoder","image::codecs::ico","An ico decoder",null,null],[3,"IcoEncoder","","ICO encoder",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",48,[[],[["imageresult",6],["icodecoder",3]]]],[11,"new","","Create a new encoder that writes its output to `w`.",49,[[],["icoencoder",3]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",49,[[["colortype",4]],["imageresult",6]]],[6,"ICOEncoder","","ICO encoder",null,null],[0,"jpeg","image::codecs","Decoding and Encoding of JPEG Images",null,null],[3,"JpegDecoder","image::codecs::jpeg","JPEG decoder",null,null],[3,"JpegEncoder","","The representation of a JPEG encoder",null,null],[3,"PixelDensity","","Represents the pixel density of an image",null,null],[12,"density","","A couple of values for (Xdensity, Ydensity)",50,null],[12,"unit","","The unit in which the density is measured",50,null],[4,"PixelDensityUnit","","Represents a unit in which the density of an image is…",null,null],[13,"PixelAspectRatio","","Represents the absence of a unit, the values indicate only…",51,null],[13,"Inches","","Pixels per inch (2.54 cm)",51,null],[13,"Centimeters","","Pixels per centimeter",51,null],[11,"new","","Create a new decoder that decodes from the stream `r`",52,[[],[["jpegdecoder",3],["imageresult",6]]]],[11,"scale","","Configure the decoder to scale the image during decoding.",52,[[],["imageresult",6]]],[11,"dpi","","Creates the most common pixel density type: the horizontal…",50,[[]]],[11,"new","","Create a new encoder that writes its output to `w`",53,[[],["jpegencoder",3]]],[11,"new_with_quality","","Create a new encoder that writes its output to `w`, and…",53,[[],["jpegencoder",3]]],[11,"set_pixel_density","","Set the pixel density of the images the encoder will…",53,[[["pixeldensity",3]]]],[11,"encode","","Encodes the image stored in the raw byte buffer `image`…",53,[[["colortype",4]],["imageresult",6]]],[11,"encode_image","","Encodes the given image.",53,[[],["imageresult",6]]],[6,"JPEGEncoder","","JPEG Encoder",null,null],[0,"png","image::codecs","Decoding and Encoding of PNG Images",null,null],[3,"PngReader","image::codecs::png","Png Reader",null,null],[3,"PngDecoder","","PNG decoder",null,null],[3,"ApngDecoder","","An [`AnimationDecoder`] adapter of [`PngDecoder`].",null,null],[3,"PngEncoder","","PNG encoder",null,null],[4,"CompressionType","","Compression level of a PNG encoder. The default setting is…",null,null],[13,"Default","","Default compression level",54,null],[13,"Fast","","Fast, minimal compression",54,null],[13,"Best","","High compression level",54,null],[13,"Huffman","","Huffman coding compression",54,null],[13,"Rle","","Run-length encoding compression",54,null],[4,"FilterType","","Filter algorithms used to process image data to improve…",null,null],[13,"NoFilter","","No processing done, best used for low bit depth greyscale…",55,null],[13,"Sub","","Filters based on previous pixel in the same scanline",55,null],[13,"Up","","Filters based on the scanline above",55,null],[13,"Avg","","Filters based on the average of left and right neighbor…",55,null],[13,"Paeth","","Algorithm that takes into account the left, upper left,…",55,null],[6,"PNGReader","","PNG Reader",null,null],[6,"PNGEncoder","","PNG Encoder",null,null],[11,"new","","Creates a new decoder that decodes from the stream `r`",56,[[],[["pngdecoder",3],["imageresult",6]]]],[11,"apng","","Turn this into an iterator over the animation frames.",56,[[],["apngdecoder",3]]],[11,"is_apng","","Returns if the image contains an animation.",56,[[]]],[11,"new","","Create a new encoder that writes its output to `w`",57,[[],["pngencoder",3]]],[11,"new_with_quality","","Create a new encoder that writes its output to `w` with…",57,[[["compressiontype",4],["filtertype",4]],["pngencoder",3]]],[11,"encode","","Encodes the image `data` that has dimensions `width` and…",57,[[["colortype",4]],["imageresult",6]]],[0,"pnm","image::codecs","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",null,null],[3,"PnmDecoder","image::codecs::pnm","PNM decoder",null,null],[3,"PnmEncoder","","Encodes images to any of the `pnm` image formats.",null,null],[3,"ArbitraryHeader","","Header produced by a `pam` file (\\\"Portable Arbitrary Map\\\")",null,null],[12,"height","","Height of the image file",58,null],[12,"width","","Width of the image file",58,null],[12,"depth","","Number of color channels",58,null],[12,"maxval","","Maximum sample value within the image",58,null],[12,"tupltype","","Color interpretation of image pixels",58,null],[3,"BitmapHeader","","Header produced by a `pbm` file (\\\"Portable Bit Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",59,null],[12,"height","","Height of the image file",59,null],[12,"width","","Width of the image file",59,null],[3,"GraymapHeader","","Header produced by a `pgm` file (\\\"Portable Gray Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",60,null],[12,"height","","Height of the image file",60,null],[12,"width","","Width of the image file",60,null],[12,"maxwhite","","Maximum sample value within the image",60,null],[3,"PixmapHeader","","Header produced by a `ppm` file (\\\"Portable Pixel Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",61,null],[12,"height","","Height of the image file",61,null],[12,"width","","Width of the image file",61,null],[12,"maxval","","Maximum sample value within the image",61,null],[3,"PnmHeader","","Stores the complete header data of a file.",null,null],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a `pam`.",null,null],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",62,null],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second…",62,null],[13,"Grayscale","","Pixels represent the amount of white",62,null],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",62,null],[13,"RGB","","Three channels: Red, Green, Blue",62,null],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",62,null],[13,"Custom","","An image format which is not standardized",62,null],[4,"PNMSubtype","","Denotes the category of the magic number",null,null],[13,"Bitmap","","Magic numbers P1 and P4",63,null],[13,"Graymap","","Magic numbers P2 and P5",63,null],[13,"Pixmap","","Magic numbers P3 and P6",63,null],[13,"ArbitraryMap","","Magic number P7",63,null],[4,"SampleEncoding","","The kind of encoding used to store sample values",null,null],[13,"Binary","","Samples are unsigned binary integers in big endian",64,null],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by…",64,null],[11,"new","","Create a new decoder that decodes from the stream `read`",65,[[],[["imageresult",6],["pnmdecoder",3]]]],[11,"into_inner","","Extract the reader and header after an image has been read.",65,[[]]],[11,"subtype","","Get the pnm subtype, depending on the magic constant…",65,[[],["pnmsubtype",4]]],[11,"new","","Create new PNMEncoder from the `writer`.",66,[[]]],[11,"with_subtype","","Encode a specific pnm subtype image.",66,[[["pnmsubtype",4]]]],[11,"with_header","","Enforce the use of a chosen header.",66,[[["pnmheader",3]]]],[11,"with_dynamic_header","","Create the header dynamically for each image.",66,[[]]],[11,"encode","","Encode an image whose samples are represented as `u8`.",66,[[["colortype",4]],["imageresult",6]]],[11,"magic_constant","","Get the two magic constant bytes corresponding to this…",63,[[]]],[11,"sample_encoding","","Whether samples are stored as binary or as decimal ascii",63,[[],["sampleencoding",4]]],[11,"subtype","","Retrieve the format subtype from which the header was…",67,[[],["pnmsubtype",4]]],[11,"width","","The width of the image this header is for.",67,[[]]],[11,"height","","The height of the image this header is for.",67,[[]]],[11,"maximal_sample","","The biggest value a sample can have. In other words, the…",67,[[]]],[11,"as_bitmap","","Retrieve the underlying bitmap header if any",67,[[],[["option",4],["bitmapheader",3]]]],[11,"as_graymap","","Retrieve the underlying graymap header if any",67,[[],[["graymapheader",3],["option",4]]]],[11,"as_pixmap","","Retrieve the underlying pixmap header if any",67,[[],[["option",4],["pixmapheader",3]]]],[11,"as_arbitrary","","Retrieve the underlying arbitrary header if any",67,[[],[["arbitraryheader",3],["option",4]]]],[11,"write","","Write the header back into a binary stream",67,[[["write",8]],["result",6]]],[6,"PNMEncoder","","PNM Encoder",null,null],[6,"PNMHeader","","PNM Header",null,null],[6,"PnmSubtype","","PNM Subtype",null,null],[0,"tga","image::codecs","Decoding of TGA Images",null,null],[3,"TgaDecoder","image::codecs::tga","The representation of a TGA decoder",null,null],[3,"TgaEncoder","","TGA encoder.",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",68,[[],[["imageresult",6],["tgadecoder",3]]]],[11,"new","","Create a new encoder that writes its output to `w`.",69,[[],["tgaencoder",3]]],[11,"encode","","Encodes the image `buf` that has dimensions `width` and…",69,[[["colortype",4]],["imageresult",6]]],[0,"tiff","image::codecs","Decoding and Encoding of TIFF Images",null,null],[3,"TiffDecoder","image::codecs::tiff","Decoder for TIFF images.",null,null],[3,"TiffReader","","Wrapper struct around a `Cursor<Vec<u8>>`",null,null],[3,"TiffEncoder","","Encoder for tiff images",null,null],[11,"new","","Create a new TiffDecoder.",70,[[],[["tiffdecoder",3],["result",4],["imageerror",4]]]],[11,"new","","Create a new encoder that writes its output to `w`",71,[[],["tiffencoder",3]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",71,[[["colortype",4]],["imageresult",6]]],[0,"webp","image::codecs","Decoding of WebP Images",null,null],[3,"WebPDecoder","image::codecs::webp","WebP Image format decoder. Currently only supportes the…",null,null],[11,"new","","Create a new WebPDecoder from the Reader `r`. This…",72,[[],[["webpdecoder",3],["imageresult",6]]]],[0,"vp8","","An implementation of the VP8 Video Codec",null,null],[3,"Frame","image::codecs::webp::vp8","A Representation of the last decoded video frame",null,null],[12,"width","","The width of the luma plane",73,null],[12,"height","","The height of the luma plane",73,null],[12,"ybuf","","The luma plane of the frame",73,null],[12,"keyframe","","Indicates whether this frame is a keyframe",73,null],[12,"for_display","","Indicates whether this frame is intended for display",73,null],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2 of…",73,null],[3,"Vp8Decoder","","VP8 Decoder",null,null],[11,"new","","Create a new decoder. The reader must present a raw vp8…",74,[[],["vp8decoder",3]]],[11,"decode_frame","","Decodes the current frame and returns a reference to it",74,[[],[["imageresult",6],["frame",3]]]],[0,"bmp","image","Decoding and Encoding of BMP Images",null,null],[3,"BmpDecoder","image::bmp","A bmp decoder",null,null],[3,"BmpEncoder","","The representation of a BMP encoder.",null,null],[6,"BMPEncoder","","BMP Encoder",null,null],[0,"dds","image","Decoding of DDS images",null,null],[0,"dxt","","Decoding of DXT (S3TC) compression",null,null],[0,"farbfeld","","Decoding of farbfeld images",null,null],[0,"gif","","Decoding of GIF Images",null,null],[0,"hdr","","Decoding of Radiance HDR Images",null,null],[3,"HdrAdapter","image::hdr","Adapter to conform to `ImageDecoder` trait",null,null],[3,"HdrDecoder","","An Radiance HDR decoder",null,null],[3,"HdrEncoder","","Radiance HDR encoder",null,null],[3,"HdrImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[3,"HdrMetadata","","Metadata for Radiance HDR image",null,null],[12,"width","","Width of decoded image. It could be either scanline…",44,null],[12,"height","","Height of decoded image. It depends on orientation too.",44,null],[12,"orientation","","Orientation matrix. For standard orientation it is…",44,null],[12,"exposure","","Divide color values by exposure to get to get physical…",44,null],[12,"color_correction","","Divide color values by corresponding tuple member (r, g,…",44,null],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",44,null],[12,"custom_attributes","","All lines contained in image header are put here. Ordering…",44,null],[3,"HdrReader","","Wrapper struct around a `Cursor<Vec<u8>>`",null,null],[3,"Rgbe8Pixel","","Refer to wikipedia",null,null],[12,"c","","Color components",43,null],[12,"e","","Exponent",43,null],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",null,[[["asref",8],["path",3]],[["result",6],["vec",3]]]],[5,"rgbe8","","Creates `RGBE8Pixel` from components",null,[[],["rgbe8pixel",3]]],[5,"to_rgbe8","","Converts `Rgb<f32>` into `RGBE8Pixel`",null,[[["rgb",3]],["rgbe8pixel",3]]],[6,"HDRAdapter","","HDR Adapter",null,null],[6,"HDREncoder","","HDR Encoder",null,null],[6,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[6,"HDRMetadata","","HDR MetaData",null,null],[6,"RGBE8Pixel","","Refer to wikipedia",null,null],[17,"SIGNATURE","","Radiance HDR file signature",null,null],[0,"ico","image","Decoding and Encoding of ICO files",null,null],[3,"IcoDecoder","image::ico","An ico decoder",null,null],[3,"IcoEncoder","","ICO encoder",null,null],[6,"ICOEncoder","","ICO encoder",null,null],[0,"jpeg","image","Decoding and Encoding of JPEG Images",null,null],[3,"JpegDecoder","image::jpeg","JPEG decoder",null,null],[3,"JpegEncoder","","The representation of a JPEG encoder",null,null],[3,"PixelDensity","","Represents the pixel density of an image",null,null],[12,"density","","A couple of values for (Xdensity, Ydensity)",50,null],[12,"unit","","The unit in which the density is measured",50,null],[4,"PixelDensityUnit","","Represents a unit in which the density of an image is…",null,null],[13,"PixelAspectRatio","","Represents the absence of a unit, the values indicate only…",51,null],[13,"Inches","","Pixels per inch (2.54 cm)",51,null],[13,"Centimeters","","Pixels per centimeter",51,null],[6,"JPEGEncoder","","JPEG Encoder",null,null],[0,"png","image","Decoding and Encoding of PNG Images",null,null],[0,"pnm","","Decoding and Encoding of netpbm image formats (pbm, pgm,…",null,null],[3,"ArbitraryHeader","image::pnm","Header produced by a `pam` file (\\\"Portable Arbitrary Map\\\")",null,null],[12,"height","","Height of the image file",58,null],[12,"width","","Width of the image file",58,null],[12,"depth","","Number of color channels",58,null],[12,"maxval","","Maximum sample value within the image",58,null],[12,"tupltype","","Color interpretation of image pixels",58,null],[3,"BitmapHeader","","Header produced by a `pbm` file (\\\"Portable Bit Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",59,null],[12,"height","","Height of the image file",59,null],[12,"width","","Width of the image file",59,null],[3,"GraymapHeader","","Header produced by a `pgm` file (\\\"Portable Gray Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",60,null],[12,"height","","Height of the image file",60,null],[12,"width","","Width of the image file",60,null],[12,"maxwhite","","Maximum sample value within the image",60,null],[3,"PixmapHeader","","Header produced by a `ppm` file (\\\"Portable Pixel Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",61,null],[12,"height","","Height of the image file",61,null],[12,"width","","Width of the image file",61,null],[12,"maxval","","Maximum sample value within the image",61,null],[3,"PnmDecoder","","PNM decoder",null,null],[3,"PnmEncoder","","Encodes images to any of the `pnm` image formats.",null,null],[3,"PnmHeader","","Stores the complete header data of a file.",null,null],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a `pam`.",null,null],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",62,null],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second…",62,null],[13,"Grayscale","","Pixels represent the amount of white",62,null],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",62,null],[13,"RGB","","Three channels: Red, Green, Blue",62,null],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",62,null],[13,"Custom","","An image format which is not standardized",62,null],[4,"PNMSubtype","","Denotes the category of the magic number",null,null],[13,"Bitmap","","Magic numbers P1 and P4",63,null],[13,"Graymap","","Magic numbers P2 and P5",63,null],[13,"Pixmap","","Magic numbers P3 and P6",63,null],[13,"ArbitraryMap","","Magic number P7",63,null],[4,"SampleEncoding","","The kind of encoding used to store sample values",null,null],[13,"Binary","","Samples are unsigned binary integers in big endian",64,null],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by…",64,null],[6,"PNMEncoder","","PNM Encoder",null,null],[6,"PNMHeader","","PNM Header",null,null],[6,"PnmSubtype","","PNM Subtype",null,null],[0,"tga","image","Decoding and Encoding of TGA Images",null,null],[3,"TgaDecoder","image::tga","The representation of a TGA decoder",null,null],[3,"TgaEncoder","","TGA encoder.",null,null],[0,"tiff","image","Decoding and Encoding of TIFF Images",null,null],[0,"webp","","Decoding of WebP Images",null,null],[3,"WebPDecoder","image::webp","WebP Image format decoder. Currently only supportes the…",null,null],[11,"new","image","Creates a new `Frames` from an implementation specific…",75,[[["iterator",8],["box",3]]]],[11,"collect_frames","","Steps through the iterator from the current frame until…",75,[[],[["imageresult",6],["vec",3]]]],[11,"new","","Contructs a new frame without any delay.",76,[[["rgbaimage",6]],["frame",3]]],[11,"from_parts","","Contructs a new frame",76,[[["rgbaimage",6],["delay",3]],["frame",3]]],[11,"delay","","Delay of this frame",76,[[],["delay",3]]],[11,"buffer","","Returns the image buffer",76,[[],["rgbaimage",6]]],[11,"into_buffer","","Returns the image buffer",76,[[],["rgbaimage",6]]],[11,"left","","Returns the x offset",76,[[]]],[11,"top","","Returns the y offset",76,[[]]],[11,"from_numer_denom_ms","","Create a delay from a ratio of milliseconds.",77,[[]]],[11,"from_saturating_duration","","Convert from a duration, clamped between 0 and an…",77,[[["duration",3]]]],[11,"numer_denom_ms","","The numerator and denominator of the delay in milliseconds.",77,[[]]],[11,"from_raw","","Contructs a buffer from a generic container (for example a…",78,[[],[["option",4],["imagebuffer",3]]]],[11,"into_raw","","Returns the underlying raw buffer",78,[[]]],[11,"as_raw","","Returns the underlying raw buffer",78,[[]]],[11,"dimensions","","The width and height of this image.",78,[[]]],[11,"width","","The width of this image.",78,[[]]],[11,"height","","The height of this image.",78,[[]]],[11,"pixels","","Returns an iterator over the pixels of this image. The…",78,[[],["pixels",3]]],[11,"rows","","Returns an iterator over the rows of this image.",78,[[],["rows",3]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator…",78,[[],["enumeratepixels",3]]],[11,"enumerate_rows","","Enumerates over the rows of the image. The iterator yields…",78,[[],["enumeraterows",3]]],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",78,[[]]],[11,"sample_layout","","Get the format of the buffer when viewed as a matrix of…",78,[[],["samplelayout",3]]],[11,"into_flat_samples","","Return the raw sample buffer with its stride an dimension…",78,[[],["flatsamples",3]]],[11,"as_flat_samples","","Return a view on the raw sample buffer.",78,[[],["flatsamples",3]]],[11,"as_flat_samples_mut","","Return a mutable view on the raw sample buffer.",78,[[],["flatsamples",3]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",78,[[],["pixelsmut",3]]],[11,"rows_mut","","Returns an iterator over the mutable rows of this image.",78,[[],["rowsmut",3]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator…",78,[[],["enumeratepixelsmut",3]]],[11,"enumerate_rows_mut","","Enumerates over the rows of the image. The iterator yields…",78,[[],["enumeraterowsmut",3]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",78,[[]]],[11,"put_pixel","","Puts a pixel at location `(x, y)`",78,[[]]],[11,"save","","Saves the buffer to a file at the path specified.",78,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the…",78,[[["imageformat",4]],["imageresult",6]]],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",78,[[],[["imagebuffer",3],["vec",3]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",78,[[],[["imagebuffer",3],["vec",3]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of…",78,[[],[["imagebuffer",3],["vec",3]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. Returns…",78,[[["vec",3]],[["option",4],["imagebuffer",3]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data…",78,[[],["vec",3]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer.…",78,[[["option",4]],["rgbaimage",6]]],[11,"bytes_per_pixel","","Returns the number of bytes contained in a pixel of…",6,[[]]],[11,"has_alpha","","Returns if there is an alpha channel.",6,[[]]],[11,"has_color","","Returns false if the color scheme is grayscale, true…",6,[[]]],[11,"bits_per_pixel","","Returns the number of bits contained in a pixel of…",6,[[]]],[11,"channel_count","","Returns the number of color channels that make up this pixel",6,[[]]],[11,"channel_count","","Get the number of channels for colors of this type.",7,[[]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels…",10,[[],["dynamicimage",4]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",10,[[],["dynamicimage",4]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",10,[[],["dynamicimage",4]]],[11,"new_bgra8","","Creates a dynamic image backed by a buffer of BGRA pixels.",10,[[],["dynamicimage",4]]],[11,"new_bgr8","","Creates a dynamic image backed by a buffer of BGR pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma16","","Creates a dynamic image backed by a buffer of grey pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma_a16","","Creates a dynamic image backed by a buffer of grey pixels…",10,[[],["dynamicimage",4]]],[11,"new_rgb16","","Creates a dynamic image backed by a buffer of RGB pixels.",10,[[],["dynamicimage",4]]],[11,"new_rgba16","","Creates a dynamic image backed by a buffer of RGBA pixels.",10,[[],["dynamicimage",4]]],[11,"from_decoder","","Decodes an encoded image into a dynamic image.",10,[[],["imageresult",6]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",10,[[],["rgbimage",6]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",10,[[],["rgbaimage",6]]],[11,"to_bgr","","Returns a copy of this image as an BGR image.",10,[[],[["vec",3],["imagebuffer",3],["bgr",3]]]],[11,"to_bgra","","Returns a copy of this image as an BGRA image.",10,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",10,[[],["grayimage",6]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",10,[[],["grayalphaimage",6]]],[11,"into_rgb","","Consume the image and returns a RGB image.",10,[[],["rgbimage",6]]],[11,"into_rgba","","Consume the image and returns a RGBA image.",10,[[],["rgbaimage",6]]],[11,"into_bgr","","Consume the image and returns a BGR image.",10,[[],[["vec",3],["imagebuffer",3],["bgr",3]]]],[11,"into_bgra","","Consume the image and returns a BGRA image.",10,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"into_luma","","Consume the image and returns a Luma image.",10,[[],["grayimage",6]]],[11,"into_luma_alpha","","Consume the image and returns a LumaA image.",10,[[],["grayalphaimage",6]]],[11,"crop","","Return a cut-out of this image delimited by the bounding…",10,[[],["dynamicimage",4]]],[11,"crop_imm","","Return a cut-out of this image delimited by the bounding…",10,[[],["dynamicimage",4]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",10,[[],[["option",4],["rgbimage",6]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",10,[[],[["option",4],["rgbimage",6]]]],[11,"as_bgr8","","Return a reference to an 8bit BGR image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_bgr8","","Return a mutable reference to an 8bit BGR image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",10,[[],[["option",4],["rgbaimage",6]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",10,[[],[["option",4],["rgbaimage",6]]]],[11,"as_bgra8","","Return a reference to an 8bit BGRA image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_bgra8","","Return a mutable reference to an 8bit RGBA image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",10,[[],[["grayimage",6],["option",4]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",10,[[],[["option",4],["grayimage",6]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an…",10,[[],[["grayalphaimage",6],["option",4]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with…",10,[[],[["option",4],["grayalphaimage",6]]]],[11,"as_rgb16","","Return a reference to an 16bit RGB image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_rgb16","","Return a mutable reference to an 16bit RGB image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_rgba16","","Return a reference to an 16bit RGBA image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_rgba16","","Return a mutable reference to an 16bit RGBA image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_luma16","","Return a reference to an 16bit Grayscale image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_luma16","","Return a mutable reference to an 16bit Grayscale image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_luma_alpha16","","Return a reference to an 16bit Grayscale image with an…",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_luma_alpha16","","Return a mutable reference to an 16bit Grayscale image…",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_flat_samples_u8","","Return a view on the raw sample buffer for 8 bit per…",10,[[],[["flatsamples",3],["option",4]]]],[11,"as_flat_samples_u16","","Return a view on the raw sample buffer for 16 bit per…",10,[[],[["flatsamples",3],["option",4]]]],[11,"to_bytes","","Return this image\'s pixels as a byte vector.",10,[[],["vec",3]]],[11,"color","","Return this image\'s color type.",10,[[],["colortype",4]]],[11,"grayscale","","Return a grayscale version of this image.",10,[[],["dynamicimage",4]]],[11,"invert","","Invert the colors of this image. This method operates…",10,[[]]],[11,"resize","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"resize_exact","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"thumbnail","","Scale this image down to fit within a specific size.…",10,[[],["dynamicimage",4]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new…",10,[[],["dynamicimage",4]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"blur","","Performs a Gaussian blur on this image. `sigma` is a…",10,[[],["dynamicimage",4]]],[11,"unsharpen","","Performs an unsharpen mask on this image. `sigma` is the…",10,[[],["dynamicimage",4]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",10,[[],["dynamicimage",4]]],[11,"adjust_contrast","","Adjust the contrast of this image. `contrast` is the…",10,[[],["dynamicimage",4]]],[11,"brighten","","Brighten the pixels of this image. `value` is the amount…",10,[[],["dynamicimage",4]]],[11,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",10,[[],["dynamicimage",4]]],[11,"flipv","","Flip this image vertically",10,[[],["dynamicimage",4]]],[11,"fliph","","Flip this image horizontally",10,[[],["dynamicimage",4]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"write_to","","Encode this image and write it to `w`",10,[[["imageoutputformat",4],["into",8]],["imageresult",6]]],[11,"save","","Saves the buffer to a file at the path specified.",10,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the…",10,[[["imageformat",4]],["imageresult",6]]],[11,"from_path","","Return the image format specified by the path\'s file…",8,[[],["imageresult",6]]],[11,"extensions_str","","Return a list of applicable extensions for this format.",8,[[]]],[11,"current","","A measure of completed decoding.",79,[[]]],[11,"total","","A measure of all necessary decoding work.",79,[[]]],[11,"remaining","","Calculate a measure for remaining decoding work.",79,[[]]],[11,"new","","Construct a new subimage",80,[[],["subimage",3]]],[11,"change_bounds","","Change the coordinates of this subimage.",80,[[]]],[11,"to_image","","Convert this subimage to an ImageBuffer",80,[[],[["vec",3],["imagebuffer",3]]]],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",null,null],[6,"GrayImage","","Sendable grayscale image buffer",null,null],[6,"RgbImage","","Sendable Rgb image buffer",null,null],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",null,null],[8,"AnimationDecoder","","AnimationDecoder trait",null,null],[10,"into_frames","","Consume the decoder producing a series of frames.",81,[[],["frames",3]]],[8,"GenericImage","","A trait for manipulating images.",null,null],[16,"InnerImage","","Underlying image type. This is mainly used by SubImages in…",82,null],[10,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",82,[[]]],[10,"put_pixel","","Put a pixel at location (x, y)",82,[[]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",82,[[]]],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",82,[[]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",82,[[],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to…",82,[[["rect",3]]]],[10,"inner_mut","","Returns a mutable reference to the underlying image.",82,[[]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",82,[[],["subimage",3]]],[8,"GenericImageView","","Trait to inspect an image.",null,null],[16,"Pixel","","The type of pixel.",83,null],[16,"InnerImageView","","Underlying image type. This is mainly used by SubImages in…",83,null],[10,"dimensions","","The width and height of this image.",83,[[]]],[11,"width","","The width of this image.",83,[[]]],[11,"height","","The height of this image.",83,[[]]],[10,"bounds","","The bounding rectangle of this image.",83,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",83,[[]]],[10,"get_pixel","","Returns the pixel located at (x, y)",83,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",83,[[]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",83,[[],["pixels",3]]],[10,"inner","","Returns a reference to the underlying image.",83,[[]]],[11,"view","","Returns an subimage that is an immutable view into this…",83,[[],["subimage",3]]],[8,"ImageDecoder","","The trait that all decoders implement",null,null],[16,"Reader","","The type of reader produced by `into_reader`.",84,null],[10,"dimensions","","Returns a tuple containing the width and height of the image",84,[[]]],[10,"color_type","","Returns the color type of the image data produced by this…",84,[[],["colortype",4]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",84,[[],["extendedcolortype",4]]],[10,"into_reader","","Returns a reader that can be used to obtain the bytes of…",84,[[],["imageresult",6]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",84,[[]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",84,[[]]],[11,"read_image","","Returns all the bytes in the image.",84,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",84,[[["fn",8]],["imageresult",6]]],[8,"ImageDecoderExt","","Specialized image decoding not be supported by all formats",null,null],[11,"read_rect","","Decode a rectangular section of the image; see…",85,[[],["imageresult",6]]],[10,"read_rect_with_progress","","Decode a rectangular section of the image, periodically…",85,[[["fn",8]],["imageresult",6]]],[8,"ImageEncoder","","The trait all encoders implement",null,null],[10,"write_image","","Writes all the bytes in an image to the encoder.",86,[[["colortype",4]],["imageresult",6]]],[8,"EncodableLayout","","Types which are safe to treat as an immutable byte slice…",null,null],[10,"as_bytes","","Get the bytes of this value.",87,[[]]],[8,"Primitive","","Primitive trait from old stdlib",null,null],[8,"Pixel","","A generalized pixel.",null,null],[16,"Subpixel","","The underlying subpixel type.",88,null],[18,"CHANNEL_COUNT","","The number of channels of this pixel type.",88,null],[11,"channel_count","","Returns the number of channels of this pixel type.",88,[[]]],[10,"channels","","Returns the components as a slice.",88,[[]]],[10,"channels_mut","","Returns the components as a mutable slice",88,[[]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each…",88,null],[11,"color_model","","Returns a string that can help to interpret the meaning…",88,[[]]],[18,"COLOR_TYPE","","ColorType for this pixel format",88,null],[11,"color_type","","Returns the ColorType for this pixel format",88,[[],["colortype",4]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the…",88,[[]]],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If…",88,[[]]],[10,"from_slice","","Returns a view into a slice.",88,[[]]],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",88,[[]]],[10,"to_rgb","","Convert this pixel to RGB",88,[[],["rgb",3]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",88,[[],["rgba",3]]],[10,"to_luma","","Convert this pixel to luma",88,[[],["luma",3]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",88,[[],["lumaa",3]]],[10,"to_bgr","","Convert this pixel to BGR",88,[[],["bgr",3]]],[10,"to_bgra","","Convert this pixel to BGR with an alpha channel",88,[[],["bgra",3]]],[10,"map","","Apply the function `f` to each channel of this pixel.",88,[[]]],[10,"apply","","Apply the function `f` to each channel of this pixel.",88,[[]]],[10,"map_with_alpha","","Apply the function `f` to each channel except the alpha…",88,[[]]],[10,"apply_with_alpha","","Apply the function `f` to each channel except the alpha…",88,[[]]],[11,"map_without_alpha","","Apply the function `f` to each channel except the alpha…",88,[[]]],[11,"apply_without_alpha","","Apply the function `f` to each channel except the alpha…",88,[[]]],[10,"map2","","Apply the function `f` to each channel of this pixel and…",88,[[]]],[10,"apply2","","Apply the function `f` to each channel of this pixel and…",88,[[]]],[10,"invert","","Invert this pixel",88,[[]]],[10,"blend","","Blend the color of a given pixel into ourself, taking into…",88,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"into_iter","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"par_bridge","","",89,[[],["iterbridge",3]]],[11,"init","","",89,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",89,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"into_iter","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","image::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","image::buffer","",90,[[]]],[11,"into","","",90,[[]]],[11,"into_iter","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"par_bridge","","",90,[[],["iterbridge",3]]],[11,"init","","",90,[[]]],[11,"deref","","",90,[[]]],[11,"deref_mut","","",90,[[]]],[11,"drop","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"into_iter","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"par_bridge","","",91,[[],["iterbridge",3]]],[11,"init","","",91,[[]]],[11,"deref","","",91,[[]]],[11,"deref_mut","","",91,[[]]],[11,"drop","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"into_iter","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"par_bridge","","",92,[[],["iterbridge",3]]],[11,"init","","",92,[[]]],[11,"deref","","",92,[[]]],[11,"deref_mut","","",92,[[]]],[11,"drop","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"into_iter","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"par_bridge","","",93,[[],["iterbridge",3]]],[11,"init","","",93,[[]]],[11,"deref","","",93,[[]]],[11,"deref_mut","","",93,[[]]],[11,"drop","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"into_iter","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"par_bridge","","",94,[[],["iterbridge",3]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"into_iter","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"par_bridge","","",95,[[],["iterbridge",3]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"into_iter","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"par_bridge","","",96,[[],["iterbridge",3]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"into_iter","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"par_bridge","","",97,[[],["iterbridge",3]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"from","image::math","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","image::math::nq","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","image::imageops","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","image::imageops::colorops","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"init","","",98,[[]]],[11,"deref","","",98,[[]]],[11,"deref_mut","","",98,[[]]],[11,"drop","","",98,[[]]],[11,"from","image::io","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","image::flat","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","image::codecs::bmp","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","image::codecs::dds","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","image::codecs::dxt","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","image::codecs::farbfeld","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","image::codecs::gif","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","image::codecs::hdr","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"into_iter","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"par_bridge","","",103,[[],["iterbridge",3]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","image::codecs::ico","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","image::codecs::jpeg","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","image::codecs::png","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","image::codecs::pnm","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","image::codecs::tga","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","image::codecs::tiff","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","image::codecs::webp","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"from","image::codecs::webp::vp8","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"index_of","image::imageops::colorops","",98,[[["luma",3]]]],[11,"lookup","","",98,[[],["option",4]]],[11,"has_lookup","","Indicate NeuQuant implements `lookup`.",98,[[]]],[11,"map_color","","",98,[[["luma",3]]]],[11,"index_of","image::math::nq","",23,[[["rgba",3]]]],[11,"lookup","","",23,[[],["option",4]]],[11,"has_lookup","","Indicate NeuQuant implements `lookup`.",23,[[]]],[11,"map_color","","",23,[[["rgba",3]]]],[11,"convert","image","Examples Convert RGB image to gray image. ```no_run use…",78,[[],[["vec",3],["imagebuffer",3]]]],[11,"dimensions","image::codecs::bmp","",33,[[]]],[11,"color_type","","",33,[[],["colortype",4]]],[11,"into_reader","","",33,[[],["imageresult",6]]],[11,"read_image","","",33,[[],["imageresult",6]]],[11,"dimensions","image::codecs::dds","",35,[[]]],[11,"color_type","","",35,[[],["colortype",4]]],[11,"scanline_bytes","","",35,[[]]],[11,"into_reader","","",35,[[],["imageresult",6]]],[11,"read_image","","",35,[[],["imageresult",6]]],[11,"dimensions","image::codecs::dxt","",37,[[]]],[11,"color_type","","",37,[[],["colortype",4]]],[11,"scanline_bytes","","",37,[[]]],[11,"into_reader","","",37,[[],["imageresult",6]]],[11,"read_image","","",37,[[],["imageresult",6]]],[11,"dimensions","image::codecs::farbfeld","",39,[[]]],[11,"color_type","","",39,[[],["colortype",4]]],[11,"into_reader","","",39,[[],["imageresult",6]]],[11,"scanline_bytes","","",39,[[]]],[11,"dimensions","image::codecs::gif","",41,[[]]],[11,"color_type","","",41,[[],["colortype",4]]],[11,"into_reader","","",41,[[],["imageresult",6]]],[11,"read_image","","",41,[[],["imageresult",6]]],[11,"dimensions","image::codecs::hdr","",45,[[]]],[11,"color_type","","",45,[[],["colortype",4]]],[11,"into_reader","","",45,[[],["imageresult",6]]],[11,"read_image","","",45,[[],["imageresult",6]]],[11,"dimensions","image::codecs::ico","",48,[[]]],[11,"color_type","","",48,[[],["colortype",4]]],[11,"into_reader","","",48,[[],["imageresult",6]]],[11,"read_image","","",48,[[],["imageresult",6]]],[11,"dimensions","image::codecs::jpeg","",52,[[]]],[11,"color_type","","",52,[[],["colortype",4]]],[11,"into_reader","","",52,[[],["imageresult",6]]],[11,"read_image","","",52,[[],["imageresult",6]]],[11,"dimensions","image::codecs::png","",56,[[]]],[11,"color_type","","",56,[[],["colortype",4]]],[11,"into_reader","","",56,[[],["imageresult",6]]],[11,"read_image","","",56,[[],["imageresult",6]]],[11,"scanline_bytes","","",56,[[]]],[11,"dimensions","image::codecs::pnm","",65,[[]]],[11,"color_type","","",65,[[],["colortype",4]]],[11,"original_color_type","","",65,[[],["extendedcolortype",4]]],[11,"into_reader","","",65,[[],["imageresult",6]]],[11,"read_image","","",65,[[],["imageresult",6]]],[11,"dimensions","image::codecs::tga","",68,[[]]],[11,"color_type","","",68,[[],["colortype",4]]],[11,"scanline_bytes","","",68,[[]]],[11,"into_reader","","",68,[[],["imageresult",6]]],[11,"read_image","","",68,[[],["imageresult",6]]],[11,"dimensions","image::codecs::tiff","",70,[[]]],[11,"color_type","","",70,[[],["colortype",4]]],[11,"into_reader","","",70,[[],["imageresult",6]]],[11,"read_image","","",70,[[],["imageresult",6]]],[11,"dimensions","image::codecs::webp","",72,[[]]],[11,"color_type","","",72,[[],["colortype",4]]],[11,"into_reader","","",72,[[],["imageresult",6]]],[11,"read_image","","",72,[[],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::bmp","",33,[[["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::dxt","",37,[[["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::farbfeld","",39,[[["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::hdr","",45,[[["fn",8]],["imageresult",6]]],[11,"into_frames","image::codecs::gif","",41,[[],["frames",3]]],[11,"into_frames","image::codecs::png","",105,[[],["frames",3]]],[11,"write_image","image::codecs::bmp","",34,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::farbfeld","",40,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::ico","",49,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::jpeg","",53,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::png","",57,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::pnm","",66,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::tga","",69,[[["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::tiff","",71,[[["colortype",4]],["imageresult",6]]],[11,"dimensions","image::flat","",31,[[]]],[11,"bounds","","",31,[[]]],[11,"in_bounds","","",31,[[]]],[11,"get_pixel","","",31,[[]]],[11,"inner","","",31,[[]]],[11,"dimensions","","",32,[[]]],[11,"bounds","","",32,[[]]],[11,"in_bounds","","",32,[[]]],[11,"get_pixel","","",32,[[]]],[11,"inner","","",32,[[]]],[11,"dimensions","image","",78,[[]]],[11,"bounds","","",78,[[]]],[11,"get_pixel","","",78,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds…",78,[[]]],[11,"inner","","",78,[[]]],[11,"dimensions","","",10,[[]]],[11,"bounds","","",10,[[]]],[11,"get_pixel","","",10,[[],["rgba",3]]],[11,"inner","","",10,[[]]],[11,"dimensions","","",80,[[]]],[11,"bounds","","",80,[[]]],[11,"get_pixel","","",80,[[]]],[11,"view","","",80,[[],["subimage",3]]],[11,"inner","","",80,[[]]],[11,"get_pixel_mut","image::flat","",32,[[]]],[11,"put_pixel","","",32,[[]]],[11,"blend_pixel","","",32,[[]]],[11,"inner_mut","","",32,[[]]],[11,"get_pixel_mut","image","",78,[[]]],[11,"put_pixel","","",78,[[]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",78,[[]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",78,[[]]],[11,"copy_within","","",78,[[["rect",3]]]],[11,"inner_mut","","",78,[[]]],[11,"put_pixel","","",10,[[["rgba",3]]]],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",10,[[["rgba",3]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",10,[[],["rgba",3]]],[11,"inner_mut","","",10,[[]]],[11,"get_pixel_mut","","",80,[[]]],[11,"put_pixel","","",80,[[]]],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel…",80,[[]]],[11,"sub_image","","",80,[[],["subimage",3]]],[11,"inner_mut","","",80,[[]]],[11,"channels","","",2,[[]]],[11,"channels_mut","","",2,[[]]],[11,"channels4","","",2,[[]]],[11,"from_channels","","",2,[[],["rgb",3]]],[11,"from_slice","","",2,[[],["rgb",3]]],[11,"from_slice_mut","","",2,[[],["rgb",3]]],[11,"to_rgb","","",2,[[],["rgb",3]]],[11,"to_bgr","","",2,[[],["bgr",3]]],[11,"to_rgba","","",2,[[],["rgba",3]]],[11,"to_bgra","","",2,[[],["bgra",3]]],[11,"to_luma","","",2,[[],["luma",3]]],[11,"to_luma_alpha","","",2,[[],["lumaa",3]]],[11,"map","","",2,[[],["rgb",3]]],[11,"apply","","",2,[[]]],[11,"map_with_alpha","","",2,[[],["rgb",3]]],[11,"apply_with_alpha","","",2,[[]]],[11,"map2","","",2,[[],["rgb",3]]],[11,"apply2","","",2,[[["rgb",3]]]],[11,"invert","","",2,[[]]],[11,"blend","","",2,[[["rgb",3]]]],[11,"channels","","",4,[[]]],[11,"channels_mut","","",4,[[]]],[11,"channels4","","",4,[[]]],[11,"from_channels","","",4,[[],["bgr",3]]],[11,"from_slice","","",4,[[],["bgr",3]]],[11,"from_slice_mut","","",4,[[],["bgr",3]]],[11,"to_rgb","","",4,[[],["rgb",3]]],[11,"to_bgr","","",4,[[],["bgr",3]]],[11,"to_rgba","","",4,[[],["rgba",3]]],[11,"to_bgra","","",4,[[],["bgra",3]]],[11,"to_luma","","",4,[[],["luma",3]]],[11,"to_luma_alpha","","",4,[[],["lumaa",3]]],[11,"map","","",4,[[],["bgr",3]]],[11,"apply","","",4,[[]]],[11,"map_with_alpha","","",4,[[],["bgr",3]]],[11,"apply_with_alpha","","",4,[[]]],[11,"map2","","",4,[[],["bgr",3]]],[11,"apply2","","",4,[[["bgr",3]]]],[11,"invert","","",4,[[]]],[11,"blend","","",4,[[["bgr",3]]]],[11,"channels","","",0,[[]]],[11,"channels_mut","","",0,[[]]],[11,"channels4","","",0,[[]]],[11,"from_channels","","",0,[[],["luma",3]]],[11,"from_slice","","",0,[[],["luma",3]]],[11,"from_slice_mut","","",0,[[],["luma",3]]],[11,"to_rgb","","",0,[[],["rgb",3]]],[11,"to_bgr","","",0,[[],["bgr",3]]],[11,"to_rgba","","",0,[[],["rgba",3]]],[11,"to_bgra","","",0,[[],["bgra",3]]],[11,"to_luma","","",0,[[],["luma",3]]],[11,"to_luma_alpha","","",0,[[],["lumaa",3]]],[11,"map","","",0,[[],["luma",3]]],[11,"apply","","",0,[[]]],[11,"map_with_alpha","","",0,[[],["luma",3]]],[11,"apply_with_alpha","","",0,[[]]],[11,"map2","","",0,[[],["luma",3]]],[11,"apply2","","",0,[[["luma",3]]]],[11,"invert","","",0,[[]]],[11,"blend","","",0,[[["luma",3]]]],[11,"channels","","",3,[[]]],[11,"channels_mut","","",3,[[]]],[11,"channels4","","",3,[[]]],[11,"from_channels","","",3,[[],["rgba",3]]],[11,"from_slice","","",3,[[],["rgba",3]]],[11,"from_slice_mut","","",3,[[],["rgba",3]]],[11,"to_rgb","","",3,[[],["rgb",3]]],[11,"to_bgr","","",3,[[],["bgr",3]]],[11,"to_rgba","","",3,[[],["rgba",3]]],[11,"to_bgra","","",3,[[],["bgra",3]]],[11,"to_luma","","",3,[[],["luma",3]]],[11,"to_luma_alpha","","",3,[[],["lumaa",3]]],[11,"map","","",3,[[],["rgba",3]]],[11,"apply","","",3,[[]]],[11,"map_with_alpha","","",3,[[],["rgba",3]]],[11,"apply_with_alpha","","",3,[[]]],[11,"map2","","",3,[[],["rgba",3]]],[11,"apply2","","",3,[[["rgba",3]]]],[11,"invert","","",3,[[]]],[11,"blend","","",3,[[["rgba",3]]]],[11,"channels","","",5,[[]]],[11,"channels_mut","","",5,[[]]],[11,"channels4","","",5,[[]]],[11,"from_channels","","",5,[[],["bgra",3]]],[11,"from_slice","","",5,[[],["bgra",3]]],[11,"from_slice_mut","","",5,[[],["bgra",3]]],[11,"to_rgb","","",5,[[],["rgb",3]]],[11,"to_bgr","","",5,[[],["bgr",3]]],[11,"to_rgba","","",5,[[],["rgba",3]]],[11,"to_bgra","","",5,[[],["bgra",3]]],[11,"to_luma","","",5,[[],["luma",3]]],[11,"to_luma_alpha","","",5,[[],["lumaa",3]]],[11,"map","","",5,[[],["bgra",3]]],[11,"apply","","",5,[[]]],[11,"map_with_alpha","","",5,[[],["bgra",3]]],[11,"apply_with_alpha","","",5,[[]]],[11,"map2","","",5,[[],["bgra",3]]],[11,"apply2","","",5,[[["bgra",3]]]],[11,"invert","","",5,[[]]],[11,"blend","","",5,[[["bgra",3]]]],[11,"channels","","",1,[[]]],[11,"channels_mut","","",1,[[]]],[11,"channels4","","",1,[[]]],[11,"from_channels","","",1,[[],["lumaa",3]]],[11,"from_slice","","",1,[[],["lumaa",3]]],[11,"from_slice_mut","","",1,[[],["lumaa",3]]],[11,"to_rgb","","",1,[[],["rgb",3]]],[11,"to_bgr","","",1,[[],["bgr",3]]],[11,"to_rgba","","",1,[[],["rgba",3]]],[11,"to_bgra","","",1,[[],["bgra",3]]],[11,"to_luma","","",1,[[],["luma",3]]],[11,"to_luma_alpha","","",1,[[],["lumaa",3]]],[11,"map","","",1,[[],["lumaa",3]]],[11,"apply","","",1,[[]]],[11,"map_with_alpha","","",1,[[],["lumaa",3]]],[11,"apply_with_alpha","","",1,[[]]],[11,"map2","","",1,[[],["lumaa",3]]],[11,"apply2","","",1,[[["lumaa",3]]]],[11,"invert","","",1,[[]]],[11,"blend","","",1,[[["lumaa",3]]]],[11,"from","image::error","",11,[[["error",3]],["imageerror",4]]],[11,"from","","",15,[[["imageformat",4]]]],[11,"from","","",15,[[["path",3]]]],[11,"from","","",16,[[["imageformathint",4]]]],[11,"from","image::math::nq","",23,[[["neuquant",3]]]],[11,"from","image::error","",11,[[["error",4]],["imageerror",4]]],[11,"from","image::codecs::pnm","",67,[[["bitmapheader",3]]]],[11,"from","","",67,[[["graymapheader",3]]]],[11,"from","","",67,[[["pixmapheader",3]]]],[11,"from","","",67,[[["arbitraryheader",3]]]],[11,"from","image","",7,[[["colortype",4]]]],[11,"from","","",2,[[]]],[11,"from","","",4,[[]]],[11,"from","","",0,[[]]],[11,"from","","",3,[[]]],[11,"from","","",5,[[]]],[11,"from","","",1,[[]]],[11,"from","","",9,[[["imageformat",4]]]],[11,"next_back","image::buffer","",94,[[],["option",4]]],[11,"next_back","","",95,[[],["option",4]]],[11,"next_back","","",96,[[],[["pixels",3],["option",4]]]],[11,"next_back","","",97,[[],[["option",4],["pixelsmut",3]]]],[11,"len","","",94,[[]]],[11,"len","","",95,[[]]],[11,"len","","",96,[[]]],[11,"len","","",97,[[]]],[11,"len","","",90,[[]]],[11,"len","","",92,[[]]],[11,"len","","",91,[[]]],[11,"len","","",93,[[]]],[11,"into_iter","image::codecs::hdr","",46,[[]]],[11,"next","","",103,[[],["option",4]]],[11,"size_hint","","",103,[[]]],[11,"next","image","",75,[[],[["imageresult",6],["option",4]]]],[11,"next","image::buffer","",94,[[],["option",4]]],[11,"next","","",95,[[],["option",4]]],[11,"next","","",96,[[],[["pixels",3],["option",4]]]],[11,"next","","",97,[[],[["option",4],["pixelsmut",3]]]],[11,"next","","",90,[[],["option",4]]],[11,"next","","",92,[[],["option",4]]],[11,"next","","",91,[[],["option",4]]],[11,"next","","",93,[[],["option",4]]],[11,"next","image","",89,[[],["option",4]]],[11,"clone","image::error","",12,[[],["unsupportederrorkind",4]]],[11,"clone","","",13,[[],["parametererrorkind",4]]],[11,"clone","","",14,[[],["limiterrorkind",4]]],[11,"clone","","",15,[[],["imageformathint",4]]],[11,"clone","image::math","",22,[[],["rect",3]]],[11,"clone","image::imageops::colorops","",98,[[],["bilevel",3]]],[11,"clone","image::imageops","",24,[[],["filtertype",4]]],[11,"clone","image::flat","",27,[[],["flatsamples",3]]],[11,"clone","","",28,[[],["samplelayout",3]]],[11,"clone","","",31,[[],["view",3]]],[11,"clone","","",32,[[],["viewmut",3]]],[11,"clone","","",29,[[],["error",4]]],[11,"clone","","",30,[[],["normalform",4]]],[11,"clone","image::codecs::dxt","",36,[[],["dxtvariant",4]]],[11,"clone","image::codecs::hdr","",43,[[],["rgbe8pixel",3]]],[11,"clone","","",44,[[],["hdrmetadata",3]]],[11,"clone","image::codecs::jpeg","",51,[[],["pixeldensityunit",4]]],[11,"clone","","",50,[[],["pixeldensity",3]]],[11,"clone","image::codecs::png","",54,[[],["compressiontype",4]]],[11,"clone","","",55,[[],["filtertype",4]]],[11,"clone","image::codecs::pnm","",64,[[],["sampleencoding",4]]],[11,"clone","","",63,[[],["pnmsubtype",4]]],[11,"clone","","",59,[[],["bitmapheader",3]]],[11,"clone","","",60,[[],["graymapheader",3]]],[11,"clone","","",61,[[],["pixmapheader",3]]],[11,"clone","","",58,[[],["arbitraryheader",3]]],[11,"clone","","",62,[[],["arbitrarytupltype",4]]],[11,"clone","image::codecs::webp::vp8","",73,[[],["frame",3]]],[11,"clone","image","",76,[[],["frame",3]]],[11,"clone","","",77,[[],["delay",3]]],[11,"clone","image::buffer","",94,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",92,[[]]],[11,"clone","image","",78,[[],["imagebuffer",3]]],[11,"clone","","",6,[[],["colortype",4]]],[11,"clone","","",7,[[],["extendedcolortype",4]]],[11,"clone","","",2,[[],["rgb",3]]],[11,"clone","","",4,[[],["bgr",3]]],[11,"clone","","",0,[[],["luma",3]]],[11,"clone","","",3,[[],["rgba",3]]],[11,"clone","","",5,[[],["bgra",3]]],[11,"clone","","",1,[[],["lumaa",3]]],[11,"clone","","",10,[[],["dynamicimage",4]]],[11,"clone","","",8,[[],["imageformat",4]]],[11,"clone","","",9,[[],["imageoutputformat",4]]],[11,"clone","","",79,[[],["progress",3]]],[11,"clone","","",89,[[]]],[11,"default","image::codecs::hdr","",43,[[],["rgbe8pixel",3]]],[11,"default","image::codecs::jpeg","Returns a pixel density with a pixel aspect ratio of 1",50,[[]]],[11,"default","image::codecs::png","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","image::codecs::webp::vp8","",73,[[],["frame",3]]],[11,"eq","image::error","",12,[[["unsupportederrorkind",4]]]],[11,"ne","","",12,[[["unsupportederrorkind",4]]]],[11,"eq","","",13,[[["parametererrorkind",4]]]],[11,"ne","","",13,[[["parametererrorkind",4]]]],[11,"eq","","",14,[[["limiterrorkind",4]]]],[11,"ne","","",14,[[["limiterrorkind",4]]]],[11,"eq","","",15,[[["imageformathint",4]]]],[11,"ne","","",15,[[["imageformathint",4]]]],[11,"eq","image::math","",22,[[["rect",3]]]],[11,"ne","","",22,[[["rect",3]]]],[11,"eq","image::imageops","",24,[[["filtertype",4]]]],[11,"eq","image::flat","",28,[[["samplelayout",3]]]],[11,"ne","","",28,[[["samplelayout",3]]]],[11,"eq","","",29,[[["error",4]]]],[11,"ne","","",29,[[["error",4]]]],[11,"eq","","",30,[[["normalform",4]]]],[11,"eq","image::codecs::dxt","",36,[[["dxtvariant",4]]]],[11,"eq","image::codecs::hdr","",43,[[["rgbe8pixel",3]]]],[11,"ne","","",43,[[["rgbe8pixel",3]]]],[11,"eq","image::codecs::jpeg","",51,[[["pixeldensityunit",4]]]],[11,"eq","","",50,[[["pixeldensity",3]]]],[11,"ne","","",50,[[["pixeldensity",3]]]],[11,"eq","image::codecs::png","",54,[[["compressiontype",4]]]],[11,"ne","","",54,[[["compressiontype",4]]]],[11,"eq","","",55,[[["filtertype",4]]]],[11,"ne","","",55,[[["filtertype",4]]]],[11,"eq","image::codecs::pnm","",64,[[["sampleencoding",4]]]],[11,"eq","","",63,[[["pnmsubtype",4]]]],[11,"ne","","",63,[[["pnmsubtype",4]]]],[11,"eq","image","",77,[[["delay",3]]]],[11,"ne","","",77,[[["delay",3]]]],[11,"eq","","",78,[[["imagebuffer",3]]]],[11,"ne","","",78,[[["imagebuffer",3]]]],[11,"eq","","",6,[[["colortype",4]]]],[11,"ne","","",6,[[["colortype",4]]]],[11,"eq","","",7,[[["extendedcolortype",4]]]],[11,"ne","","",7,[[["extendedcolortype",4]]]],[11,"eq","","",2,[[["rgb",3]]]],[11,"ne","","",2,[[["rgb",3]]]],[11,"eq","","",4,[[["bgr",3]]]],[11,"ne","","",4,[[["bgr",3]]]],[11,"eq","","",0,[[["luma",3]]]],[11,"ne","","",0,[[["luma",3]]]],[11,"eq","","",3,[[["rgba",3]]]],[11,"ne","","",3,[[["rgba",3]]]],[11,"eq","","",5,[[["bgra",3]]]],[11,"ne","","",5,[[["bgra",3]]]],[11,"eq","","",1,[[["lumaa",3]]]],[11,"ne","","",1,[[["lumaa",3]]]],[11,"eq","","",8,[[["imageformat",4]]]],[11,"ne","","",8,[[["imageformat",4]]]],[11,"eq","","",9,[[["imageoutputformat",4]]]],[11,"ne","","",9,[[["imageoutputformat",4]]]],[11,"eq","","",79,[[["progress",3]]]],[11,"ne","","",79,[[["progress",3]]]],[11,"partial_cmp","image::flat","Compares the logical preconditions.",30,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","image","",77,[[["delay",3]],[["option",4],["ordering",4]]]],[11,"lt","","",77,[[["delay",3]]]],[11,"le","","",77,[[["delay",3]]]],[11,"gt","","",77,[[["delay",3]]]],[11,"ge","","",77,[[["delay",3]]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"fmt","image::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","image::math","",22,[[["formatter",3]],["result",6]]],[11,"fmt","image::imageops","",24,[[["formatter",3]],["result",6]]],[11,"fmt","image::flat","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::dxt","",36,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::hdr","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::jpeg","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::png","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::pnm","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::webp::vp8","",73,[[["formatter",3]],["result",6]]],[11,"fmt","image","",77,[[["formatter",3]],["result",6]]],[11,"fmt","image::buffer","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","image","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","image::error","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","image::flat","",29,[[["formatter",3]],["result",6]]],[11,"index","","Return a reference to a single sample at specified…",27,[[]]],[11,"index","image","",78,[[]]],[11,"index","","",2,[[]]],[11,"index","","",4,[[]]],[11,"index","","",0,[[]]],[11,"index","","",3,[[]]],[11,"index","","",5,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","image::flat","Return a mutable reference to a single sample at specified…",27,[[]]],[11,"index_mut","image","",78,[[]]],[11,"index_mut","","",2,[[]]],[11,"index_mut","","",4,[[]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",3,[[]]],[11,"index_mut","","",5,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","image::error","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","image::math","",22,[[]]],[11,"hash","image::flat","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","image","",78,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",8,[[]]],[11,"source","image::error","",11,[[],[["option",4],["error",8]]]],[11,"source","","",19,[[],[["option",4],["error",8]]]],[11,"source","","",18,[[],[["option",4],["error",8]]]],[11,"source","","",17,[[],[["option",4],["error",8]]]],[11,"read","image::codecs::dxt","",99,[[],["result",6]]],[11,"read","image::codecs::farbfeld","",100,[[],["result",6]]],[11,"read","image::codecs::gif","",101,[[],["result",6]]],[11,"read_to_end","","",101,[[["vec",3]],["result",6]]],[11,"read","image::codecs::hdr","",102,[[],["result",6]]],[11,"read_to_end","","",102,[[["vec",3]],["result",6]]],[11,"read","image::codecs::png","",104,[[],["result",6]]],[11,"read_to_end","","",104,[[["vec",3]],["result",6]]],[11,"read","image::codecs::tiff","",106,[[],["result",6]]],[11,"read_to_end","","",106,[[["vec",3]],["result",6]]],[11,"seek","image::codecs::farbfeld","",100,[[["seekfrom",4]],["result",6]]],[11,"expand_palette","image","Expands a color palette by re-using the existing buffer.…",107,[[["option",4]],["rgbaimage",6]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",84,[[],["extendedcolortype",4]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",84,[[]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",84,[[]]],[11,"read_image","","Returns all the bytes in the image.",84,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",84,[[["fn",8]],["imageresult",6]]],[11,"read_rect","","Decode a rectangular section of the image; see…",85,[[],["imageresult",6]]],[11,"width","","The width of this image.",83,[[]]],[11,"height","","The height of this image.",83,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",83,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",83,[[]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",83,[[],["pixels",3]]],[11,"view","","Returns an subimage that is an immutable view into this…",83,[[],["subimage",3]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",82,[[]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",82,[[],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to…",82,[[["rect",3]]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",82,[[],["subimage",3]]],[18,"CHANNEL_COUNT","","The number of channels of this pixel type.",88,null],[11,"channel_count","","Returns the number of channels of this pixel type.",88,[[]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each…",88,null],[11,"color_model","","Returns a string that can help to interpret the meaning…",88,[[]]],[18,"COLOR_TYPE","","ColorType for this pixel format",88,null],[11,"color_type","","Returns the ColorType for this pixel format",88,[[],["colortype",4]]],[11,"map_without_alpha","","Apply the function `f` to each channel except the alpha…",88,[[]]],[11,"apply_without_alpha","","Apply the function `f` to each channel except the alpha…",88,[[]]]],"p":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,"ColorType"],[4,"ExtendedColorType"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[4,"DynamicImage"],[4,"ImageError"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"UnsupportedError"],[3,"DecodingError"],[3,"EncodingError"],[3,"ParameterError"],[3,"LimitError"],[8,"ConvertBuffer"],[3,"Rect"],[3,"NeuQuant"],[4,"FilterType"],[8,"ColorMap"],[3,"Reader"],[3,"FlatSamples"],[3,"SampleLayout"],[4,"Error"],[4,"NormalForm"],[3,"View"],[3,"ViewMut"],[3,"BmpDecoder"],[3,"BmpEncoder"],[3,"DdsDecoder"],[4,"DXTVariant"],[3,"DxtDecoder"],[3,"DxtEncoder"],[3,"FarbfeldDecoder"],[3,"FarbfeldEncoder"],[3,"GifDecoder"],[3,"GifEncoder"],[3,"Rgbe8Pixel"],[3,"HdrMetadata"],[3,"HdrAdapter"],[3,"HdrDecoder"],[3,"HdrEncoder"],[3,"IcoDecoder"],[3,"IcoEncoder"],[3,"PixelDensity"],[4,"PixelDensityUnit"],[3,"JpegDecoder"],[3,"JpegEncoder"],[4,"CompressionType"],[4,"FilterType"],[3,"PngDecoder"],[3,"PngEncoder"],[3,"ArbitraryHeader"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"ArbitraryTuplType"],[4,"PNMSubtype"],[4,"SampleEncoding"],[3,"PnmDecoder"],[3,"PnmEncoder"],[3,"PnmHeader"],[3,"TgaDecoder"],[3,"TgaEncoder"],[3,"TiffDecoder"],[3,"TiffEncoder"],[3,"WebPDecoder"],[3,"Frame"],[3,"Vp8Decoder"],[3,"Frames"],[3,"Frame"],[3,"Delay"],[3,"ImageBuffer"],[3,"Progress"],[3,"SubImage"],[8,"AnimationDecoder"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[8,"EncodableLayout"],[8,"Pixel"],[3,"Pixels"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[3,"Pixels"],[3,"PixelsMut"],[3,"Rows"],[3,"RowsMut"],[3,"BiLevel"],[3,"DxtReader"],[3,"FarbfeldReader"],[3,"GifReader"],[3,"HdrReader"],[3,"HdrImageDecoderIterator"],[3,"PngReader"],[3,"ApngDecoder"],[3,"TiffReader"],[6,"GrayImage"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","i":[[3,"Decoder","jpeg_decoder","JPEG decoder",null,null],[3,"ImageInfo","","Represents metadata of an image.",null,null],[12,"width","","The width of the image, in pixels.",0,null],[12,"height","","The height of the image, in pixels.",0,null],[12,"pixel_format","","The pixel format of the image.",0,null],[4,"PixelFormat","","An enumeration over combinations of color spaces and bit…",null,null],[13,"L8","","Luminance (grayscale), 8 bits",1,null],[13,"RGB24","","RGB, 8 bits per channel",1,null],[13,"CMYK32","","CMYK, 8 bits per channel",1,null],[4,"Error","","Errors that can occur while decoding a JPEG image.",null,null],[13,"Format","","The image is not formatted properly. The string contains…",2,null],[13,"Unsupported","","The image makes use of a JPEG feature not (currently)…",2,null],[13,"Io","","An I/O error occurred while decoding the image.",2,null],[13,"Internal","","An internal error occurred while decoding the image.",2,null],[4,"UnsupportedFeature","","An enumeration over JPEG features (currently) unsupported…",null,null],[13,"Hierarchical","","Hierarchical JPEG.",3,null],[13,"Lossless","","Lossless JPEG.",3,null],[13,"ArithmeticEntropyCoding","","JPEG using arithmetic entropy coding instead of Huffman…",3,null],[13,"SamplePrecision","","Sample precision in bits. 8 bit sample precision is what…",3,null],[13,"ComponentCount","","Number of components in an image. 1, 3 and 4 components…",3,null],[13,"DNL","","An image can specify a zero height in the frame header and…",3,null],[13,"SubsamplingRatio","","Subsampling ratio.",3,null],[13,"NonIntegerSubsamplingRatio","","A subsampling ratio not representable as an integer.",3,null],[11,"pixel_bytes","","Determine the size in bytes of each pixel in this format",1,[[]]],[11,"new","","Creates a new `Decoder` using the reader `reader`.",4,[[],["decoder",3]]],[11,"info","","Returns metadata about the image.",4,[[],[["option",4],["imageinfo",3]]]],[11,"read_info","","Tries to read metadata from the image without decoding it.",4,[[],[["result",4],["error",4]]]],[11,"scale","","Configure the decoder to scale the image during decoding.",4,[[],[["result",4],["error",4]]]],[11,"decode","","Decodes the image and returns the decoded pixels if…",4,[[],[["error",4],["result",4],["vec",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",2,[[["ioerror",3]],["error",4]]],[11,"clone","","",1,[[],["pixelformat",4]]],[11,"clone","","",0,[[],["imageinfo",3]]],[11,"eq","","",1,[[["pixelformat",4]]]],[11,"eq","","",0,[[["imageinfo",3]]]],[11,"ne","","",0,[[["imageinfo",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"source","","",2,[[],[["option",4],["stderror",8]]]]],"p":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",86,null],[12,"nl_pid","","",86,null],[12,"nl_groups","","",86,null],[3,"dirent","","",null,null],[12,"d_ino","","",87,null],[12,"d_off","","",87,null],[12,"d_reclen","","",87,null],[12,"d_type","","",87,null],[12,"d_name","","",87,null],[3,"dirent64","","",null,null],[12,"d_ino","","",88,null],[12,"d_off","","",88,null],[12,"d_reclen","","",88,null],[12,"d_type","","",88,null],[12,"d_name","","",88,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",89,null],[12,"salg_type","","",89,null],[12,"salg_feat","","",89,null],[12,"salg_mask","","",89,null],[12,"salg_name","","",89,null],[3,"af_alg_iv","","WARNING: The `PartialEq`, `Eq` and `Hash` implementations…",null,null],[12,"ivlen","","",90,null],[12,"iv","","",90,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",91,null],[12,"mq_maxmsg","","",91,null],[12,"mq_msgsize","","",91,null],[12,"mq_curmsgs","","",91,null],[3,"statx","","",null,null],[12,"stx_mask","","",92,null],[12,"stx_blksize","","",92,null],[12,"stx_attributes","","",92,null],[12,"stx_nlink","","",92,null],[12,"stx_uid","","",92,null],[12,"stx_gid","","",92,null],[12,"stx_mode","","",92,null],[12,"__statx_pad1","","",92,null],[12,"stx_ino","","",92,null],[12,"stx_size","","",92,null],[12,"stx_blocks","","",92,null],[12,"stx_attributes_mask","","",92,null],[12,"stx_atime","","",92,null],[12,"stx_btime","","",92,null],[12,"stx_ctime","","",92,null],[12,"stx_mtime","","",92,null],[12,"stx_rdev_major","","",92,null],[12,"stx_rdev_minor","","",92,null],[12,"stx_dev_major","","",92,null],[12,"stx_dev_minor","","",92,null],[12,"__statx_pad2","","",92,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_nsec","","",93,null],[12,"__statx_timestamp_pad1","","",93,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",94,null],[12,"aio_lio_opcode","","",94,null],[12,"aio_reqprio","","",94,null],[12,"aio_buf","","",94,null],[12,"aio_nbytes","","",94,null],[12,"aio_sigevent","","",94,null],[12,"aio_offset","","",94,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",95,null],[12,"e_exit","","",95,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",96,null],[12,"tv_usec","","",96,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",97,null],[12,"gl_pathv","","",97,null],[12,"gl_offs","","",97,null],[12,"gl_flags","","",97,null],[3,"msghdr","","",null,null],[12,"msg_name","","",98,null],[12,"msg_namelen","","",98,null],[12,"msg_iov","","",98,null],[12,"msg_iovlen","","",98,null],[12,"msg_control","","",98,null],[12,"msg_controllen","","",98,null],[12,"msg_flags","","",98,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",99,null],[12,"cmsg_level","","",99,null],[12,"cmsg_type","","",99,null],[3,"termios","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[3,"mallinfo","","",null,null],[12,"arena","","",101,null],[12,"ordblks","","",101,null],[12,"smblks","","",101,null],[12,"hblks","","",101,null],[12,"hblkhd","","",101,null],[12,"usmblks","","",101,null],[12,"fsmblks","","",101,null],[12,"uordblks","","",101,null],[12,"fordblks","","",101,null],[12,"keepcost","","",101,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",102,null],[12,"nlmsg_type","","",102,null],[12,"nlmsg_flags","","",102,null],[12,"nlmsg_seq","","",102,null],[12,"nlmsg_pid","","",102,null],[3,"nlmsgerr","","",null,null],[12,"error","","",103,null],[12,"msg","","",103,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",104,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",105,null],[12,"nm_block_nr","","",105,null],[12,"nm_frame_size","","",105,null],[12,"nm_frame_nr","","",105,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",106,null],[12,"nm_len","","",106,null],[12,"nm_group","","",106,null],[12,"nm_pid","","",106,null],[12,"nm_uid","","",106,null],[12,"nm_gid","","",106,null],[3,"nlattr","","",null,null],[12,"nla_len","","",107,null],[12,"nla_type","","",107,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",108,null],[12,"rt_dst","","",108,null],[12,"rt_gateway","","",108,null],[12,"rt_genmask","","",108,null],[12,"rt_flags","","",108,null],[12,"rt_pad2","","",108,null],[12,"rt_pad3","","",108,null],[12,"rt_tos","","",108,null],[12,"rt_class","","",108,null],[12,"rt_pad4","","",108,null],[12,"rt_metric","","",108,null],[12,"rt_dev","","",108,null],[12,"rt_mtu","","",108,null],[12,"rt_window","","",108,null],[12,"rt_irtt","","",108,null],[3,"timex","","",null,null],[12,"modes","","",109,null],[12,"offset","","",109,null],[12,"freq","","",109,null],[12,"maxerror","","",109,null],[12,"esterror","","",109,null],[12,"status","","",109,null],[12,"constant","","",109,null],[12,"precision","","",109,null],[12,"tolerance","","",109,null],[12,"time","","",109,null],[12,"tick","","",109,null],[12,"ppsfreq","","",109,null],[12,"jitter","","",109,null],[12,"shift","","",109,null],[12,"stabil","","",109,null],[12,"jitcnt","","",109,null],[12,"calcnt","","",109,null],[12,"errcnt","","",109,null],[12,"stbcnt","","",109,null],[12,"tai","","",109,null],[12,"__unused1","","",109,null],[12,"__unused2","","",109,null],[12,"__unused3","","",109,null],[12,"__unused4","","",109,null],[12,"__unused5","","",109,null],[12,"__unused6","","",109,null],[12,"__unused7","","",109,null],[12,"__unused8","","",109,null],[12,"__unused9","","",109,null],[12,"__unused10","","",109,null],[12,"__unused11","","",109,null],[3,"ntptimeval","","",null,null],[12,"time","","",110,null],[12,"maxerror","","",110,null],[12,"esterror","","",110,null],[12,"tai","","",110,null],[12,"__glibc_reserved1","","",110,null],[12,"__glibc_reserved2","","",110,null],[12,"__glibc_reserved3","","",110,null],[12,"__glibc_reserved4","","",110,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",111,null],[12,"ut_pid","","",111,null],[12,"ut_line","","",111,null],[12,"ut_id","","",111,null],[12,"ut_user","","",111,null],[12,"ut_host","","",111,null],[12,"ut_exit","","",111,null],[12,"ut_session","","",111,null],[12,"ut_tv","","",111,null],[12,"ut_addr_v6","","",111,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",112,null],[12,"loads","","",112,null],[12,"totalram","","",112,null],[12,"freeram","","",112,null],[12,"sharedram","","",112,null],[12,"bufferram","","",112,null],[12,"totalswap","","",112,null],[12,"freeswap","","",112,null],[12,"procs","","",112,null],[12,"pad","","",112,null],[12,"totalhigh","","",112,null],[12,"freehigh","","",112,null],[12,"mem_unit","","",112,null],[12,"_f","","",112,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",113,null],[12,"msg_stime","","",113,null],[12,"msg_rtime","","",113,null],[12,"msg_ctime","","",113,null],[12,"msg_qnum","","",113,null],[12,"msg_qbytes","","",113,null],[12,"msg_lspid","","",113,null],[12,"msg_lrpid","","",113,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",114,null],[12,"sa_mask","","",114,null],[12,"sa_flags","","",114,null],[12,"sa_restorer","","",114,null],[3,"statfs","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[3,"flock","","",null,null],[12,"l_type","","",116,null],[12,"l_whence","","",116,null],[12,"l_start","","",116,null],[12,"l_len","","",116,null],[12,"l_pid","","",116,null],[3,"flock64","","",null,null],[12,"l_type","","",117,null],[12,"l_whence","","",117,null],[12,"l_start","","",117,null],[12,"l_len","","",117,null],[12,"l_pid","","",117,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",118,null],[12,"si_errno","","",118,null],[12,"si_code","","",118,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",119,null],[12,"ss_flags","","",119,null],[12,"ss_size","","",119,null],[3,"stat","","",null,null],[12,"st_dev","","",120,null],[12,"st_ino","","",120,null],[12,"st_nlink","","",120,null],[12,"st_mode","","",120,null],[12,"st_uid","","",120,null],[12,"st_gid","","",120,null],[12,"st_rdev","","",120,null],[12,"st_size","","",120,null],[12,"st_blksize","","",120,null],[12,"st_blocks","","",120,null],[12,"st_atime","","",120,null],[12,"st_atime_nsec","","",120,null],[12,"st_mtime","","",120,null],[12,"st_mtime_nsec","","",120,null],[12,"st_ctime","","",120,null],[12,"st_ctime_nsec","","",120,null],[3,"stat64","","",null,null],[12,"st_dev","","",121,null],[12,"st_ino","","",121,null],[12,"st_nlink","","",121,null],[12,"st_mode","","",121,null],[12,"st_uid","","",121,null],[12,"st_gid","","",121,null],[12,"st_rdev","","",121,null],[12,"st_size","","",121,null],[12,"st_blksize","","",121,null],[12,"st_blocks","","",121,null],[12,"st_atime","","",121,null],[12,"st_atime_nsec","","",121,null],[12,"st_mtime","","",121,null],[12,"st_mtime_nsec","","",121,null],[12,"st_ctime","","",121,null],[12,"st_ctime_nsec","","",121,null],[3,"statfs64","","",null,null],[12,"f_type","","",122,null],[12,"f_bsize","","",122,null],[12,"f_blocks","","",122,null],[12,"f_bfree","","",122,null],[12,"f_bavail","","",122,null],[12,"f_files","","",122,null],[12,"f_ffree","","",122,null],[12,"f_fsid","","",122,null],[12,"f_namelen","","",122,null],[12,"f_frsize","","",122,null],[12,"f_flags","","",122,null],[12,"f_spare","","",122,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",123,null],[12,"f_frsize","","",123,null],[12,"f_blocks","","",123,null],[12,"f_bfree","","",123,null],[12,"f_bavail","","",123,null],[12,"f_files","","",123,null],[12,"f_ffree","","",123,null],[12,"f_favail","","",123,null],[12,"f_fsid","","",123,null],[12,"f_flag","","",123,null],[12,"f_namemax","","",123,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",124,null],[12,"exponent","","",124,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",125,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"_st","","",126,null],[12,"_xmm","","",126,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",127,null],[12,"r14","","",127,null],[12,"r13","","",127,null],[12,"r12","","",127,null],[12,"rbp","","",127,null],[12,"rbx","","",127,null],[12,"r11","","",127,null],[12,"r10","","",127,null],[12,"r9","","",127,null],[12,"r8","","",127,null],[12,"rax","","",127,null],[12,"rcx","","",127,null],[12,"rdx","","",127,null],[12,"rsi","","",127,null],[12,"rdi","","",127,null],[12,"orig_rax","","",127,null],[12,"rip","","",127,null],[12,"cs","","",127,null],[12,"eflags","","",127,null],[12,"rsp","","",127,null],[12,"ss","","",127,null],[12,"fs_base","","",127,null],[12,"gs_base","","",127,null],[12,"ds","","",127,null],[12,"es","","",127,null],[12,"fs","","",127,null],[12,"gs","","",127,null],[3,"user","","",null,null],[12,"regs","","",128,null],[12,"u_fpvalid","","",128,null],[12,"i387","","",128,null],[12,"u_tsize","","",128,null],[12,"u_dsize","","",128,null],[12,"u_ssize","","",128,null],[12,"start_code","","",128,null],[12,"start_stack","","",128,null],[12,"signal","","",128,null],[12,"u_ar0","","",128,null],[12,"u_fpstate","","",128,null],[12,"magic","","",128,null],[12,"u_comm","","",128,null],[12,"u_debugreg","","",128,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",129,null],[12,"fpregs","","",129,null],[3,"ipc_perm","","",null,null],[12,"__key","","",130,null],[12,"uid","","",130,null],[12,"gid","","",130,null],[12,"cuid","","",130,null],[12,"cgid","","",130,null],[12,"mode","","",130,null],[12,"__seq","","",130,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",131,null],[12,"shm_segsz","","",131,null],[12,"shm_atime","","",131,null],[12,"shm_dtime","","",131,null],[12,"shm_ctime","","",131,null],[12,"shm_cpid","","",131,null],[12,"shm_lpid","","",131,null],[12,"shm_nattch","","",131,null],[3,"termios2","","",null,null],[12,"c_iflag","","",132,null],[12,"c_oflag","","",132,null],[12,"c_cflag","","",132,null],[12,"c_lflag","","",132,null],[12,"c_line","","",132,null],[12,"c_cc","","",132,null],[12,"c_ispeed","","",132,null],[12,"c_ospeed","","",132,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",133,null],[12,"imr_address","","",133,null],[12,"imr_ifindex","","",133,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",134,null],[12,"swd","","",134,null],[12,"ftw","","",134,null],[12,"fop","","",134,null],[12,"rip","","",134,null],[12,"rdp","","",134,null],[12,"mxcsr","","",134,null],[12,"mxcr_mask","","",134,null],[12,"st_space","","",134,null],[12,"xmm_space","","",134,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",135,null],[12,"uc_link","","",135,null],[12,"uc_stack","","",135,null],[12,"uc_mcontext","","",135,null],[12,"uc_sigmask","","",135,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",136,null],[12,"f_frsize","","",136,null],[12,"f_blocks","","",136,null],[12,"f_bfree","","",136,null],[12,"f_bavail","","",136,null],[12,"f_files","","",136,null],[12,"f_ffree","","",136,null],[12,"f_favail","","",136,null],[12,"f_fsid","","",136,null],[12,"f_flag","","",136,null],[12,"f_namemax","","",136,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",137,null],[12,"vers","","",137,null],[12,"reserved","","",137,null],[12,"metadata_len","","",137,null],[12,"mask","","",137,null],[12,"fd","","",137,null],[12,"pid","","",137,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",138,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[]]],[5,"IPOPT_CLASS","","",null,[[]]],[5,"IPOPT_NUMBER","","",null,[[]]],[5,"IPTOS_ECN","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[]]],[5,"IPTOS_PREC","","",null,[[]]],[5,"RT_TOS","","",null,[[]]],[5,"RT_ADDRCLASS","","",null,[[]]],[5,"RT_LOCALADDR","","",null,[[]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"open_wmemstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",118,[[]]],[11,"si_value","","",118,[[],["sigval",3]]],[11,"si_pid","","",118,[[],["pid_t",6]]],[11,"si_uid","","",118,[[],["uid_t",6]]],[11,"si_status","","",118,[[],["c_int",6]]],[11,"si_utime","","",118,[[],["c_long",6]]],[11,"si_stime","","",118,[[],["c_long",6]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_ULP","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[11,"from","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",157,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",158,[[],["file",4]]],[11,"clone","","",159,[[],["fpos_t",4]]],[11,"clone","","",160,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",140,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",141,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",161,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",142,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",143,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["dl_phdr_info",3]]],[11,"clone","","",66,[[],["elf32_ehdr",3]]],[11,"clone","","",67,[[],["elf64_ehdr",3]]],[11,"clone","","",68,[[],["elf32_sym",3]]],[11,"clone","","",69,[[],["elf64_sym",3]]],[11,"clone","","",70,[[],["elf32_phdr",3]]],[11,"clone","","",71,[[],["elf64_phdr",3]]],[11,"clone","","",72,[[],["elf32_shdr",3]]],[11,"clone","","",73,[[],["elf64_shdr",3]]],[11,"clone","","",74,[[],["elf32_chdr",3]]],[11,"clone","","",75,[[],["elf64_chdr",3]]],[11,"clone","","",76,[[],["ucred",3]]],[11,"clone","","",77,[[],["mntent",3]]],[11,"clone","","",144,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",145,[[],["posix_spawnattr_t",3]]],[11,"clone","","",78,[[],["genlmsghdr",3]]],[11,"clone","","",79,[[],["in6_pktinfo",3]]],[11,"clone","","",80,[[],["arpd_request",3]]],[11,"clone","","",81,[[],["inotify_event",3]]],[11,"clone","","",82,[[],["fanotify_response",3]]],[11,"clone","","",83,[[],["sockaddr_vm",3]]],[11,"clone","","",84,[[],["regmatch_t",3]]],[11,"clone","","",85,[[],["sock_extended_err",3]]],[11,"clone","","",86,[[],["sockaddr_nl",3]]],[11,"clone","","",87,[[],["dirent",3]]],[11,"clone","","",88,[[],["dirent64",3]]],[11,"clone","","",89,[[],["sockaddr_alg",3]]],[11,"clone","","",90,[[],["af_alg_iv",3]]],[11,"clone","","",91,[[],["mq_attr",3]]],[11,"clone","","",92,[[],["statx",3]]],[11,"clone","","",93,[[],["statx_timestamp",3]]],[11,"clone","","",94,[[],["aiocb",3]]],[11,"clone","","",95,[[],["__exit_status",3]]],[11,"clone","","",96,[[],["__timeval",3]]],[11,"clone","","",97,[[],["glob64_t",3]]],[11,"clone","","",98,[[],["msghdr",3]]],[11,"clone","","",99,[[],["cmsghdr",3]]],[11,"clone","","",100,[[],["termios",3]]],[11,"clone","","",101,[[],["mallinfo",3]]],[11,"clone","","",102,[[],["nlmsghdr",3]]],[11,"clone","","",103,[[],["nlmsgerr",3]]],[11,"clone","","",104,[[],["nl_pktinfo",3]]],[11,"clone","","",105,[[],["nl_mmap_req",3]]],[11,"clone","","",106,[[],["nl_mmap_hdr",3]]],[11,"clone","","",107,[[],["nlattr",3]]],[11,"clone","","",108,[[],["rtentry",3]]],[11,"clone","","",109,[[],["timex",3]]],[11,"clone","","",110,[[],["ntptimeval",3]]],[11,"clone","","",146,[[],["regex_t",3]]],[11,"clone","","",111,[[],["utmpx",3]]],[11,"clone","","",147,[[],["sigset_t",3]]],[11,"clone","","",112,[[],["sysinfo",3]]],[11,"clone","","",113,[[],["msqid_ds",3]]],[11,"clone","","",114,[[],["sigaction",3]]],[11,"clone","","",115,[[],["statfs",3]]],[11,"clone","","",116,[[],["flock",3]]],[11,"clone","","",117,[[],["flock64",3]]],[11,"clone","","",118,[[],["siginfo_t",3]]],[11,"clone","","",119,[[],["stack_t",3]]],[11,"clone","","",120,[[],["stat",3]]],[11,"clone","","",121,[[],["stat64",3]]],[11,"clone","","",122,[[],["statfs64",3]]],[11,"clone","","",123,[[],["statvfs64",3]]],[11,"clone","","",148,[[],["pthread_attr_t",3]]],[11,"clone","","",124,[[],["_libc_fpxreg",3]]],[11,"clone","","",125,[[],["_libc_xmmreg",3]]],[11,"clone","","",126,[[],["_libc_fpstate",3]]],[11,"clone","","",127,[[],["user_regs_struct",3]]],[11,"clone","","",128,[[],["user",3]]],[11,"clone","","",129,[[],["mcontext_t",3]]],[11,"clone","","",130,[[],["ipc_perm",3]]],[11,"clone","","",131,[[],["shmid_ds",3]]],[11,"clone","","",132,[[],["termios2",3]]],[11,"clone","","",133,[[],["ip_mreqn",3]]],[11,"clone","","",134,[[],["user_fpregs_struct",3]]],[11,"clone","","",135,[[],["ucontext_t",3]]],[11,"clone","","",136,[[],["statvfs",3]]],[11,"clone","","",149,[[],["max_align_t",3]]],[11,"clone","","",150,[[],["sem_t",3]]],[11,"clone","","",151,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",152,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",153,[[],["pthread_condattr_t",3]]],[11,"clone","","",137,[[],["fanotify_event_metadata",3]]],[11,"clone","","",154,[[],["pthread_cond_t",3]]],[11,"clone","","",155,[[],["pthread_mutex_t",3]]],[11,"clone","","",156,[[],["pthread_rwlock_t",3]]],[11,"clone","","",138,[[],["in6_addr",3]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"regex_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]},\
"memchr":{"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],["memchr",3]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr2",3]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr3",3]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],[["rev",3],["memchr",3]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["rev",3],["memchr2",3]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["rev",3],["memchr3",3]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memchr2","","Like `memchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memchr3","","Like `memchr`, but searches for any of three bytes instead…",null,[[],["option",4]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memrchr2","","Like `memrchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memrchr3","","Like `memrchr`, but searches for any of three bytes…",null,[[],["option",4]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[],["memchr2",3]]],[11,"new","","Create a new `Memchr3` that\'s initialized to zero with a…",2,[[],["memchr3",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"raw_field","memoffset","Computes a const raw pointer to the given field of the…",null,null],[14,"offset_of","","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib…","i":[[3,"StreamResult","miniz_oxide","A structure containg the result of a call to the inflate…",null,null],[12,"bytes_consumed","","The number of bytes consumed from the input slice.",0,null],[12,"bytes_written","","The number of bytes written to the output slice.",0,null],[12,"status","","The return status of the call.",0,null],[4,"MZFlush","","A list of flush types.",null,null],[13,"None","","Don\'t force any flushing. Used when more input data is…",1,null],[13,"Partial","","Zlib partial flush. Currently treated as `Sync`.",1,null],[13,"Sync","","Finish compressing the currently buffered data, and output…",1,null],[13,"Full","","Same as `Sync`, but resets the compression dictionary so…",1,null],[13,"Finish","","Attempt to flush the remaining data and end the stream.",1,null],[13,"Block","","Not implemented.",1,null],[4,"MZStatus","","A list of miniz successful status codes.",null,null],[13,"Ok","","",2,null],[13,"StreamEnd","","",2,null],[13,"NeedDict","","",2,null],[4,"MZError","","A list of miniz failed status codes.",null,null],[13,"ErrNo","","",3,null],[13,"Stream","","",3,null],[13,"Data","","",3,null],[13,"Mem","","",3,null],[13,"Buf","","",3,null],[13,"Version","","",3,null],[13,"Param","","",3,null],[4,"DataFormat","","How compressed data is wrapped.",null,null],[13,"Zlib","","Wrapped using the zlib format.",4,null],[13,"Raw","","Raw DEFLATE.",4,null],[0,"deflate","","This module contains functionality for compression.",null,null],[4,"CompressionLevel","miniz_oxide::deflate","How much processing the compressor should do to compress…",null,null],[13,"NoCompression","","Don\'t do any compression, only output uncompressed blocks.",5,null],[13,"BestSpeed","","Fast compression. Uses a special compression routine that…",5,null],[13,"BestCompression","","Slow/high compression. Do a lot of checks to try to find…",5,null],[13,"UberCompression","","Even more checks, can be very slow.",5,null],[13,"DefaultLevel","","Default compromise between speed and compression.",5,null],[13,"DefaultCompression","","Use the default compression level.",5,null],[5,"compress_to_vec","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[5,"compress_to_vec_zlib","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[0,"core","","Streaming compression functionality.",null,null],[3,"CompressorOxide","miniz_oxide::deflate::core","Main compression struct.",null,null],[3,"CallbackFunc","","Callback function and user used in `compress_to_output`.",null,null],[12,"put_buf_func","","",6,null],[4,"CompressionStrategy","","Strategy setting for compression.",null,null],[13,"Default","","Don\'t use any of the special strategies.",7,null],[13,"Filtered","","Only use matches that are at least 5 bytes long.",7,null],[13,"HuffmanOnly","","Don\'t look for matches, only huffman encode the literals.",7,null],[13,"RLE","","Only look for matches with a distance of 1, i.e do…",7,null],[13,"Fixed","","Only use static/fixed blocks. (Blocks using the default…",7,null],[4,"TDEFLFlush","","A list of deflate flush types.",null,null],[13,"None","","Compress as much as there is space for, and then return…",8,null],[13,"Sync","","Try to flush the current data and output an empty raw block.",8,null],[13,"Full","","Same as sync, but reset the dictionary so that the…",8,null],[13,"Finish","","Try to flush everything and end the stream.",8,null],[4,"TDEFLStatus","","Return status codes.",null,null],[13,"BadParam","","",9,null],[13,"PutBufFailed","","",9,null],[13,"Okay","","",9,null],[13,"Done","","",9,null],[5,"compress","","Main compression function. Tries to compress as much as…",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"compress_to_output","","Main compression function. Callbacks output.",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"create_comp_flags_from_zip_params","","Create a set of compression flags using parameters used by…",null,[[]]],[0,"deflate_flags","","",null,null],[17,"TDEFL_WRITE_ZLIB_HEADER","miniz_oxide::deflate::core::deflate_flags","Whether to use a zlib wrapper.",null,null],[17,"TDEFL_COMPUTE_ADLER32","","Should we compute the adler32 checksum.",null,null],[17,"TDEFL_GREEDY_PARSING_FLAG","","Should we use greedy parsing (as opposed to lazy parsing…",null,null],[17,"TDEFL_NONDETERMINISTIC_PARSING_FLAG","","Used in miniz to skip zero-initializing hash and dict. We…",null,null],[17,"TDEFL_RLE_MATCHES","","Only look for matches with a distance of 0.",null,null],[17,"TDEFL_FILTER_MATCHES","","Only use matches that are at least 6 bytes long.",null,null],[17,"TDEFL_FORCE_ALL_STATIC_BLOCKS","","Force the compressor to only output static blocks. (Blocks…",null,null],[17,"TDEFL_FORCE_ALL_RAW_BLOCKS","","Force the compressor to only output raw/uncompressed blocks.",null,null],[11,"new","miniz_oxide::deflate::core","",8,[[],[["mzerror",4],["result",4]]]],[11,"new","","Create a new `CompressorOxide` with the given flags.",10,[[]]],[11,"adler32","","Get the adler32 checksum of the currently encoded data.",10,[[]]],[11,"prev_return_status","","Get the return status of the previous `compress` call with…",10,[[],["tdeflstatus",4]]],[11,"flags","","Get the raw compressor flags.",10,[[]]],[11,"data_format","","Returns whether the compressor is wrapping the data in a…",10,[[],["dataformat",4]]],[11,"reset","","Reset the state of the compressor, keeping the same…",10,[[]]],[11,"set_compression_level","","Set the compression level of the compressor.",10,[[["compressionlevel",4]]]],[11,"set_compression_level_raw","","Set the compression level of the compressor using an…",10,[[]]],[11,"set_format_and_level","","Update the compression settings of the compressor.",10,[[["dataformat",4]]]],[0,"stream","miniz_oxide::deflate","Extra streaming compression functionality.",null,null],[5,"deflate","miniz_oxide::deflate::stream","Try to compress from input to output with the given…",null,[[["mzflush",4],["compressoroxide",3]],["streamresult",3]]],[0,"inflate","miniz_oxide","This module contains functionality for decompression.",null,null],[4,"TINFLStatus","miniz_oxide::inflate","Return status codes.",null,null],[13,"FailedCannotMakeProgress","","More input data was expected, but the caller indicated…",11,null],[13,"BadParam","","One or more of the input parameters were invalid.",11,null],[13,"Adler32Mismatch","","The decompression went fine, but the adler32 checksum did…",11,null],[13,"Failed","","Failed to decompress due to invalid data.",11,null],[13,"Done","","Finished decomression without issues.",11,null],[13,"NeedsMoreInput","","The decompressor needs more input data to continue…",11,null],[13,"HasMoreOutput","","There is still pending data that didn\'t fit in the output…",11,null],[5,"decompress_to_vec","","Decompress the deflate-encoded data in `input` to a vector.",null,[[],[["vec",3],["result",4],["tinflstatus",4]]]],[5,"decompress_to_vec_zlib","","Decompress the deflate-encoded data (with a zlib wrapper)…",null,[[],[["vec",3],["result",4],["tinflstatus",4]]]],[5,"decompress_to_vec_with_limit","","Decompress the deflate-encoded data in `input` to a…",null,[[],[["vec",3],["result",4],["tinflstatus",4]]]],[5,"decompress_to_vec_zlib_with_limit","","Decompress the deflate-encoded data (with a zlib wrapper)…",null,[[],[["vec",3],["result",4],["tinflstatus",4]]]],[0,"core","","Streaming decompression functionality.",null,null],[3,"DecompressorOxide","miniz_oxide::inflate::core","Main decompression struct.",null,null],[5,"decompress","","Main decompression function. Keeps decompressing data from…",null,[[["decompressoroxide",3]]]],[0,"inflate_flags","","",null,null],[17,"TINFL_FLAG_PARSE_ZLIB_HEADER","miniz_oxide::inflate::core::inflate_flags","Should we try to parse a zlib header?",null,null],[17,"TINFL_FLAG_HAS_MORE_INPUT","","There is more input that hasn\'t been given to the…",null,null],[17,"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","","The output buffer should not wrap around.",null,null],[17,"TINFL_FLAG_COMPUTE_ADLER32","","Should we calculate the adler32 checksum of the output data?",null,null],[17,"TINFL_LZ_DICT_SIZE","miniz_oxide::inflate::core","",null,null],[11,"new","","Create a new tinfl_decompressor with all fields set to 0.",12,[[],["decompressoroxide",3]]],[11,"init","","Set the current state to `Start`.",12,[[]]],[11,"adler32","","Returns the adler32 checksum of the currently decompressed…",12,[[],["option",4]]],[0,"stream","miniz_oxide::inflate","Extra streaming decompression functionality.",null,null],[3,"MinReset","miniz_oxide::inflate::stream","Resets state, without performing expensive ops (e.g.…",null,null],[3,"ZeroReset","","Resets state and zero memory, continuing to use the same…",null,null],[3,"FullReset","","Full reset of the state, including zeroing memory.",null,null],[12,"0","","",13,null],[3,"InflateState","","A struct that compbines a decompressor with extra data for…",null,null],[5,"inflate","","Try to decompress from `input` to `output` with the given…",null,[[["mzflush",4],["inflatestate",3]],["streamresult",3]]],[8,"ResetPolicy","","Tag that determines reset policy of InflateState",null,null],[10,"reset","","Performs reset",14,[[["inflatestate",3]]]],[11,"new","","Create a new state.",15,[[["dataformat",4]],["inflatestate",3]]],[11,"new_boxed","","Create a new state on the heap.",15,[[["dataformat",4]],[["inflatestate",3],["box",3]]]],[11,"decompressor","","Access the innner decompressor.",15,[[],["decompressoroxide",3]]],[11,"last_status","","Return the status of the last call to `inflate` with this…",15,[[],["tinflstatus",4]]],[11,"new_boxed_with_window_bits","","Create a new state using miniz/zlib style window bits…",15,[[],[["inflatestate",3],["box",3]]]],[11,"reset","","Reset the decompressor without re-allocating memory, using…",15,[[["dataformat",4]]]],[11,"reset_as","","Resets the state according to specified policy.",15,[[["resetpolicy",8]]]],[11,"from_i32","miniz_oxide::inflate","",11,[[],[["option",4],["tinflstatus",4]]]],[6,"MZResult","miniz_oxide","`Result` alias for all miniz status codes both successful…",null,null],[11,"new","","Create an MZFlush value from an integer value.",1,[[],[["mzerror",4],["result",4]]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","miniz_oxide::deflate","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","miniz_oxide::deflate::core","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","miniz_oxide::inflate","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","miniz_oxide::inflate::core","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::stream","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"reset","","",16,[[["inflatestate",3]]]],[11,"reset","","",17,[[["inflatestate",3]]]],[11,"reset","","",13,[[["inflatestate",3]]]],[11,"from","miniz_oxide::deflate::core","",8,[[["mzflush",4]]]],[11,"from","miniz_oxide","",18,[[["streamresult",3]]]],[11,"from","","",18,[[["streamresult",3]]]],[11,"fmt","miniz_oxide::deflate::core","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::deflate","",5,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::inflate","",11,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","miniz_oxide::deflate::core","",7,[[["compressionstrategy",4]]]],[11,"eq","","",8,[[["tdeflflush",4]]]],[11,"eq","","",9,[[["tdeflstatus",4]]]],[11,"eq","miniz_oxide::deflate","",5,[[["compressionlevel",4]]]],[11,"eq","miniz_oxide::inflate","",11,[[["tinflstatus",4]]]],[11,"eq","miniz_oxide","",1,[[["mzflush",4]]]],[11,"eq","","",2,[[["mzstatus",4]]]],[11,"eq","","",3,[[["mzerror",4]]]],[11,"eq","","",4,[[["dataformat",4]]]],[11,"eq","","",0,[[["streamresult",3]]]],[11,"ne","","",0,[[["streamresult",3]]]],[11,"hash","miniz_oxide::deflate::core","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","miniz_oxide::deflate","",5,[[]]],[11,"hash","miniz_oxide::inflate","",11,[[]]],[11,"hash","miniz_oxide","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"clone","miniz_oxide::deflate::core","",7,[[],["compressionstrategy",4]]],[11,"clone","","",8,[[],["tdeflflush",4]]],[11,"clone","","",9,[[],["tdeflstatus",4]]],[11,"clone","miniz_oxide::deflate","",5,[[],["compressionlevel",4]]],[11,"clone","miniz_oxide::inflate","",11,[[],["tinflstatus",4]]],[11,"clone","miniz_oxide","",1,[[],["mzflush",4]]],[11,"clone","","",2,[[],["mzstatus",4]]],[11,"clone","","",3,[[],["mzerror",4]]],[11,"clone","","",4,[[],["dataformat",4]]],[11,"clone","","",0,[[],["streamresult",3]]],[11,"default","miniz_oxide::deflate::core","Initialize the compressor with a level of 4, zlib wrapper…",10,[[]]],[11,"default","miniz_oxide::inflate::core","Create a new tinfl_decompressor with all fields set to 0.",12,[[]]],[11,"default","miniz_oxide::inflate::stream","",15,[[]]]],"p":[[3,"StreamResult"],[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[4,"CompressionLevel"],[3,"CallbackFunc"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"],[4,"TINFLStatus"],[3,"DecompressorOxide"],[3,"FullReset"],[8,"ResetPolicy"],[3,"InflateState"],[3,"MinReset"],[3,"ZeroReset"],[6,"MZResult"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[]]]],"p":[]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"average_ceil","","Returns the ceiling value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"average_floor","","Returns the floor value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer",8]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer",8],["clone",8]],[["integer",8],["clone",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer",8],["clone",8]]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]],[8,"Average","","Provides methods to compute the average of two integers,…",null,null],[10,"average_ceil","","Returns the ceiling value of the average of `self` and…",2,[[]]],[10,"average_floor","","Returns the floor value of the average of `self` and…",2,[[]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",3,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",3,[[]]],[11,"div_ceil","","Ceiled integer division.",3,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",3,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",3,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",3,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",3,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",3,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",3,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",3,[[]]],[10,"is_even","","Returns `true` if the number is even.",3,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",3,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",3,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",3,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",3,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",3,[[]]],[11,"new","","For a given n, iterate over all binomial coefficients…",4,[[],["iterbinomial",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["extendedgcd",3]]]],[11,"ne","","",0,[[["extendedgcd",3]]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",0,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[3,"RangeFrom","","An iterator over the infinite range starting at `start`",null,null],[3,"RangeStepFrom","","An iterator over the infinite range starting at `start` by…",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[5,"range_from","","Return an iterator over the infinite range starting at…",null,[[],["rangefrom",3]]],[5,"range_step_from","","Return an iterator over the infinite range starting at…",null,[[],["rangestepfrom",3]]],[11,"from","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"clone","","",0,[[],["range",3]]],[11,"clone","","",1,[[],["rangeinclusive",3]]],[11,"clone","","",2,[[],["rangestep",3]]],[11,"clone","","",3,[[],["rangestepinclusive",3]]],[11,"clone","","",4,[[],["rangefrom",3]]],[11,"clone","","",5,[[],["rangestepfrom",3]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[]]],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[],["ratio",3]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[]]],[11,"reduced","","Returns a reduced copy of self.",0,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",0,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",0,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",0,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",0,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[],["ratio",3]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[],["ratio",3]]],[11,"approximate_float","","",0,[[["floatcore",8],["numcast",8]],[["option",4],["ratio",3]]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[["parseratioerror",3]]]],[11,"ne","","",1,[[["parseratioerror",3]]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"neg","","",0,[[],["ratio",3]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[],[["ratio",3],["result",4],["parseratioerror",3]]]],[11,"into","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["ratio",3]]],[11,"clone","","",1,[[],["parseratioerror",3]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[],[["ratio",3],["result",4],["parseratioerror",3]]]],[11,"zero","","",0,[[],["ratio",3]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[],["ratio",3]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"checked_add","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_sub","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_mul","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_div","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"inv","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"abs","","",0,[[],["ratio",3]]],[11,"abs_sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"signum","","",0,[[],["ratio",3]]],[11,"is_positive","","",0,[[]]],[11,"is_negative","","",0,[[]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast",8]],[["numcast",8],["option",4]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[]]],[10,"neg_infinity","","Returns negative infinity.",7,[[]]],[10,"nan","","Returns NaN.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[11,"trunc","","Return the integer part of a number.",7,[[]]],[11,"fract","","Returns the fractional part of a number.",7,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[]]],[11,"min","","Returns the minimum of the two numbers.",7,[[]]],[11,"max","","Returns the maximum of the two numbers.",7,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[]]],[11,"powi","","Raise a number to an integer power.",7,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[]]],[10,"infinity","","Returns the infinite value.",8,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[10,"trunc","","Return the integer part of a number.",8,[[]]],[10,"fract","","Returns the fractional part of a number.",8,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[]]],[10,"powi","","Raise a number to an integer power.",8,[[]]],[10,"powf","","Raise a number to a floating point power.",8,[[]]],[10,"sqrt","","Take the square root of a number.",8,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[]]],[10,"exp2","","Returns `2^(self)`.",8,[[]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[]]],[11,"to_degrees","","Converts radians to degrees.",8,[[]]],[11,"to_radians","","Converts degrees to radians.",8,[[]]],[10,"max","","Returns the maximum of the two numbers.",8,[[]]],[10,"min","","Returns the minimum of the two numbers.",8,[[]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[]]],[10,"cbrt","","Take the cubic root of a number.",8,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[]]],[10,"sinh","","Hyperbolic sine function.",8,[[]]],[10,"cosh","","Hyperbolic cosine function.",8,[[]]],[10,"tanh","","Hyperbolic tangent function.",8,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",9,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",9,[[]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one",8]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",18,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",25,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",26,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",27,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",28,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",29,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",30,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",31,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",32,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",33,[[]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["clone",8],["one",8],["mul",8]],[["clone",8],["one",8],["mul",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["clone",8],["one",8],["checkedmul",8]],[["clone",8],["one",8],["option",4],["checkedmul",8]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",34,null],[10,"pow","","Returns `self` to the power `rhs`.",34,[[]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",35,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",35,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",35,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",35,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",35,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",35,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",35,[[]]],[10,"trunc","","Return the integer part of a number.",35,[[]]],[10,"fract","","Returns the fractional part of a number.",35,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",35,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",35,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",35,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",35,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",35,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",35,[[]]],[10,"powi","","Raise a number to an integer power.",35,[[]]],[10,"powf","","Raise a number to a real number power.",35,[[]]],[10,"sqrt","","Take the square root of a number.",35,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",35,[[]]],[10,"exp2","","Returns `2^(self)`.",35,[[]]],[10,"ln","","Returns the natural logarithm of the number.",35,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",35,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",35,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",35,[[]]],[10,"to_degrees","","Converts radians to degrees.",35,[[]]],[10,"to_radians","","Converts degrees to radians.",35,[[]]],[10,"max","","Returns the maximum of the two numbers.",35,[[]]],[10,"min","","Returns the minimum of the two numbers.",35,[[]]],[10,"abs_sub","","The positive difference of two numbers.",35,[[]]],[10,"cbrt","","Take the cubic root of a number.",35,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",35,[[]]],[10,"sin","","Computes the sine of a number (in radians).",35,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",35,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",35,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",35,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",35,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",35,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",35,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",35,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",35,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",35,[[]]],[10,"sinh","","Hyperbolic sine function.",35,[[]]],[10,"cosh","","Hyperbolic cosine function.",35,[[]]],[10,"tanh","","Hyperbolic tangent function.",35,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",35,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",35,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",35,[[]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",36,[[]]],[10,"abs_sub","","The positive difference of two numbers.",36,[[]]],[10,"signum","","Returns the sign of the number.",36,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",36,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",36,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",37,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",37,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]},\
"png":{"doc":"PNG encoder and decoder This crate contains a PNG encoder…","i":[[3,"PixelDimensions","png","Pixel dimensions information",null,null],[12,"xppu","","Pixels per unit, X axis",0,null],[12,"yppu","","Pixels per unit, Y axis",0,null],[12,"unit","","Either Meter or Unspecified",0,null],[3,"FrameControl","","Frame control information",null,null],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",1,null],[12,"width","","Width of the following frame",1,null],[12,"height","","Height of the following frame",1,null],[12,"x_offset","","X position at which to render the following frame",1,null],[12,"y_offset","","Y position at which to render the following frame",1,null],[12,"delay_num","","Frame delay fraction numerator",1,null],[12,"delay_den","","Frame delay fraction denominator",1,null],[12,"dispose_op","","Type of frame area disposal to be done after rendering…",1,null],[12,"blend_op","","Type of frame area rendering for this frame",1,null],[3,"AnimationControl","","Animation control information",null,null],[12,"num_frames","","Number of frames",2,null],[12,"num_plays","","Number of times to loop this APNG. 0 indicates infinite…",2,null],[3,"Info","","PNG info struct",null,null],[12,"width","","",3,null],[12,"height","","",3,null],[12,"bit_depth","","",3,null],[12,"color_type","","",3,null],[12,"interlaced","","",3,null],[12,"trns","","",3,null],[12,"pixel_dims","","",3,null],[12,"palette","","",3,null],[12,"frame_control","","",3,null],[12,"animation_control","","",3,null],[12,"compression","","",3,null],[12,"filter","","",3,null],[3,"Transformations","","Output transformations",null,null],[3,"Decoder","","PNG Decoder",null,null],[3,"Limits","","Limits on the resources the `Decoder` is allowed too use",null,null],[12,"bytes","","maximum number of bytes the decoder is allowed to…",4,null],[3,"OutputInfo","","Output info",null,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"color_type","","",5,null],[12,"bit_depth","","",5,null],[12,"line_size","","",5,null],[3,"Reader","","PNG reader (mostly high-level interface)",null,null],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",null,null],[3,"Encoder","","PNG Encoder",null,null],[3,"StreamWriter","","Streaming png writer",null,null],[3,"Writer","","PNG writer",null,null],[4,"ColorType","","Describes the layout of samples in a pixel",null,null],[13,"Grayscale","","",6,null],[13,"RGB","","",6,null],[13,"Indexed","","",6,null],[13,"GrayscaleAlpha","","",6,null],[13,"RGBA","","",6,null],[4,"BitDepth","","Bit depth of the png file",null,null],[13,"One","","",7,null],[13,"Two","","",7,null],[13,"Four","","",7,null],[13,"Eight","","",7,null],[13,"Sixteen","","",7,null],[4,"Unit","","Physical unit of the pixel dimensions",null,null],[13,"Unspecified","","",8,null],[13,"Meter","","",8,null],[4,"DisposeOp","","How to reset buffer of an animated png (APNG) at the end…",null,null],[13,"None","","Leave the buffer unchanged.",9,null],[13,"Background","","Clear buffer with the background color.",9,null],[13,"Previous","","Reset the buffer to the state before the current frame.",9,null],[4,"BlendOp","","How pixels are written into the buffer.",null,null],[13,"Source","","Pixels overwrite the value at their position.",10,null],[13,"Over","","The new pixels are blended into the current state based on…",10,null],[4,"Compression","","The type and strength of applied compression.",null,null],[13,"Default","","Default level  ",11,null],[13,"Fast","","Fast minimal compression",11,null],[13,"Best","","Higher compression level  ",11,null],[13,"Huffman","","",11,null],[13,"Rle","","",11,null],[4,"Decoded","","Result of the decoding process",null,null],[13,"Nothing","","Nothing decoded yet",12,null],[13,"Header","","",12,null],[13,"ChunkBegin","","",12,null],[13,"ChunkComplete","","",12,null],[13,"PixelDimensions","","",12,null],[13,"AnimationControl","","",12,null],[13,"FrameControl","","",12,null],[13,"ImageData","","Decoded raw image data.",12,null],[13,"ImageDataFlushed","","The last of a consecutive chunk of IDAT was done. This is…",12,null],[13,"PartialChunk","","",12,null],[13,"ImageEnd","","",12,null],[4,"DecodingError","","",null,null],[13,"IoError","","",13,null],[13,"Format","","",13,null],[13,"InvalidSignature","","",13,null],[13,"CrcMismatch","","",13,null],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",14,null],[12,"crc_val","","Stored CRC32 value",14,null],[12,"crc_sum","","Calculated CRC32 sum",14,null],[12,"chunk","","",14,null],[13,"Other","png","",13,null],[13,"CorruptFlateStream","","",13,null],[13,"LimitsExceeded","","",13,null],[4,"EncodingError","","",null,null],[13,"IoError","","",15,null],[13,"Format","","",15,null],[4,"FilterType","","The byte level filter applied to scanlines to prepare them…",null,null],[13,"NoFilter","","",16,null],[13,"Sub","","",16,null],[13,"Up","","",16,null],[13,"Avg","","",16,null],[13,"Paeth","","",16,null],[0,"chunk","","Chunk types and functions",null,null],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",null,[[["chunktype",6]]]],[5,"is_private","","Returns true if the chunk is private.",null,[[["chunktype",6]]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set.…",null,[[["chunktype",6]]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",null,[[["chunktype",6]]]],[6,"ChunkType","","",null,null],[17,"IHDR","","Image header",null,null],[17,"PLTE","","Palette",null,null],[17,"IDAT","","Image data",null,null],[17,"IEND","","Image trailer",null,null],[17,"tRNS","","Transparency",null,null],[17,"bKGD","","Background colour",null,null],[17,"tIME","","Image last-modification time",null,null],[17,"pHYs","","Physical pixel dimensions",null,null],[17,"acTL","","Animation control",null,null],[17,"fcTL","","Frame control",null,null],[17,"fdAT","","Frame data",null,null],[11,"samples","png","Returns the number of samples used per pixel of `ColorType`",6,[[]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",6,[[],[["colortype",4],["option",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",7,[[],[["option",4],["bitdepth",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",8,[[],[["option",4],["unit",4]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably…",9,[[],[["option",4],["disposeop",4]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably…",10,[[],[["blendop",4],["option",4]]]],[11,"set_seq_num","","",1,[[]]],[11,"inc_seq_num","","",1,[[]]],[11,"size","","Size of the image",3,[[]]],[11,"is_animated","","Returns true if the image is an APNG image.",3,[[]]],[11,"animation_control","","Returns the frame control information of the image",3,[[],[["animationcontrol",3],["option",4]]]],[11,"frame_control","","Returns the frame control information of the current frame",3,[[],[["framecontrol",3],["option",4]]]],[11,"bits_per_pixel","","Returns the bits per pixel",3,[[]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",3,[[]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced…",3,[[]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced row",3,[[]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced…",3,[[]]],[18,"IDENTITY","","No transformation",17,null],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",17,null],[18,"STRIP_ALPHA","","Discard the alpha channel",17,null],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",17,null],[18,"PACKSWAP","","Change order of packed pixels to LSB first",17,null],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of…",17,null],[18,"INVERT_MONO","","Invert monochrome images",17,null],[18,"SHIFT","","Normalize pixels to the sBIT depth",17,null],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",17,null],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",17,null],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",17,null],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",17,null],[18,"STRIP_FILLER","","",17,null],[18,"STRIP_FILLER_BEFORE","","",17,null],[18,"STRIP_FILLER_AFTER","","",17,null],[18,"GRAY_TO_RGB","","",17,null],[18,"EXPAND_16","","",17,null],[18,"SCALE_16","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["transformations",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["transformations",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[],[["transformations",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[],["transformations",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[],["transformations",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["transformations",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["transformations",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["transformations",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["transformations",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["transformations",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["transformations",3]]]],[11,"new","","Creates a new StreamingDecoder",18,[[],["streamingdecoder",3]]],[11,"reset","","Resets the StreamingDecoder",18,[[]]],[11,"update","","Low level StreamingDecoder interface.",18,[[["vec",3]],[["decodingerror",4],["result",4]]]],[11,"buffer_size","","Returns the size needed to hold a decoded frame",5,[[]]],[11,"new","","",19,[[],["decoder",3]]],[11,"new_with_limits","","",19,[[["limits",3]],["decoder",3]]],[11,"set_limits","","Limit resource usage",19,[[["limits",3]]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",19,[[],[["decodingerror",4],["result",4]]]],[11,"set_transformations","","Set the allowed and performed transformations.",19,[[["transformations",3]]]],[11,"info","","Get information on the image.",20,[[],["info",3]]],[11,"next_frame","","Decodes the next frame into `buf`.",20,[[],[["result",4],["decodingerror",4]]]],[11,"next_row","","Returns the next processed row of the image",20,[[],[["decodingerror",4],["result",4],["option",4]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",20,[[],[["decodingerror",4],["result",4],["option",4]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample…",20,[[]]],[11,"output_buffer_size","","Returns the number of bytes required to hold a…",20,[[]]],[11,"output_line_size","","Returns the number of bytes required to hold a…",20,[[]]],[11,"new","","",21,[[],["encoder",3]]],[11,"set_palette","","",21,[[["vec",3]]]],[11,"set_trns","","",21,[[["vec",3]]]],[11,"write_header","","",21,[[],[["result",4],["writer",3],["encodingerror",4]]]],[11,"set_color","","Set the color of the encoded image.",21,[[["colortype",4]]]],[11,"set_depth","","Set the indicated depth of the image data.",21,[[["bitdepth",4]]]],[11,"set_compression","","Set compression parameters.",21,[[["compression",4],["into",8]]]],[11,"set_filter","","Set the used filter type.",21,[[["filtertype",4]]]],[11,"write_chunk","","",22,[[],[["encodingerror",4],["result",4]]]],[11,"write_image_data","","Writes the image data.",22,[[],[["encodingerror",4],["result",4]]]],[11,"stream_writer","","Create an stream writer.",22,[[],["streamwriter",3]]],[11,"stream_writer_with_size","","Create a stream writer with custom buffer size.",22,[[],["streamwriter",3]]],[11,"into_stream_writer","","Turn this into a stream writer for image data.",22,[[],["streamwriter",3]]],[11,"into_stream_writer_with_size","","Turn this into a stream writer with custom buffer size.",22,[[],["streamwriter",3]]],[11,"finish","","",23,[[],[["encodingerror",4],["result",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",16,[[],[["filtertype",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"drop","","",22,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",11,[[["compression",4]]]],[11,"from","","",13,[[["error",3]],["decodingerror",4]]],[11,"from","","",13,[[["string",3]],["decodingerror",4]]],[11,"from","","",15,[[["error",3]],["encodingerror",4]]],[11,"extend","","",17,[[["intoiterator",8]]]],[11,"clone","","",6,[[],["colortype",4]]],[11,"clone","","",7,[[],["bitdepth",4]]],[11,"clone","","",0,[[],["pixeldimensions",3]]],[11,"clone","","",8,[[],["unit",4]]],[11,"clone","","",9,[[],["disposeop",4]]],[11,"clone","","",10,[[],["blendop",4]]],[11,"clone","","",1,[[],["framecontrol",3]]],[11,"clone","","",2,[[],["animationcontrol",3]]],[11,"clone","","",11,[[],["compression",4]]],[11,"clone","","",3,[[],["info",3]]],[11,"clone","","",17,[[],["transformations",3]]],[11,"clone","","",4,[[],["limits",3]]],[11,"clone","","",16,[[],["filtertype",4]]],[11,"default","","",1,[[],["framecontrol",3]]],[11,"default","","",3,[[],["info",3]]],[11,"default","","",18,[[]]],[11,"default","","",4,[[],["limits",3]]],[11,"cmp","","",17,[[["transformations",3]],["ordering",4]]],[11,"eq","","",6,[[["colortype",4]]]],[11,"eq","","",7,[[["bitdepth",4]]]],[11,"eq","","",8,[[["unit",4]]]],[11,"eq","","",9,[[["disposeop",4]]]],[11,"eq","","",10,[[["blendop",4]]]],[11,"eq","","",17,[[["transformations",3]]]],[11,"ne","","",17,[[["transformations",3]]]],[11,"eq","","",5,[[["outputinfo",3]]]],[11,"ne","","",5,[[["outputinfo",3]]]],[11,"eq","","",16,[[["filtertype",4]]]],[11,"partial_cmp","","",17,[[["transformations",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["transformations",3]]]],[11,"le","","",17,[[["transformations",3]]]],[11,"gt","","",17,[[["transformations",3]]]],[11,"ge","","",17,[[["transformations",3]]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["transformations",3]],["transformations",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["transformations",3]]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["transformations",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["transformations",3]],["transformations",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["transformations",3]],["transformations",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",17,[[["transformations",3]],["transformations",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["transformations",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["transformations",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["transformations",3]]]],[11,"hash","","",17,[[]]],[11,"from_iter","","",17,[[["intoiterator",8]],["transformations",3]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"cause","","",13,[[],[["option",4],["error",8]]]],[11,"cause","","",15,[[],[["option",4],["error",8]]]],[11,"write","","",23,[[],["result",6]]],[11,"flush","","",23,[[],["result",6]]]],"p":[[3,"PixelDimensions"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"Limits"],[3,"OutputInfo"],[4,"ColorType"],[4,"BitDepth"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[4,"Compression"],[4,"Decoded"],[4,"DecodingError"],[13,"CrcMismatch"],[4,"EncodingError"],[4,"FilterType"],[3,"Transformations"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"StreamWriter"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,"FnContext","rayon","Provides the calling context to a closure called by…",null,null],[3,"ThreadBuilder","","Thread builder used for customization via…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],["option",4]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[]]],[5,"scope","","Creates a \\\"fork-join\\\" scope `s` and invokes the closure…",null,[[]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"scope_fifo","","Creates a \\\"fork-join\\\" scope `s` with FIFO order, and…",null,[[]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[0,"collections","","Parallel iterator types for [standard…",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",null,null],[3,"Drain","","Draining parallel iterator that moves out of a binary…",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[3,"Drain","","Draining parallel iterator that moves out of a hash map,…",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[3,"Drain","","Draining parallel iterator that moves out of a hash set,…",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a…",null,null],[3,"Drain","","Draining parallel iterator that moves a range out of a…",null,null],[0,"iter","rayon","Traits for writing parallel programs using an…",null,null],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",null,null],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",null,null],[3,"Copied","","`Copied` is an iterator that copies the elements of an…",null,null],[3,"Empty","","Iterator adaptor for the `empty()` function.",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",null,null],[3,"FlatMap","","`FlatMap` maps each element to a parallel iterator, then…",null,null],[3,"FlatMapIter","","`FlatMapIter` maps each element to a serial iterator, then…",null,null],[3,"Flatten","","`Flatten` turns each element to a parallel iterator, then…",null,null],[3,"FlattenIter","","`FlattenIter` turns each element to a serial iterator,…",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an…",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",null,null],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",null,null],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",null,null],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an…",null,null],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",null,null],[3,"MultiZip","","`MultiZip` is an iterator that zips up a tuple of parallel…",null,null],[3,"Once","","Iterator adaptor for the `once()` function.",null,null],[3,"PanicFuse","","`PanicFuse` is an adaptor that wraps an iterator with a…",null,null],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",null,null],[3,"Positions","","`Positions` takes a predicate `predicate` and filters out…",null,null],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",null,null],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",null,null],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",null,null],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",null,null],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",null,null],[3,"Update","","`Update` is an iterator that mutates the elements of an…",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",null,null],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",null,null],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two…",null,null],[3,"StepBy","","`StepBy` is an iterator that skips `n` elements between…",null,null],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["send",8],["empty",3]]]],[5,"once","","Creates a parallel iterator that produces an element…",null,[[["send",8]],[["send",8],["once",3]]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",null,[[["clone",8],["send",8]],[["repeat",3],["clone",8],["send",8]]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",null,[[["clone",8],["send",8]],[["repeatn",3],["clone",8],["send",8]]]],[5,"split","","The `split` function takes arbitrary data and a closure…",null,[[],["split",3]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",null,null],[5,"bridge","rayon::iter::plumbing","This helper function is used to \\\"connect\\\" a parallel…",null,[[]]],[5,"bridge_producer_consumer","","This helper function is used to \\\"connect\\\" a producer and a…",null,[[]]],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the…",null,[[]]],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",null,null],[16,"Output","","The type of value returned by this callback. Analogous to…",1,null],[10,"callback","","Invokes the callback with the given producer as argument.…",1,[[]]],[8,"Producer","","A `Producer` is effectively a \\\"splittable `IntoIterator`\\\".…",null,null],[16,"Item","","The type of item that will be produced by this producer…",2,null],[16,"IntoIter","","The type of iterator we will become.",2,null],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len","","The minimum number of items that we will process…",2,[[]]],[11,"max_len","","The maximum number of items that we will process…",2,[[]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,[[]]],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[]]],[8,"Consumer","","A consumer is effectively a [generalized \\\"fold\\\"…",null,null],[16,"Folder","","The type of folder that this consumer can be converted into.",3,null],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,null],[16,"Result","","The type of result that this consumer will ultimately…",3,null],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,[[]]],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold…",null,null],[16,"Result","","The type of result that will ultimately be produced by the…",4,null],[10,"consume","","Consume next item and return new sequential state.",4,[[]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[]]],[10,"complete","","Finish consuming items, produce final result.",4,[[]]],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",null,null],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",null,null],[10,"split_off_left","","Splits off a \\\"left\\\" consumer and returns it. The `self`…",6,[[]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,[[]]],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",null,null],[16,"Item","","The type of item returned by this producer.",7,null],[10,"split","","Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[]]],[11,"take","rayon::iter","Takes only `n` repeats of the element, similar to the…",8,[[],["repeatn",3]]],[11,"zip","","Iterates tuples, repeating the element with items from…",8,[[],[["repeatn",3],["zip",3]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Creates a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge",3]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",null,null],[16,"Iter","","The parallel iterator type that will be created.",10,null],[16,"Item","","The type of item that the parallel iterator will produce.",10,null],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,[[]]],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",11,null],[16,"Item","","The type of item that the parallel iterator will produce.…",11,null],[10,"par_iter","","Converts `self` into a parallel iterator.",11,[[]]],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",null,null],[16,"Iter","","The type of iterator that will be created.",12,null],[16,"Item","","The type of item that will be produced; this is typically…",12,null],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,[[]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",13,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[],["map",3]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[],["mapwith",3]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[],["mapinit",3]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[],["cloned",3]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",13,[[],["copied",3]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[],["inspect",3]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[],["update",3]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[],["filter",3]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[],["filtermap",3]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[],["flatmap",3]]],[11,"flat_map_iter","","Applies `map_op` to each item of this iterator to get…",13,[[],["flatmapiter",3]]],[11,"flatten","","An adaptor that flattens parallel-iterable `Item`s into…",13,[[],["flatten",3]]],[11,"flatten_iter","","An adaptor that flattens serial-iterable `Item`s into one…",13,[[],["flatteniter",3]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,[[]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[],["option",4]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,[[]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[],["option",4]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[],["fold",3]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[],["foldwith",3]]],[11,"try_fold","","Performs a fallible parallel fold.",13,[[],["tryfold",3]]],[11,"try_fold_with","","Performs a fallible parallel fold with a cloneable `init`…",13,[[],["tryfoldwith",3]]],[11,"sum","","Sums up the items in the iterator.",13,[[]]],[11,"product","","Multiplies all the items in the iterator.",13,[[]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[],["option",4]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[],["option",4]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[],["option",4]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[],["option",4]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[],["option",4]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[],["option",4]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[],["chain",3]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[],["option",4]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[],["option",4]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[],["option",4]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",13,[[],["option",4]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[],["whilesome",3]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse",3]]],[11,"collect","","Creates a fresh collection containing all the elements…",13,[[]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,[[]]],[11,"intersperse","","Intersperses clones of an element between items of this…",13,[[],["intersperse",3]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,[[]]],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[],["option",4]]],[8,"IndexedParallelIterator","","An iterator that supports \\\"random access\\\" to its data,…",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["vec",3]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["vec",3],["vec",3]]]],[11,"zip","","Iterates over tuples `(A, B)`, where the items `A` are…",14,[[],["zip",3]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[],["zipeq",3]]],[11,"interleave","","Interleaves elements of this iterator and the other given…",14,[[],["interleave",3]]],[11,"interleave_shortest","","Interleaves elements of this iterator and the other given…",14,[[],["interleaveshortest",3]]],[11,"chunks","","Splits an iterator up into fixed-size chunks.",14,[[],["chunks",3]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[],[["ordering",4],["option",4]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[]]],[11,"enumerate","","Yields an index along with each item.",14,[[],["enumerate",3]]],[11,"step_by","","Creates an iterator that steps by the given amount",14,[[],["stepby",3]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[],["skip",3]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[],["take",3]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[],["option",4]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[],["option",4]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[],["option",4]]],[11,"positions","","Searches for items in the parallel iterator that match the…",14,[[],["positions",3]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[],["rev",3]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[],["minlen",3]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[],["maxlen",3]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[]]],[10,"drive","","Internal method used to define the behavior of this…",14,[[["consumer",8]]]],[10,"with_producer","","Internal method used to define the behavior of this…",14,[[["producercallback",8]]]],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",null,null],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[]]],[8,"ParallelDrainFull","","`ParallelDrainFull` creates a parallel iterator that moves…",null,null],[16,"Iter","","The draining parallel iterator type that will be created.",17,null],[16,"Item","","The type of item that the parallel iterator will produce.…",17,null],[10,"par_drain","","Returns a draining parallel iterator over an entire…",17,[[]]],[8,"ParallelDrainRange","","`ParallelDrainRange` creates a parallel iterator that…",null,null],[16,"Iter","","The draining parallel iterator type that will be created.",18,null],[16,"Item","","The type of item that the parallel iterator will produce.…",18,null],[10,"par_drain","","Returns a draining parallel iterator over a range of the…",18,[[["rangebounds",8]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of…",null,null],[3,"Iter","","A parallel iterator over a reference to the [`Some`]…",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the…",null,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Creates a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge",3]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",null,null],[0,"range_inclusive","rayon","Parallel iterator types for [inclusive…",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented for…",null,null],[0,"result","rayon","Parallel iterator types for [results][std::result]",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"ChunksExact","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"ChunksExactMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",19,[[]]],[11,"par_split","","Returns a parallel iterator over subslices separated by…",19,[[],["split",3]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",19,[[],["windows",3]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",19,[[],["chunks",3]]],[11,"par_chunks_exact","","Returns a parallel iterator over `chunk_size` elements of…",19,[[],["chunksexact",3]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",20,[[]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",20,[[],["splitmut",3]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",20,[[],["chunksmut",3]]],[11,"par_chunks_exact_mut","","Returns a parallel iterator over `chunk_size` elements of…",20,[[],["chunksexactmut",3]]],[11,"par_sort","","Sorts the slice in parallel.",20,[[]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",20,[[]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",20,[[]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",20,[[]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",20,[[]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",20,[[]]],[11,"remainder","","Return the remainder of the original slice that is not…",21,[[]]],[11,"into_remainder","","Return the remainder of the original slice that is not…",22,[[]]],[11,"remainder","","Return the remainder of the original slice that is not…",22,[[]]],[11,"take_remainder","","Return the remainder of the original slice that is not…",22,[[]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",23,[[]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",23,[[],["chars",3]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",23,[[],["charindices",3]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",23,[[],["bytes",3]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",23,[[],["encodeutf16",3]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",23,[[["pattern",8]],[["pattern",8],["split",3]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",23,[[["pattern",8]],[["splitterminator",3],["pattern",8]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",23,[[],["lines",3]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",23,[[],["splitwhitespace",3]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",23,[[["pattern",8]],[["matches",3],["pattern",8]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",23,[[["pattern",8]],[["matchindices",3],["pattern",8]]]],[0,"string","rayon","This module contains the parallel iterator types for owned…",null,null],[3,"Drain","rayon::string","Draining parallel iterator that moves a range of…",null,null],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[3,"Drain","","Draining parallel iterator that moves a range out of a…",null,null],[11,"from","rayon","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"into_par_iter","rayon::collections::binary_heap","",31,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"into_par_iter","","",32,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"into_par_iter","","",33,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"into_par_iter","rayon::collections::btree_map","",34,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"into_par_iter","","",35,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"into_par_iter","","",36,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"into_par_iter","rayon::collections::btree_set","",37,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"into_par_iter","","",38,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"into_par_iter","rayon::collections::hash_map","",39,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"into_par_iter","","",40,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"into_par_iter","","",41,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"into_par_iter","","",42,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"into_par_iter","rayon::collections::hash_set","",43,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"into_par_iter","","",44,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"into_par_iter","","",45,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"into_par_iter","rayon::collections::linked_list","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"into_par_iter","","",47,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"into_par_iter","","",48,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"into_par_iter","rayon::collections::vec_deque","",49,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"into_par_iter","","",50,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"into_par_iter","","",51,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"into_par_iter","","",52,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"into_par_iter","rayon::iter","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"into_par_iter","","",53,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"into_par_iter","","",54,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"into_par_iter","","",55,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"into_par_iter","","",56,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"into_par_iter","","",57,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"into_par_iter","","",58,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"into_par_iter","","",59,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"into_par_iter","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"into_par_iter","","",61,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"into_par_iter","","",62,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"into_par_iter","","",63,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"into_par_iter","","",64,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"into_par_iter","","",65,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"into_par_iter","","",66,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"into_par_iter","","",67,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"into_par_iter","","",68,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"into_par_iter","","",69,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"into_par_iter","","",70,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"into_par_iter","","",71,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"into_par_iter","","",72,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"into_par_iter","","",73,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"into_par_iter","","",74,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"into_par_iter","","",75,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"into_par_iter","","",76,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"into_par_iter","","",77,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"into_par_iter","","",78,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"into_par_iter","","",79,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"into_par_iter","","",80,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"into_par_iter","","",8,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"into_par_iter","","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"into_par_iter","","",82,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"into_par_iter","","",83,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"into_par_iter","","",84,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"into_par_iter","","",85,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"into_par_iter","","",86,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"init","","",86,[[]]],[11,"deref","","",86,[[]]],[11,"deref_mut","","",86,[[]]],[11,"drop","","",86,[[]]],[11,"into_par_iter","","",87,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"init","","",87,[[]]],[11,"deref","","",87,[[]]],[11,"deref_mut","","",87,[[]]],[11,"drop","","",87,[[]]],[11,"into_par_iter","","",88,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"init","","",88,[[]]],[11,"deref","","",88,[[]]],[11,"deref_mut","","",88,[[]]],[11,"drop","","",88,[[]]],[11,"into_par_iter","","",89,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"init","","",89,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",89,[[]]],[11,"into_par_iter","","",90,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"init","","",90,[[]]],[11,"deref","","",90,[[]]],[11,"deref_mut","","",90,[[]]],[11,"drop","","",90,[[]]],[11,"into_par_iter","","",91,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"init","","",91,[[]]],[11,"deref","","",91,[[]]],[11,"deref_mut","","",91,[[]]],[11,"drop","","",91,[[]]],[11,"into_par_iter","","",92,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"init","","",92,[[]]],[11,"deref","","",92,[[]]],[11,"deref_mut","","",92,[[]]],[11,"drop","","",92,[[]]],[11,"into_par_iter","rayon::option","",93,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"init","","",93,[[]]],[11,"deref","","",93,[[]]],[11,"deref_mut","","",93,[[]]],[11,"drop","","",93,[[]]],[11,"into_par_iter","","",94,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"into_par_iter","","",95,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"into_par_iter","rayon::range","",96,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"into_par_iter","rayon::range_inclusive","",97,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"into_par_iter","rayon::result","",98,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"init","","",98,[[]]],[11,"deref","","",98,[[]]],[11,"deref_mut","","",98,[[]]],[11,"drop","","",98,[[]]],[11,"into_par_iter","","",99,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"into_par_iter","","",100,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"into_par_iter","rayon::slice","",101,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"into_par_iter","","",102,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"into_par_iter","","",21,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"into_par_iter","","",103,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"into_par_iter","","",104,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"into_par_iter","","",105,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"into_par_iter","","",22,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"into_par_iter","","",106,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"into_par_iter","","",107,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"into_par_iter","rayon::str","",108,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"into_par_iter","","",109,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"into_par_iter","","",110,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"into_par_iter","","",111,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"into_par_iter","","",112,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"init","","",112,[[]]],[11,"deref","","",112,[[]]],[11,"deref_mut","","",112,[[]]],[11,"drop","","",112,[[]]],[11,"into_par_iter","","",113,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"init","","",113,[[]]],[11,"deref","","",113,[[]]],[11,"deref_mut","","",113,[[]]],[11,"drop","","",113,[[]]],[11,"into_par_iter","","",114,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"init","","",114,[[]]],[11,"deref","","",114,[[]]],[11,"deref_mut","","",114,[[]]],[11,"drop","","",114,[[]]],[11,"into_par_iter","","",115,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"init","","",115,[[]]],[11,"deref","","",115,[[]]],[11,"deref_mut","","",115,[[]]],[11,"drop","","",115,[[]]],[11,"into_par_iter","","",116,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"init","","",116,[[]]],[11,"deref","","",116,[[]]],[11,"deref_mut","","",116,[[]]],[11,"drop","","",116,[[]]],[11,"into_par_iter","","",117,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"init","","",117,[[]]],[11,"deref","","",117,[[]]],[11,"deref_mut","","",117,[[]]],[11,"drop","","",117,[[]]],[11,"into_par_iter","rayon::string","",118,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"init","","",118,[[]]],[11,"deref","","",118,[[]]],[11,"deref_mut","","",118,[[]]],[11,"drop","","",118,[[]]],[11,"into_par_iter","rayon::vec","",119,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"init","","",119,[[]]],[11,"deref","","",119,[[]]],[11,"deref_mut","","",119,[[]]],[11,"drop","","",119,[[]]],[11,"into_par_iter","","",120,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"init","","",120,[[]]],[11,"deref","","",120,[[]]],[11,"deref_mut","","",120,[[]]],[11,"drop","","",120,[[]]],[11,"fmt","rayon::iter","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"extend","","",0,[[]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"from","","",0,[[["result",4]],["either",4]]],[11,"deref","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"hash","","",0,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"deref_mut","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"clone","","",0,[[],["either",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"drop","rayon","",26,[[]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",28,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"description","","",27,[[]]],[11,"source","","",27,[[],[["error",8],["option",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drive_unindexed","rayon::collections::binary_heap","",31,[[]]],[11,"opt_len","","",31,[[],["option",4]]],[11,"drive_unindexed","","",32,[[]]],[11,"opt_len","","",32,[[],["option",4]]],[11,"drive_unindexed","","",33,[[]]],[11,"opt_len","","",33,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::btree_map","",34,[[]]],[11,"opt_len","","",34,[[],["option",4]]],[11,"drive_unindexed","","",35,[[]]],[11,"opt_len","","",35,[[],["option",4]]],[11,"drive_unindexed","","",36,[[]]],[11,"opt_len","","",36,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::btree_set","",37,[[]]],[11,"opt_len","","",37,[[],["option",4]]],[11,"drive_unindexed","","",38,[[]]],[11,"opt_len","","",38,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::hash_map","",39,[[]]],[11,"opt_len","","",39,[[],["option",4]]],[11,"drive_unindexed","","",40,[[]]],[11,"opt_len","","",40,[[],["option",4]]],[11,"drive_unindexed","","",41,[[]]],[11,"opt_len","","",41,[[],["option",4]]],[11,"drive_unindexed","","",42,[[]]],[11,"opt_len","","",42,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::hash_set","",43,[[]]],[11,"opt_len","","",43,[[],["option",4]]],[11,"drive_unindexed","","",44,[[]]],[11,"opt_len","","",44,[[],["option",4]]],[11,"drive_unindexed","","",45,[[]]],[11,"opt_len","","",45,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::linked_list","",46,[[]]],[11,"opt_len","","",46,[[],["option",4]]],[11,"drive_unindexed","","",47,[[]]],[11,"opt_len","","",47,[[],["option",4]]],[11,"drive_unindexed","","",48,[[]]],[11,"opt_len","","",48,[[],["option",4]]],[11,"drive_unindexed","rayon::collections::vec_deque","",49,[[]]],[11,"opt_len","","",49,[[],["option",4]]],[11,"drive_unindexed","","",50,[[]]],[11,"opt_len","","",50,[[],["option",4]]],[11,"drive_unindexed","","",51,[[]]],[11,"opt_len","","",51,[[],["option",4]]],[11,"drive_unindexed","","",52,[[]]],[11,"opt_len","","",52,[[],["option",4]]],[11,"drive_unindexed","rayon::iter","",53,[[]]],[11,"opt_len","","",53,[[],["option",4]]],[11,"drive_unindexed","","",54,[[]]],[11,"opt_len","","",54,[[],["option",4]]],[11,"drive_unindexed","","",55,[[]]],[11,"opt_len","","",55,[[],["option",4]]],[11,"drive_unindexed","","",56,[[]]],[11,"opt_len","","",56,[[],["option",4]]],[11,"drive_unindexed","","",57,[[]]],[11,"opt_len","","",57,[[],["option",4]]],[11,"drive_unindexed","","",58,[[]]],[11,"opt_len","","",58,[[],["option",4]]],[11,"drive_unindexed","","",59,[[]]],[11,"drive_unindexed","","",60,[[]]],[11,"drive_unindexed","","",61,[[]]],[11,"drive_unindexed","","",62,[[]]],[11,"drive_unindexed","","",63,[[]]],[11,"drive_unindexed","","",64,[[]]],[11,"drive_unindexed","","",65,[[]]],[11,"drive_unindexed","","",66,[[]]],[11,"drive_unindexed","","",67,[[]]],[11,"opt_len","","",67,[[],["option",4]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],["option",4]]],[11,"drive_unindexed","","",69,[[]]],[11,"opt_len","","",69,[[],["option",4]]],[11,"drive_unindexed","","",70,[[]]],[11,"opt_len","","",70,[[],["option",4]]],[11,"drive_unindexed","","",72,[[]]],[11,"opt_len","","",72,[[],["option",4]]],[11,"drive_unindexed","","",71,[[]]],[11,"opt_len","","",71,[[],["option",4]]],[11,"drive_unindexed","","",73,[[]]],[11,"opt_len","","",73,[[],["option",4]]],[11,"drive_unindexed","","",75,[[]]],[11,"opt_len","","",75,[[],["option",4]]],[11,"drive_unindexed","","",74,[[]]],[11,"opt_len","","",74,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],["option",4]]],[11,"drive_unindexed","","",77,[[]]],[11,"opt_len","","",77,[[],["option",4]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],["option",4]]],[11,"drive_unindexed","","",79,[[]]],[11,"drive_unindexed","","",80,[[]]],[11,"drive_unindexed","","",8,[[]]],[11,"drive_unindexed","","",81,[[]]],[11,"opt_len","","",81,[[],["option",4]]],[11,"drive_unindexed","","",82,[[]]],[11,"opt_len","","",82,[[],["option",4]]],[11,"drive_unindexed","","",83,[[]]],[11,"opt_len","","",83,[[],["option",4]]],[11,"drive_unindexed","","",84,[[]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],["option",4]]],[11,"drive_unindexed","","",86,[[]]],[11,"drive_unindexed","","",87,[[]]],[11,"drive_unindexed","","",88,[[]]],[11,"opt_len","","",88,[[],["option",4]]],[11,"drive_unindexed","","",89,[[]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],["option",4]]],[11,"drive_unindexed","","",91,[[]]],[11,"opt_len","","",91,[[],["option",4]]],[11,"drive_unindexed","","",92,[[]]],[11,"opt_len","","",92,[[],["option",4]]],[11,"drive_unindexed","rayon::option","",93,[[]]],[11,"opt_len","","",93,[[],["option",4]]],[11,"drive_unindexed","","",94,[[]]],[11,"opt_len","","",94,[[],["option",4]]],[11,"drive_unindexed","","",95,[[]]],[11,"opt_len","","",95,[[],["option",4]]],[11,"drive_unindexed","rayon::range","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],["option",4]]],[11,"drive_unindexed","rayon::range_inclusive","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],["option",4]]],[11,"drive_unindexed","rayon::result","",98,[[]]],[11,"opt_len","","",98,[[],["option",4]]],[11,"drive_unindexed","","",99,[[]]],[11,"opt_len","","",99,[[],["option",4]]],[11,"drive_unindexed","","",100,[[]]],[11,"opt_len","","",100,[[],["option",4]]],[11,"drive_unindexed","rayon::slice","",101,[[]]],[11,"opt_len","","",101,[[],["option",4]]],[11,"drive_unindexed","","",102,[[]]],[11,"opt_len","","",102,[[],["option",4]]],[11,"drive_unindexed","","",21,[[]]],[11,"opt_len","","",21,[[],["option",4]]],[11,"drive_unindexed","","",103,[[]]],[11,"opt_len","","",103,[[],["option",4]]],[11,"drive_unindexed","","",104,[[]]],[11,"opt_len","","",104,[[],["option",4]]],[11,"drive_unindexed","","",105,[[]]],[11,"opt_len","","",105,[[],["option",4]]],[11,"drive_unindexed","","",22,[[]]],[11,"opt_len","","",22,[[],["option",4]]],[11,"drive_unindexed","","",106,[[]]],[11,"drive_unindexed","","",107,[[]]],[11,"drive_unindexed","rayon::str","",108,[[]]],[11,"drive_unindexed","","",109,[[]]],[11,"drive_unindexed","","",110,[[]]],[11,"drive_unindexed","","",111,[[]]],[11,"drive_unindexed","","",112,[[]]],[11,"drive_unindexed","","",113,[[]]],[11,"drive_unindexed","","",114,[[]]],[11,"drive_unindexed","","",115,[[]]],[11,"drive_unindexed","","",116,[[]]],[11,"drive_unindexed","","",117,[[]]],[11,"drive_unindexed","rayon::string","",118,[[]]],[11,"drive_unindexed","rayon::vec","",119,[[]]],[11,"opt_len","","",119,[[],["option",4]]],[11,"drive_unindexed","","",120,[[]]],[11,"opt_len","","",120,[[],["option",4]]],[11,"drive_unindexed","rayon::iter","",0,[[]]],[11,"opt_len","","",0,[[],["option",4]]],[11,"drive","rayon::collections::binary_heap","",31,[[]]],[11,"len","","",31,[[]]],[11,"with_producer","","",31,[[]]],[11,"drive","","",32,[[]]],[11,"len","","",32,[[]]],[11,"with_producer","","",32,[[]]],[11,"drive","","",33,[[]]],[11,"len","","",33,[[]]],[11,"with_producer","","",33,[[]]],[11,"drive","rayon::collections::vec_deque","",49,[[]]],[11,"len","","",49,[[]]],[11,"with_producer","","",49,[[]]],[11,"drive","","",50,[[]]],[11,"len","","",50,[[]]],[11,"with_producer","","",50,[[]]],[11,"drive","","",51,[[]]],[11,"len","","",51,[[]]],[11,"with_producer","","",51,[[]]],[11,"drive","","",52,[[]]],[11,"len","","",52,[[]]],[11,"with_producer","","",52,[[]]],[11,"drive","rayon::iter","",53,[[]]],[11,"len","","",53,[[]]],[11,"with_producer","","",53,[[]]],[11,"drive","","",54,[[]]],[11,"len","","",54,[[]]],[11,"with_producer","","",54,[[]]],[11,"drive","","",55,[[]]],[11,"len","","",55,[[]]],[11,"with_producer","","",55,[[]]],[11,"drive","","",56,[[]]],[11,"len","","",56,[[]]],[11,"with_producer","","",56,[[]]],[11,"drive","","",57,[[]]],[11,"len","","",57,[[]]],[11,"with_producer","","",57,[[]]],[11,"drive","","",58,[[["consumer",8]]]],[11,"len","","",58,[[]]],[11,"with_producer","","",58,[[]]],[11,"drive","","",67,[[]]],[11,"len","","",67,[[]]],[11,"with_producer","","",67,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",69,[[]]],[11,"len","","",69,[[]]],[11,"with_producer","","",69,[[]]],[11,"drive","","",70,[[]]],[11,"len","","",70,[[]]],[11,"with_producer","","",70,[[]]],[11,"drive","","",72,[[["consumer",8]]]],[11,"len","","",72,[[]]],[11,"with_producer","","",72,[[]]],[11,"drive","","",71,[[["consumer",8]]]],[11,"len","","",71,[[]]],[11,"with_producer","","",71,[[]]],[11,"drive","","",73,[[]]],[11,"len","","",73,[[]]],[11,"with_producer","","",73,[[]]],[11,"drive","","",75,[[]]],[11,"len","","",75,[[]]],[11,"with_producer","","",75,[[]]],[11,"drive","","",74,[[]]],[11,"len","","",74,[[]]],[11,"with_producer","","",74,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",76,[[]]],[11,"len","","",76,[[]]],[11,"with_producer","","",76,[[]]],[11,"drive","","",77,[[]]],[11,"len","","",77,[[]]],[11,"with_producer","","",77,[[]]],[11,"drive","","",78,[[]]],[11,"len","","",78,[[]]],[11,"with_producer","","",78,[[]]],[11,"drive","","",81,[[]]],[11,"with_producer","","",81,[[]]],[11,"len","","",81,[[]]],[11,"drive","","",82,[[["consumer",8]]]],[11,"len","","",82,[[]]],[11,"with_producer","","",82,[[]]],[11,"len","","",83,[[]]],[11,"drive","","",83,[[["consumer",8]]]],[11,"with_producer","","",83,[[]]],[11,"len","","",85,[[]]],[11,"drive","","",85,[[["consumer",8]]]],[11,"with_producer","","",85,[[]]],[11,"drive","","",88,[[]]],[11,"len","","",88,[[]]],[11,"with_producer","","",88,[[]]],[11,"drive","","",90,[[]]],[11,"len","","",90,[[]]],[11,"with_producer","","",90,[[]]],[11,"drive","","",91,[[]]],[11,"len","","",91,[[]]],[11,"with_producer","","",91,[[]]],[11,"drive","","",92,[[["consumer",8]]]],[11,"len","","",92,[[]]],[11,"with_producer","","",92,[[]]],[11,"drive","rayon::option","",93,[[]]],[11,"len","","",93,[[]]],[11,"with_producer","","",93,[[]]],[11,"drive","","",94,[[]]],[11,"len","","",94,[[]]],[11,"with_producer","","",94,[[]]],[11,"drive","","",95,[[]]],[11,"len","","",95,[[]]],[11,"with_producer","","",95,[[]]],[11,"drive","rayon::range","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[]]],[11,"with_producer","","",96,[[]]],[11,"drive","rayon::range_inclusive","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[]]],[11,"with_producer","","",97,[[]]],[11,"drive","rayon::result","",98,[[]]],[11,"len","","",98,[[]]],[11,"with_producer","","",98,[[]]],[11,"drive","","",99,[[]]],[11,"len","","",99,[[]]],[11,"with_producer","","",99,[[]]],[11,"drive","","",100,[[]]],[11,"len","","",100,[[]]],[11,"with_producer","","",100,[[]]],[11,"drive","rayon::slice","",101,[[]]],[11,"len","","",101,[[]]],[11,"with_producer","","",101,[[]]],[11,"drive","","",102,[[]]],[11,"len","","",102,[[]]],[11,"with_producer","","",102,[[]]],[11,"drive","","",21,[[]]],[11,"len","","",21,[[]]],[11,"with_producer","","",21,[[]]],[11,"drive","","",103,[[]]],[11,"len","","",103,[[]]],[11,"with_producer","","",103,[[]]],[11,"drive","","",104,[[]]],[11,"len","","",104,[[]]],[11,"with_producer","","",104,[[]]],[11,"drive","","",105,[[]]],[11,"len","","",105,[[]]],[11,"with_producer","","",105,[[]]],[11,"drive","","",22,[[]]],[11,"len","","",22,[[]]],[11,"with_producer","","",22,[[]]],[11,"drive","rayon::vec","",119,[[]]],[11,"len","","",119,[[]]],[11,"with_producer","","",119,[[]]],[11,"drive","","",120,[[]]],[11,"len","","",120,[[]]],[11,"with_producer","","",120,[[]]],[11,"drive","rayon::iter","",0,[[]]],[11,"len","","",0,[[]]],[11,"with_producer","","",0,[[]]],[11,"par_extend","","",0,[[]]],[11,"drop","rayon::collections::binary_heap","",33,[[]]],[11,"drop","rayon::collections::vec_deque","",52,[[]]],[11,"drop","rayon::string","",118,[[]]],[11,"drop","rayon::vec","",120,[[]]],[11,"clone","rayon::collections::binary_heap","",31,[[],["intoiter",3]]],[11,"clone","","",32,[[]]],[11,"clone","rayon::collections::btree_map","",35,[[]]],[11,"clone","rayon::collections::btree_set","",38,[[]]],[11,"clone","rayon::collections::hash_map","",40,[[]]],[11,"clone","rayon::collections::hash_set","",44,[[]]],[11,"clone","rayon::collections::linked_list","",46,[[],["intoiter",3]]],[11,"clone","","",47,[[]]],[11,"clone","rayon::collections::vec_deque","",49,[[],["intoiter",3]]],[11,"clone","","",50,[[]]],[11,"clone","rayon::iter","",53,[[],["chain",3]]],[11,"clone","","",54,[[],["chunks",3]]],[11,"clone","","",55,[[],["cloned",3]]],[11,"clone","","",56,[[],["copied",3]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[],["enumerate",3]]],[11,"clone","","",59,[[],["filter",3]]],[11,"clone","","",60,[[],["filtermap",3]]],[11,"clone","","",61,[[],["flatmap",3]]],[11,"clone","","",62,[[],["flatmapiter",3]]],[11,"clone","","",63,[[],["flatten",3]]],[11,"clone","","",64,[[],["flatteniter",3]]],[11,"clone","","",65,[[],["fold",3]]],[11,"clone","","",66,[[],["foldwith",3]]],[11,"clone","","",67,[[],["inspect",3]]],[11,"clone","","",68,[[],["interleave",3]]],[11,"clone","","",69,[[],["interleaveshortest",3]]],[11,"clone","","",70,[[],["intersperse",3]]],[11,"clone","","",72,[[],["minlen",3]]],[11,"clone","","",71,[[],["maxlen",3]]],[11,"clone","","",73,[[],["map",3]]],[11,"clone","","",75,[[],["mapwith",3]]],[11,"clone","","",74,[[],["mapinit",3]]],[11,"clone","","",76,[[],["multizip",3]]],[11,"clone","","",77,[[],["once",3]]],[11,"clone","","",78,[[],["panicfuse",3]]],[11,"clone","","",79,[[],["iterbridge",3]]],[11,"clone","","",80,[[],["positions",3]]],[11,"clone","","",8,[[],["repeat",3]]],[11,"clone","","",81,[[],["repeatn",3]]],[11,"clone","","",82,[[],["rev",3]]],[11,"clone","","",83,[[],["skip",3]]],[11,"clone","","",84,[[],["split",3]]],[11,"clone","","",85,[[],["take",3]]],[11,"clone","","",86,[[],["tryfold",3]]],[11,"clone","","",87,[[],["tryfoldwith",3]]],[11,"clone","","",88,[[],["update",3]]],[11,"clone","","",89,[[],["whilesome",3]]],[11,"clone","","",90,[[],["zip",3]]],[11,"clone","","",91,[[],["zipeq",3]]],[11,"clone","","",92,[[],["stepby",3]]],[11,"clone","rayon::option","",93,[[],["intoiter",3]]],[11,"clone","","",94,[[]]],[11,"clone","rayon::range","",96,[[],["iter",3]]],[11,"clone","rayon::range_inclusive","",97,[[],["iter",3]]],[11,"clone","rayon::result","",98,[[],["intoiter",3]]],[11,"clone","","",99,[[]]],[11,"clone","rayon::slice","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",103,[[]]],[11,"clone","","",106,[[]]],[11,"clone","rayon::str","",108,[[],["chars",3]]],[11,"clone","","",109,[[],["charindices",3]]],[11,"clone","","",110,[[],["bytes",3]]],[11,"clone","","",111,[[],["encodeutf16",3]]],[11,"clone","","",112,[[],["split",3]]],[11,"clone","","",113,[[],["splitterminator",3]]],[11,"clone","","",114,[[],["lines",3]]],[11,"clone","","",115,[[],["splitwhitespace",3]]],[11,"clone","","",116,[[],["matches",3]]],[11,"clone","","",117,[[],["matchindices",3]]],[11,"clone","rayon::vec","",119,[[],["intoiter",3]]],[11,"fmt","rayon::collections::binary_heap","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_map","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_set","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_map","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_set","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::linked_list","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::vec_deque","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::iter","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::option","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range","",96,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range_inclusive","",97,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::result","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::slice","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::str","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::string","",118,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::vec","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"migrated","rayon","Returns `true` if the closure was called from a different…",24,[[]]],[11,"index","","Gets the index of this thread in the pool, within…",25,[[]]],[11,"name","","Gets the string that was specified by…",25,[[],["option",4]]],[11,"stack_size","","Gets the value that was specified by…",25,[[],["option",4]]],[11,"run","","Executes the main loop for this thread. This will not…",25,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",26,[[["configuration",3]],[["result",4],["threadpool",3],["box",3]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",26,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",26,[[]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",26,[[],["option",4]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",26,[[],["option",4]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",26,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",26,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",26,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",26,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",26,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",28,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"build","","Creates a new `ThreadPool` initialized using this…",28,[[],[["result",4],["threadpool",3],["threadpoolbuilderror",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",28,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"build_scoped","","Creates a scoped `ThreadPool` initialized using this…",28,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"spawn_handler","","Sets a custom function for spawning threads.",28,[[],[["customspawn",3],["threadpoolbuilder",3]]]],[11,"thread_name","","Sets a closure which takes a thread index and returns the…",28,[[],["threadpoolbuilder",3]]],[11,"num_threads","","Sets the number of threads to be used in the rayon…",28,[[],["threadpoolbuilder",3]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",28,[[],["threadpoolbuilder",3]]],[11,"stack_size","","Sets the stack size of the worker threads",28,[[],["threadpoolbuilder",3]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",28,[[],["threadpoolbuilder",3]]],[11,"start_handler","","Sets a callback to be invoked on thread start.",28,[[],["threadpoolbuilder",3]]],[11,"exit_handler","","Sets a callback to be invoked on thread exit.",28,[[],["threadpoolbuilder",3]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",29,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",30,[[]]],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[]]],[11,"expect_right","","Returns the right value",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]]],"p":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelDrainFull"],[8,"ParallelDrainRange"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[8,"ParallelString"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"Chain"],[3,"Chunks"],[3,"Cloned"],[3,"Copied"],[3,"Empty"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapIter"],[3,"Flatten"],[3,"FlattenIter"],[3,"Fold"],[3,"FoldWith"],[3,"Inspect"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"MaxLen"],[3,"MinLen"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"MultiZip"],[3,"Once"],[3,"PanicFuse"],[3,"IterBridge"],[3,"Positions"],[3,"RepeatN"],[3,"Rev"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Update"],[3,"WhileSome"],[3,"Zip"],[3,"ZipEq"],[3,"StepBy"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"]]},\
"rayon_core":{"doc":"Under construction","i":[[3,"ThreadBuilder","rayon_core","Thread builder used for customization via…",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",null,null],[3,"FnContext","","Provides the calling context to a closure called by…",null,null],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[]]],[5,"scope","","Creates a \\\"fork-join\\\" scope `s` and invokes the closure…",null,[[]]],[5,"scope_fifo","","Creates a \\\"fork-join\\\" scope `s` with FIFO order, and…",null,[[]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \\\"static\\\"…",null,[[]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",null,[[],["option",4]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],["option",4]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",null,[[["configuration",3]],[["box",3],["result",4]]]],[11,"index","","Gets the index of this thread in the pool, within…",0,[[]]],[11,"name","","Gets the string that was specified by…",0,[[],["option",4]]],[11,"stack_size","","Gets the value that was specified by…",0,[[],["option",4]]],[11,"run","","Executes the main loop for this thread. This will not…",0,[[]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",1,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",2,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["configuration",3]],[["result",4],["threadpool",3],["box",3]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",3,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",3,[[]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",3,[[],["option",4]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",3,[[],["option",4]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",3,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",3,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",3,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",3,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",3,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",4,[[]]],[11,"build","","Creates a new `ThreadPool` initialized using this…",4,[[],[["result",4],["threadpool",3],["threadpoolbuilderror",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",4,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"build_scoped","","Creates a scoped `ThreadPool` initialized using this…",4,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"spawn_handler","","Sets a custom function for spawning threads.",4,[[],[["customspawn",3],["threadpoolbuilder",3]]]],[11,"thread_name","","Sets a closure which takes a thread index and returns the…",4,[[]]],[11,"num_threads","","Sets the number of threads to be used in the rayon…",4,[[]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",4,[[]]],[11,"stack_size","","Sets the stack size of the worker threads",4,[[]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",4,[[]]],[11,"start_handler","","Sets a callback to be invoked on thread start.",4,[[]]],[11,"exit_handler","","Sets a callback to be invoked on thread exit.",4,[[]]],[11,"new","","Creates and return a valid rayon thread pool…",5,[[],["configuration",3]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",5,[[],[["result",4],["threadpool",3],["box",3]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[],["configuration",3]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[],["configuration",3]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[],["configuration",3]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[],["configuration",3]]],[11,"migrated","","Returns `true` if the closure was called from a different…",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"description","","",7,[[]]],[11,"source","","",7,[[],[["option",4],["error",8]]]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]},\
"regex":{"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,"RegexSetBuilder","regex","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["captures",3],["vec",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[],["replacerref",3]]],[11,"new","","Create a new regular expression builder with the given…",4,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[],[["error",4],["result",4],["regex",3]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",4,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[],["regexbuilder",3]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[],[["regex",3],["result",4],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",5,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[],["regexbuilder",3]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[],[["result",4],["regexset",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",6,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[],["regexsetbuilder",3]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[],[["result",4],["regexset",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",7,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[],["regexsetbuilder",3]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[],["replacerref",3]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[]]],[11,"range","","Returns the range over the starting and ending byte…",8,[[],["range",3]]],[11,"as_bytes","","Returns the matched text.",8,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[],[["error",4],["result",4],["regex",3]]]],[11,"is_match","","Returns true if and only if there is a match for the regex…",9,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,[[],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",9,[[],[["option",4],["captures",3]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",9,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the…",9,[[],[["match",3],["option",4]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"as_str","","Returns the original string of this regex.",9,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",9,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",10,[[]]],[11,"get","","Returns the match associated with the capture group at…",11,[[],[["match",3],["option",4]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[],[["match",3],["option",4]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,[[["vec",3]]]],[11,"len","","Returns the number of captured groups.",11,[[]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[],[["result",4],["regexset",3],["error",4]]]],[11,"empty","","Create a new empty regex set.",12,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[]]],[11,"is_empty","","Returns `true` if this set contains no regular expressions.",12,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",12,[[]]],[11,"matched_any","","Whether this set contains any matches.",13,[[]]],[11,"matched","","Whether the regex at the given index matched.",13,[[]]],[11,"len","","The total number of regexes in the set that created these…",13,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[],["setmatchesiter",3]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[],[["result",4],["regexset",3],["error",4]]]],[11,"empty","","Create a new empty regex set.",14,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",14,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",14,[[]]],[11,"is_empty","","Returns `true` if this set contains no regular expressions.",14,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",14,[[]]],[11,"matched_any","","Whether this set contains any matches.",15,[[]]],[11,"matched","","Whether the regex at the given index matched.",15,[[]]],[11,"len","","The total number of regexes in the set that created these…",15,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[],["setmatchesiter",3]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[]]],[11,"range","","Returns the range over the starting and ending byte…",16,[[],["range",3]]],[11,"as_str","","Returns the matched text.",16,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[],[["regex",3],["result",4],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the regex…",17,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[],[["option",4],["captures",3]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[],[["match",3],["option",4]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"as_str","","Returns the original string of this regex.",17,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",17,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",18,[[]]],[11,"get","","Returns the match associated with the capture group at…",19,[[],[["match",3],["option",4]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[],[["match",3],["option",4]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["string",3]]]],[11,"len","","Returns the number of captured groups.",19,[[]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["captures",3],["string",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[],["replacerref",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","regex::bytes","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"replace_append","","",36,[[["captures",3],["vec",3]]]],[11,"no_expansion","","",36,[[],[["option",4],["cow",4]]]],[11,"replace_append","","",2,[[["captures",3],["vec",3]]]],[11,"no_expansion","","",2,[[],[["option",4],["cow",4]]]],[11,"replace_append","regex","",26,[[["captures",3],["string",3]]]],[11,"no_expansion","","",26,[[],[["option",4],["cow",4]]]],[11,"replace_append","","",0,[[["captures",3],["string",3]]]],[11,"no_expansion","","",0,[[],[["option",4],["cow",4]]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"next_back","regex::bytes","",37,[[],["option",4]]],[11,"next_back","","",38,[[],["option",4]]],[11,"into_iter","regex","",13,[[]]],[11,"into_iter","regex::bytes","",15,[[]]],[11,"next","","",30,[[],[["match",3],["option",4]]]],[11,"next","","",31,[[],[["option",4],["captures",3]]]],[11,"next","","",32,[[],["option",4]]],[11,"next","","",33,[[],["option",4]]],[11,"next","","",34,[[],[["option",4],["option",4]]]],[11,"size_hint","","",34,[[]]],[11,"next","","",35,[[],[["option",4],["option",4]]]],[11,"next","regex","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","regex::bytes","",37,[[],["option",4]]],[11,"size_hint","","",37,[[]]],[11,"next","","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"next","regex","",24,[[],[["option",4],["option",4]]]],[11,"size_hint","","",24,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"next","","",28,[[],["option",4]]],[11,"next","","",29,[[],[["option",4],["option",4]]]],[11,"next","","",23,[[],[["option",4],["captures",3]]]],[11,"next","","",25,[[],[["match",3],["option",4]]]],[11,"clone","","",1,[[],["error",4]]],[11,"clone","regex::bytes","",8,[[],["match",3]]],[11,"clone","","",9,[[],["regex",3]]],[11,"clone","","",10,[[],["capturelocations",3]]],[11,"clone","","",35,[[],["subcapturematches",3]]],[11,"clone","regex","",12,[[],["regexset",3]]],[11,"clone","","",13,[[],["setmatches",3]]],[11,"clone","","",22,[[],["setmatchesiter",3]]],[11,"clone","regex::bytes","",14,[[],["regexset",3]]],[11,"clone","","",15,[[],["setmatches",3]]],[11,"clone","","",38,[[],["setmatchesiter",3]]],[11,"clone","regex","",16,[[],["match",3]]],[11,"clone","","",17,[[],["regex",3]]],[11,"clone","","",18,[[],["capturelocations",3]]],[11,"clone","","",29,[[],["subcapturematches",3]]],[11,"eq","","",1,[[["error",4]]]],[11,"ne","","",1,[[["error",4]]]],[11,"eq","regex::bytes","",8,[[["match",3]]]],[11,"ne","","",8,[[["match",3]]]],[11,"eq","regex","",16,[[["match",3]]]],[11,"ne","","",16,[[["match",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["formatter",3]],["result",6]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["formatter",3]],["result",6]]],[11,"index","regex::bytes","",11,[[]]],[11,"index","","",11,[[]]],[11,"index","regex","",19,[[]]],[11,"index","","",19,[[]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[],[["error",4],["result",4],["regex",3]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[],[["regex",3],["result",4],["error",4]]]],[11,"description","","",1,[[]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[],["replacerref",3]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureMatches"],[3,"CaptureNames"],[3,"Matches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"SubCaptureMatches"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["string",3]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[],[["unicodeworderror",3],["result",4]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",24,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",25,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",26,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE\'s look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",27,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",27,null],[13,"Literal","","A single character literal, which includes escape sequences.",27,null],[13,"Dot","","The \\\"any character\\\" class.",27,null],[13,"Assertion","","A single zero-width assertion.",27,null],[13,"Class","","A single character class. This includes all forms of…",27,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",27,null],[13,"Group","","A grouped regular expression.",27,null],[13,"Alternation","","An alternation of regular expressions.",27,null],[13,"Concat","","A concatenation of regular expressions.",27,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",28,null],[13,"Punctuation","","The literal is written as an escape because it is…",28,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\\\141`.",28,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",28,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",28,null],[13,"Special","","The literal is written as a specially recognized escape,…",28,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\\\a` (`\\\\x07`).",29,null],[13,"FormFeed","","Form feed, spelled `\\\\f` (`\\\\x0C`).",29,null],[13,"Tab","","Tab, spelled `\\\\t` (`\\\\x09`).",29,null],[13,"LineFeed","","Line feed, spelled `\\\\n` (`\\\\x0A`).",29,null],[13,"CarriageReturn","","Carriage return, spelled `\\\\r` (`\\\\x0D`).",29,null],[13,"VerticalTab","","Vertical tab, spelled `\\\\v` (`\\\\x0B`).",29,null],[13,"Space","","Space, spelled `\\\\ ` (`\\\\x20`). Note that this can only…",29,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\\\x` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeShort","","A `\\\\u` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeLong","","A `\\\\U` prefix. When used without brackets, this form is…",30,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",32,null],[13,"Space","","Whitespace.",32,null],[13,"Word","","Word characters.",32,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",33,null],[13,"Alpha","","`[A-Za-z]`",33,null],[13,"Ascii","","`[\\\\x00-\\\\x7F]`",33,null],[13,"Blank","","`[ \\\\t]`",33,null],[13,"Cntrl","","`[\\\\x00-\\\\x1F\\\\x7F]`",33,null],[13,"Digit","","`[0-9]`",33,null],[13,"Graph","","`[!-~]`",33,null],[13,"Lower","","`[a-z]`",33,null],[13,"Print","","`[ -~]`",33,null],[13,"Punct","","`[!-/:-@\\\\[-`{-~]`",33,null],[13,"Space","","`[\\\\t\\\\n\\\\v\\\\f\\\\r ]`",33,null],[13,"Upper","","`[A-Z]`",33,null],[13,"Word","","`[0-9A-Za-z_]`",33,null],[13,"Xdigit","","`[0-9A-Fa-f]`",33,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\\\pN`.",34,null],[13,"Named","","A binary property, general category or script. The string…",34,null],[13,"NamedValue","","A property name and an associated value.",34,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",35,null],[12,"name","","The property name (which may be empty).",35,null],[12,"value","","The property value (which may be empty).",35,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",36,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",36,null],[13,"NotEqual","","A property that isn\'t a particular value, e.g.,…",36,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",37,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",37,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",38,null],[13,"Literal","","A single literal.",38,null],[13,"Range","","A range between two literals.",38,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",38,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",38,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",38,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",38,null],[13,"Union","","A union of items.",38,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\\\pN&&[a-z]`.",39,null],[13,"Difference","","The difference of two sets, e.g., `\\\\pN--[0-9]`.",39,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",39,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",40,null],[13,"EndLine","","`$`",40,null],[13,"StartText","","`\\\\A`",40,null],[13,"EndText","","`\\\\z`",40,null],[13,"WordBoundary","","`\\\\b`",40,null],[13,"NotWordBoundary","","`\\\\B`",40,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",41,null],[13,"ZeroOrMore","","`*`",41,null],[13,"OneOrMore","","`+`",41,null],[13,"Range","","`{m,n}`",41,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",42,null],[13,"AtLeast","","`{m,}`",42,null],[13,"Bounded","","`{m,n}`",42,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",44,null],[13,"Flag","","A single flag in a group.",44,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",45,null],[13,"MultiLine","","`m`",45,null],[13,"DotMatchesNewLine","","`s`",45,null],[13,"SwapGreed","","`U`",45,null],[13,"Unicode","","`u`",45,null],[13,"IgnoreWhitespace","","`x`",45,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["visitor",8],["ast",4]],["result",4]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",46,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",46,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",46,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",46,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",46,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",47,[[],["parser",3]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",47,[[],[["error",3],["ast",4],["result",4]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",47,[[],[["withcomments",3],["error",3],["result",4]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",48,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",48,[[["write",8],["ast",4]],["result",6]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",49,null],[16,"Err","","An error that visiting an AST might return.",49,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",49,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the AST.",49,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"kind","","Return the type of this error.",50,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",50,[[]]],[11,"span","","Return the span at which this error occurred.",50,[[],["span",3]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",50,[[],[["option",4],["span",3]]]],[11,"new","","Create a new span with the given positions.",1,[[["position",3]],["span",3]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position",3]],["span",3]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position",3]],["span",3]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position",3]],["span",3]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[]]],[11,"new","","Create a new position with the given information.",2,[[],["position",3]]],[11,"span","","Return the span of this abstract syntax tree.",27,[[],["span",3]]],[11,"is_empty","","Return true if and only if this Ast is empty.",27,[[]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast",4]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast",4]]],[11,"byte","","If this literal was written as a `\\\\x` hex escape, then…",7,[[],["option",4]]],[11,"digits","","The number of digits that must be used with this literal…",30,[[]]],[11,"span","","Return the span of this character class.",31,[[],["span",3]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",33,[[],[["classasciikind",4],["option",4]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[]]],[11,"is_equal","","Whether the op is an equality op or not.",36,[[]]],[11,"union","","Build a set from a union.",37,[[["classsetunion",3]],["classset",4]]],[11,"span","","Return the span of this character class set.",37,[[],["span",3]]],[11,"span","","Return the span of this character class set item.",38,[[],["span",3]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[]]],[11,"push","","Push a new item in this union.",13,[[["classsetitem",4]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem",4]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",42,[[]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[],[["option",4],["flags",3]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[],["option",4]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["flagsitem",3]],["option",4]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["flag",4]],["option",4]]],[11,"is_negation","","Returns true if and only if this item is a negation…",44,[[]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",51,null],[12,"hir","","The expression inside the capturing group, which may be…",51,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",52,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",52,null],[12,"hir","","The expression being repeated.",52,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",53,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",53,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",53,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",53,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",53,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",53,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",53,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",54,null],[13,"Literal","","A single literal character that matches exactly this…",54,null],[13,"Class","","A single character class that matches any of the…",54,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",54,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",54,null],[13,"Repetition","","A repetition operation applied to a child expression.",54,null],[13,"Group","","A possibly capturing group, which contains a child…",54,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",54,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",54,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",55,null],[13,"Byte","","A single character represented by an arbitrary byte.",55,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",56,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",56,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",57,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",57,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",57,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",57,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",58,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",58,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",58,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",58,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",59,null],[13,"CaptureName","","A named capturing group.",59,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",60,null],[12,"index","","The capture index of the group.",60,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",59,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",61,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",61,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",61,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",61,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",62,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",62,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",62,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["hir",3],["visitor",8]],["result",4]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",63,[[],["literals",3]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",63,[[["hir",3]],["literals",3]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",63,[[["hir",3]],["literals",3]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",63,[[]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",63,[[],["literals",3]]],[11,"limit_class","","Get the character class size limit for this set.",63,[[]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",63,[[],["literals",3]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",63,[[]]],[11,"min_len","","Returns the length of the smallest literal.",63,[[],["option",4]]],[11,"all_complete","","Returns true if all members in this set are complete.",63,[[]]],[11,"any_complete","","Returns true if any member in this set is complete.",63,[[]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",63,[[]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",63,[[]]],[11,"to_empty","","Returns a new empty set of literals using this set\'s limits.",63,[[],["literals",3]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",63,[[]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",63,[[]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",63,[[],[["option",4],["literals",3]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",63,[[],["literals",3]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",63,[[],["literals",3]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",63,[[["hir",3]]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",63,[[["hir",3]]]],[11,"union","","Unions this set with another set.",63,[[["literals",3]]]],[11,"cross_product","","Extends this set with another set.",63,[[["literals",3]]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",63,[[]]],[11,"add","","Adds the given literal to this set.",63,[[["literal",3]]]],[11,"add_char_class","","Extends each literal in this set with the character class…",63,[[["classunicode",3]]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",63,[[["classbytes",3]]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",63,[[]]],[11,"reverse","","Reverses all members in place.",63,[[]]],[11,"clear","","Clears this set of all members.",63,[[]]],[11,"new","","Returns a new complete literal with the bytes given.",64,[[["vec",3]],["literal",3]]],[11,"empty","","Returns a new complete empty literal.",64,[[],["literal",3]]],[11,"is_cut","","Returns true if this literal was \\\"cut.\\\"",64,[[]]],[11,"cut","","Cuts this literal.",64,[[]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression\'s high-level…",null,null],[11,"new","","Create a new printer.",65,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",65,[[["write",8],["hir",3]],["result",6]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",66,[[],["translatorbuilder",3]]],[11,"build","","Build a translator using the current configuration.",66,[[],["translator",3]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",66,[[],["translatorbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",66,[[],["translatorbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",66,[[],["translatorbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag…",66,[[],["translatorbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag (`U`) by default.",66,[[],["translatorbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",66,[[],["translatorbuilder",3]]],[11,"new","","Create a new translator using the default configuration.",67,[[],["translator",3]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",67,[[["ast",4]],[["hir",3],["error",3],["result",4]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",68,null],[16,"Err","","An error that visiting an HIR might return.",68,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",68,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the HIR.",68,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[],["result",4]]],[11,"kind","","Return the type of this error.",69,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",69,[[]]],[11,"span","","Return the span at which this error occurred.",69,[[],["span",3]]],[11,"kind","","Returns a reference to the underlying HIR kind.",70,[[],["hirkind",4]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",70,[[],["hirkind",4]]],[11,"empty","","Returns an empty HIR expression.",70,[[],["hir",3]]],[11,"literal","","Creates a literal HIR expression.",70,[[["literal",4]],["hir",3]]],[11,"class","","Creates a class HIR expression.",70,[[["class",4]],["hir",3]]],[11,"anchor","","Creates an anchor assertion HIR expression.",70,[[["anchor",4]],["hir",3]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",70,[[["wordboundary",4]],["hir",3]]],[11,"repetition","","Creates a repetition HIR expression.",70,[[["repetition",3]],["hir",3]]],[11,"group","","Creates a group HIR expression.",70,[[["group",3]],["hir",3]]],[11,"concat","","Returns the concatenation of the given expressions.",70,[[["vec",3],["hir",3]],["hir",3]]],[11,"alternation","","Returns the alternation of the given expressions.",70,[[["vec",3],["hir",3]],["hir",3]]],[11,"dot","","Build an HIR expression for `.`.",70,[[],["hir",3]]],[11,"any","","Build an HIR expression for `(?s).`.",70,[[],["hir",3]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",70,[[]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",70,[[]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",70,[[]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",70,[[]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",70,[[]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",70,[[]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",70,[[]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",54,[[]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",54,[[]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",55,[[]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",56,[[]]],[11,"negate","","Negate this character class in place.",56,[[]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",56,[[]]],[11,"new","","Create a new class from a sequence of ranges.",71,[[],["classunicode",3]]],[11,"empty","","Create a new class with no ranges.",71,[[],["classunicode",3]]],[11,"push","","Add a new range to this set.",71,[[["classunicoderange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",71,[[],["classunicodeiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",71,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",71,[[]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",71,[[],[["result",4],["casefolderror",3]]]],[11,"negate","","Negate this character class.",71,[[]]],[11,"union","","Union this character class with the given character class,…",71,[[["classunicode",3]]]],[11,"intersect","","Intersect this character class with the given character…",71,[[["classunicode",3]]]],[11,"difference","","Subtract the given character class from this character…",71,[[["classunicode",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",71,[[["classunicode",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",71,[[]]],[11,"new","","Create a new Unicode scalar value range for a character…",72,[[],["classunicoderange",3]]],[11,"start","","Return the start of this range.",72,[[]]],[11,"end","","Return the end of this range.",72,[[]]],[11,"new","","Create a new class from a sequence of ranges.",73,[[],["classbytes",3]]],[11,"empty","","Create a new class with no ranges.",73,[[],["classbytes",3]]],[11,"push","","Add a new range to this set.",73,[[["classbytesrange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",73,[[],["classbytesiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",73,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",73,[[]]],[11,"negate","","Negate this byte class.",73,[[]]],[11,"union","","Union this byte class with the given byte class, in place.",73,[[["classbytes",3]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",73,[[["classbytes",3]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",73,[[["classbytes",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",73,[[["classbytes",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",73,[[]]],[11,"new","","Create a new byte range for a character class.",74,[[],["classbytesrange",3]]],[11,"start","","Return the start of this range.",74,[[]]],[11,"end","","Return the end of this range.",74,[[]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",58,[[]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",52,[[]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",75,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",75,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",75,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",75,[[],["parserbuilder",3]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",75,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",75,[[],["parserbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",75,[[],["parserbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",75,[[],["parserbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag by…",75,[[],["parserbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag by default.",75,[[],["parserbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",75,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",76,[[],["parser",3]]],[11,"parse","","Parse the regular expression into a high level…",76,[[],[["hir",3],["result",6]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",77,null],[12,"end","","End of byte range (inclusive).",77,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",78,null],[13,"Two","","Two successive byte ranges.",78,null],[13,"Three","","Three successive byte ranges.",78,null],[13,"Four","","Four successive byte ranges.",78,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",78,[[]]],[11,"len","","Returns the number of byte ranges in this sequence.",78,[[]]],[11,"reverse","","Reverses the ranges in this sequence.",78,[[]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",78,[[]]],[11,"matches","","Returns true if and only if the given byte is in this range.",77,[[]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",79,[[]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","regex_syntax::ast","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","regex_syntax::ast::parse","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","regex_syntax::ast::print","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","regex_syntax::hir","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","regex_syntax::hir::literal","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","regex_syntax::hir::print","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","regex_syntax::hir::translate","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","regex_syntax::utf8","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"drop","regex_syntax::ast","",27,[[]]],[11,"drop","","",37,[[]]],[11,"drop","regex_syntax::hir","",70,[[]]],[11,"as_ref","regex_syntax::hir::literal","",64,[[]]],[11,"from","regex_syntax","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"next","regex_syntax::hir","",82,[[],[["option",4],["classunicoderange",3]]]],[11,"next","","",83,[[],[["classbytesrange",3],["option",4]]]],[11,"next","regex_syntax::utf8","",79,[[],["option",4]]],[11,"clone","regex_syntax::ast::parse","",46,[[],["parserbuilder",3]]],[11,"clone","","",47,[[],["parser",3]]],[11,"clone","regex_syntax::ast","",50,[[],["error",3]]],[11,"clone","","",23,[[],["errorkind",4]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["position",3]]],[11,"clone","","",3,[[],["withcomments",3]]],[11,"clone","","",4,[[],["comment",3]]],[11,"clone","","",27,[[],["ast",4]]],[11,"clone","","",5,[[],["alternation",3]]],[11,"clone","","",6,[[],["concat",3]]],[11,"clone","","",7,[[],["literal",3]]],[11,"clone","","",28,[[],["literalkind",4]]],[11,"clone","","",29,[[],["specialliteralkind",4]]],[11,"clone","","",30,[[],["hexliteralkind",4]]],[11,"clone","","",31,[[],["class",4]]],[11,"clone","","",8,[[],["classperl",3]]],[11,"clone","","",32,[[],["classperlkind",4]]],[11,"clone","","",9,[[],["classascii",3]]],[11,"clone","","",33,[[],["classasciikind",4]]],[11,"clone","","",10,[[],["classunicode",3]]],[11,"clone","","",34,[[],["classunicodekind",4]]],[11,"clone","","",36,[[],["classunicodeopkind",4]]],[11,"clone","","",11,[[],["classbracketed",3]]],[11,"clone","","",37,[[],["classset",4]]],[11,"clone","","",38,[[],["classsetitem",4]]],[11,"clone","","",12,[[],["classsetrange",3]]],[11,"clone","","",13,[[],["classsetunion",3]]],[11,"clone","","",14,[[],["classsetbinaryop",3]]],[11,"clone","","",39,[[],["classsetbinaryopkind",4]]],[11,"clone","","",15,[[],["assertion",3]]],[11,"clone","","",40,[[],["assertionkind",4]]],[11,"clone","","",16,[[],["repetition",3]]],[11,"clone","","",17,[[],["repetitionop",3]]],[11,"clone","","",41,[[],["repetitionkind",4]]],[11,"clone","","",42,[[],["repetitionrange",4]]],[11,"clone","","",18,[[],["group",3]]],[11,"clone","","",43,[[],["groupkind",4]]],[11,"clone","","",19,[[],["capturename",3]]],[11,"clone","","",20,[[],["setflags",3]]],[11,"clone","","",21,[[],["flags",3]]],[11,"clone","","",22,[[],["flagsitem",3]]],[11,"clone","","",44,[[],["flagsitemkind",4]]],[11,"clone","","",45,[[],["flag",4]]],[11,"clone","regex_syntax","",0,[[],["error",4]]],[11,"clone","regex_syntax::hir::literal","",63,[[],["literals",3]]],[11,"clone","","",64,[[],["literal",3]]],[11,"clone","regex_syntax::hir::translate","",66,[[],["translatorbuilder",3]]],[11,"clone","","",67,[[],["translator",3]]],[11,"clone","regex_syntax::hir","",69,[[],["error",3]]],[11,"clone","","",53,[[],["errorkind",4]]],[11,"clone","","",70,[[],["hir",3]]],[11,"clone","","",54,[[],["hirkind",4]]],[11,"clone","","",55,[[],["literal",4]]],[11,"clone","","",56,[[],["class",4]]],[11,"clone","","",71,[[],["classunicode",3]]],[11,"clone","","",72,[[],["classunicoderange",3]]],[11,"clone","","",73,[[],["classbytes",3]]],[11,"clone","","",74,[[],["classbytesrange",3]]],[11,"clone","","",57,[[],["anchor",4]]],[11,"clone","","",58,[[],["wordboundary",4]]],[11,"clone","","",51,[[],["group",3]]],[11,"clone","","",59,[[],["groupkind",4]]],[11,"clone","","",52,[[],["repetition",3]]],[11,"clone","","",61,[[],["repetitionkind",4]]],[11,"clone","","",62,[[],["repetitionrange",4]]],[11,"clone","regex_syntax","",75,[[],["parserbuilder",3]]],[11,"clone","","",76,[[],["parser",3]]],[11,"clone","regex_syntax::utf8","",78,[[],["utf8sequence",4]]],[11,"clone","","",77,[[],["utf8range",3]]],[11,"default","regex_syntax::ast::parse","",46,[[],["parserbuilder",3]]],[11,"default","regex_syntax::hir::translate","",66,[[],["translatorbuilder",3]]],[11,"default","regex_syntax::hir","",72,[[],["classunicoderange",3]]],[11,"default","","",74,[[],["classbytesrange",3]]],[11,"default","regex_syntax","",75,[[],["parserbuilder",3]]],[11,"cmp","regex_syntax::ast","",1,[[["span",3]],["ordering",4]]],[11,"cmp","","",2,[[["position",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir::literal","",64,[[["literal",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir","",72,[[["classunicoderange",3]],["ordering",4]]],[11,"cmp","","",74,[[["classbytesrange",3]],["ordering",4]]],[11,"cmp","regex_syntax::utf8","",78,[[["utf8sequence",4]],["ordering",4]]],[11,"cmp","","",77,[[["utf8range",3]],["ordering",4]]],[11,"eq","regex_syntax::ast","",50,[[["error",3]]]],[11,"ne","","",50,[[["error",3]]]],[11,"eq","","",23,[[["errorkind",4]]]],[11,"ne","","",23,[[["errorkind",4]]]],[11,"eq","","",1,[[["span",3]]]],[11,"ne","","",1,[[["span",3]]]],[11,"eq","","",2,[[["position",3]]]],[11,"ne","","",2,[[["position",3]]]],[11,"eq","","",3,[[["withcomments",3]]]],[11,"ne","","",3,[[["withcomments",3]]]],[11,"eq","","",4,[[["comment",3]]]],[11,"ne","","",4,[[["comment",3]]]],[11,"eq","","",27,[[["ast",4]]]],[11,"ne","","",27,[[["ast",4]]]],[11,"eq","","",5,[[["alternation",3]]]],[11,"ne","","",5,[[["alternation",3]]]],[11,"eq","","",6,[[["concat",3]]]],[11,"ne","","",6,[[["concat",3]]]],[11,"eq","","",7,[[["literal",3]]]],[11,"ne","","",7,[[["literal",3]]]],[11,"eq","","",28,[[["literalkind",4]]]],[11,"ne","","",28,[[["literalkind",4]]]],[11,"eq","","",29,[[["specialliteralkind",4]]]],[11,"eq","","",30,[[["hexliteralkind",4]]]],[11,"eq","","",31,[[["class",4]]]],[11,"ne","","",31,[[["class",4]]]],[11,"eq","","",8,[[["classperl",3]]]],[11,"ne","","",8,[[["classperl",3]]]],[11,"eq","","",32,[[["classperlkind",4]]]],[11,"eq","","",9,[[["classascii",3]]]],[11,"ne","","",9,[[["classascii",3]]]],[11,"eq","","",33,[[["classasciikind",4]]]],[11,"eq","","",10,[[["classunicode",3]]]],[11,"ne","","",10,[[["classunicode",3]]]],[11,"eq","","",34,[[["classunicodekind",4]]]],[11,"ne","","",34,[[["classunicodekind",4]]]],[11,"eq","","",36,[[["classunicodeopkind",4]]]],[11,"eq","","",11,[[["classbracketed",3]]]],[11,"ne","","",11,[[["classbracketed",3]]]],[11,"eq","","",37,[[["classset",4]]]],[11,"ne","","",37,[[["classset",4]]]],[11,"eq","","",38,[[["classsetitem",4]]]],[11,"ne","","",38,[[["classsetitem",4]]]],[11,"eq","","",12,[[["classsetrange",3]]]],[11,"ne","","",12,[[["classsetrange",3]]]],[11,"eq","","",13,[[["classsetunion",3]]]],[11,"ne","","",13,[[["classsetunion",3]]]],[11,"eq","","",14,[[["classsetbinaryop",3]]]],[11,"ne","","",14,[[["classsetbinaryop",3]]]],[11,"eq","","",39,[[["classsetbinaryopkind",4]]]],[11,"eq","","",15,[[["assertion",3]]]],[11,"ne","","",15,[[["assertion",3]]]],[11,"eq","","",40,[[["assertionkind",4]]]],[11,"eq","","",16,[[["repetition",3]]]],[11,"ne","","",16,[[["repetition",3]]]],[11,"eq","","",17,[[["repetitionop",3]]]],[11,"ne","","",17,[[["repetitionop",3]]]],[11,"eq","","",41,[[["repetitionkind",4]]]],[11,"ne","","",41,[[["repetitionkind",4]]]],[11,"eq","","",42,[[["repetitionrange",4]]]],[11,"ne","","",42,[[["repetitionrange",4]]]],[11,"eq","","",18,[[["group",3]]]],[11,"ne","","",18,[[["group",3]]]],[11,"eq","","",43,[[["groupkind",4]]]],[11,"ne","","",43,[[["groupkind",4]]]],[11,"eq","","",19,[[["capturename",3]]]],[11,"ne","","",19,[[["capturename",3]]]],[11,"eq","","",20,[[["setflags",3]]]],[11,"ne","","",20,[[["setflags",3]]]],[11,"eq","","",21,[[["flags",3]]]],[11,"ne","","",21,[[["flags",3]]]],[11,"eq","","",22,[[["flagsitem",3]]]],[11,"ne","","",22,[[["flagsitem",3]]]],[11,"eq","","",44,[[["flagsitemkind",4]]]],[11,"ne","","",44,[[["flagsitemkind",4]]]],[11,"eq","","",45,[[["flag",4]]]],[11,"eq","regex_syntax","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","regex_syntax::hir::literal","",63,[[["literals",3]]]],[11,"ne","","",63,[[["literals",3]]]],[11,"eq","","",64,[[["literal",3]]]],[11,"eq","regex_syntax::hir","",69,[[["error",3]]]],[11,"ne","","",69,[[["error",3]]]],[11,"eq","","",53,[[["errorkind",4]]]],[11,"eq","","",70,[[["hir",3]]]],[11,"ne","","",70,[[["hir",3]]]],[11,"eq","","",54,[[["hirkind",4]]]],[11,"ne","","",54,[[["hirkind",4]]]],[11,"eq","","",55,[[["literal",4]]]],[11,"ne","","",55,[[["literal",4]]]],[11,"eq","","",56,[[["class",4]]]],[11,"ne","","",56,[[["class",4]]]],[11,"eq","","",71,[[["classunicode",3]]]],[11,"ne","","",71,[[["classunicode",3]]]],[11,"eq","","",72,[[["classunicoderange",3]]]],[11,"ne","","",72,[[["classunicoderange",3]]]],[11,"eq","","",73,[[["classbytes",3]]]],[11,"ne","","",73,[[["classbytes",3]]]],[11,"eq","","",74,[[["classbytesrange",3]]]],[11,"ne","","",74,[[["classbytesrange",3]]]],[11,"eq","","",57,[[["anchor",4]]]],[11,"eq","","",58,[[["wordboundary",4]]]],[11,"eq","","",51,[[["group",3]]]],[11,"ne","","",51,[[["group",3]]]],[11,"eq","","",59,[[["groupkind",4]]]],[11,"ne","","",59,[[["groupkind",4]]]],[11,"eq","","",52,[[["repetition",3]]]],[11,"ne","","",52,[[["repetition",3]]]],[11,"eq","","",61,[[["repetitionkind",4]]]],[11,"ne","","",61,[[["repetitionkind",4]]]],[11,"eq","","",62,[[["repetitionrange",4]]]],[11,"ne","","",62,[[["repetitionrange",4]]]],[11,"eq","regex_syntax::utf8","",78,[[["utf8sequence",4]]]],[11,"ne","","",78,[[["utf8sequence",4]]]],[11,"eq","","",77,[[["utf8range",3]]]],[11,"ne","","",77,[[["utf8range",3]]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["span",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",2,[[["position",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","regex_syntax::hir::literal","",64,[[["literal",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::hir","",72,[[["classunicoderange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",72,[[["classunicoderange",3]]]],[11,"le","","",72,[[["classunicoderange",3]]]],[11,"gt","","",72,[[["classunicoderange",3]]]],[11,"ge","","",72,[[["classunicoderange",3]]]],[11,"partial_cmp","","",74,[[["classbytesrange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",74,[[["classbytesrange",3]]]],[11,"le","","",74,[[["classbytesrange",3]]]],[11,"gt","","",74,[[["classbytesrange",3]]]],[11,"ge","","",74,[[["classbytesrange",3]]]],[11,"partial_cmp","regex_syntax::utf8","",78,[[["utf8sequence",4]],[["option",4],["ordering",4]]]],[11,"lt","","",78,[[["utf8sequence",4]]]],[11,"le","","",78,[[["utf8sequence",4]]]],[11,"gt","","",78,[[["utf8sequence",4]]]],[11,"ge","","",78,[[["utf8sequence",4]]]],[11,"partial_cmp","","",77,[[["utf8range",3]],[["option",4],["ordering",4]]]],[11,"lt","","",77,[[["utf8range",3]]]],[11,"le","","",77,[[["utf8range",3]]]],[11,"gt","","",77,[[["utf8range",3]]]],[11,"ge","","",77,[[["utf8range",3]]]],[11,"deref","regex_syntax::hir::literal","",64,[[],["vec",3]]],[11,"deref_mut","","",64,[[],["vec",3]]],[11,"fmt","regex_syntax::ast::parse","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast::print","",48,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",0,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::literal","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::print","",65,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::translate","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",81,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",80,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::utf8","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",0,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",80,[[["formatter",3]],["result",6]]],[11,"description","regex_syntax::ast","",50,[[]]],[11,"description","regex_syntax","",0,[[]]],[11,"description","regex_syntax::hir","",69,[[]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",49,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",68,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[],["result",4]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[13,"CaptureName"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads…",null,null],[3,"Scope","","Handle to the scope during which the threadpool is borrowed.",null,null],[11,"new","","Construct a threadpool with the given number of threads.…",0,[[],["pool",3]]],[11,"scoped","","Borrows the pool and allows executing jobs on other…",0,[[]]],[11,"thread_count","","Returns the number of threads inside this pool.",0,[[]]],[11,"execute","","Execute a job on the threadpool.",1,[[]]],[11,"join_all","","Blocks until all currently queued jobs have run to…",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]]],"p":[[3,"Pool"],[3,"Scope"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[],[["scopeguard",3],["always",4]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"should_run","","",2,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings…",null,[[],["hammingresult",6]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",null,[[]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",null,[[]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",null,[[]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein algorithm…",null,[[]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",null,[[]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",null,[[]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the Damerau–Levenshtein…",null,[[]]],[6,"HammingResult","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["strsimerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"StrSimError"]]},\
"term_size":{"doc":"System calls for getting the terminal size.","i":[[5,"dimensions","term_size","Query the current processes\'s output (`stdout`), input…",null,[[],["option",4]]],[5,"dimensions_stderr","","Query the current processes\'s error output (`stderr`)…",null,[[],["option",4]]],[5,"dimensions_stdin","","Query the current processes\'s input (`stdin`) only, in the…",null,[[],["option",4]]],[5,"dimensions_stdout","","Query the current processes\'s output (`stdout`) only, in…",null,[[],["option",4]]]],"p":[]},\
"termimage":{"doc":"Display images in your terminal, kind of","i":[[3,"Options","termimage","Representation of the application\'s all configurable values.",null,null],[12,"image","","Image file to display.",0,null],[12,"size","","Output size. Default: detected from terminal size or no…",0,null],[12,"preserve_aspect","","Whether to preserve the image\'s aspect ratio when…",0,null],[12,"ansi_out","","Whether to output ANSI escapes and in which format.…",0,null],[4,"Error","","Enum representing all possible values the application can…",null,null],[13,"GuessingFormatFailed","","Failed to guess the image format.",1,null],[13,"OpeningImageFailed","","Failed to open image file.",1,null],[4,"AnsiOutputFormat","","Supported ANSI output formats",null,null],[13,"Truecolor","","Truecolor ANSI 24-bit colour",2,null],[13,"SimpleBlack","","Dumb ANSI 3-bit colour, for black backgrounds",2,null],[13,"SimpleWhite","","Dumb ANSI 3-bit colour, for white backgrounds",2,null],[11,"print_error","","Get the executable exit value from an `Error` instance.",1,[[]]],[11,"exit_value","","Get the executable exit value from an `Error` instance.",1,[[]]],[11,"parse","","Parse `env`-wide command-line arguments into an `Options`…",0,[[],["options",3]]],[0,"ops","","Main functions doing actual work.",null,null],[5,"write_no_ansi","termimage::ops","Display the specified image in the default console using…",null,[[["dynamicimage",4]]]],[5,"guess_format","","Guess the image format from its extension or magic.",null,[[],[["imageformat",4],["error",4],["result",4]]]],[5,"load_image","","Load an image from the specified file as the specified…",null,[[["imageformat",4]],[["dynamicimage",4],["error",4],["result",4]]]],[5,"image_resized_size","","Get the image size to downscale to, given its size, the…",null,[[]]],[5,"resize_image","","Resize the specified image to the specified size.",null,[[["dynamicimage",4]],["dynamicimage",4]]],[5,"create_colourtable","","Create a line-major table of (upper, lower) colour…",null,[[["dynamicimage",4]],[["vec",3],["vec",3]]]],[5,"write_ansi","","Display the specified image approximating it to the…",null,[[["dynamicimage",4]]]],[5,"write_ansi_truecolor","","Display the specified image in the default console using…",null,[[["dynamicimage",4]]]],[0,"util","termimage","Module containing various utility functions.",null,null],[5,"mul_str","termimage::util","Create a string consisting of `n` repetitions of `what`.",null,[[],["string",3]]],[5,"closest_colour","","Get the closest colour to the provided one out of the…",null,[[["rgb",3]]]],[5,"bg_colours_for","","Get the background colour set for the specified foregournd…",null,[[]]],[7,"BMP_MAGIC","","Magic number used for determining whether an image is a BMP.",null,null],[7,"ICO_MAGIC","","Magic number used for determining whether an image is an…",null,null],[7,"GIF_MAGIC","","Magic number used for determining whether an image is a GIF.",null,null],[7,"PNG_MAGIC","","Magic number used for determining whether an image is a PNG.",null,null],[7,"JPEG_MAGIC","","Magic number used for determining whether an image is a…",null,null],[7,"ANSI_COLOURS_WHITE_BG","","ANSI colours for a white-background terminal, in the same…",null,null],[7,"ANSI_COLOURS_BLACK_BG","","Linux-theme ANSI colours, in the same order as…",null,null],[7,"ANSI_COLOUR_ESCAPES","","ANSI background colour escapes.",null,null],[7,"ANSI_BG_COLOUR_ESCAPES","","ANSI background colour escapes.",null,null],[7,"ANSI_RESET_ATTRIBUTES","","Reset ANSI attributes",null,null],[0,"migration","termimage","Migration guides.",null,null],[0,"v1_0","termimage::migration","Migrating to `termimage` v1.0",null,null],[11,"from","termimage","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"clone","","",1,[[],["error",4]]],[11,"clone","","",2,[[],["ansioutputformat",4]]],[11,"clone","","",0,[[],["options",3]]],[11,"cmp","","",2,[[["ansioutputformat",4]],["ordering",4]]],[11,"eq","","",1,[[["error",4]]]],[11,"ne","","",1,[[["error",4]]]],[11,"eq","","",2,[[["ansioutputformat",4]]]],[11,"eq","","",0,[[["options",3]]]],[11,"ne","","",0,[[["options",3]]]],[11,"partial_cmp","","",2,[[["ansioutputformat",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",0,[[]]]],"p":[[3,"Options"],[4,"Error"],[4,"AnsiOutputFormat"]]},\
"textwrap":{"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,"HyphenSplitter","textwrap","Simple and default way to split words: splitting on…",null,null],[3,"NoHyphenation","","Use this as a [`Wrapper.splitter`] to avoid any kind of…",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,null],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",null,null],[3,"WrapIter","","An iterator over the lines of the input string which…",null,null],[5,"dedent","","Removes common leading whitespace from each line.",null,[[],["string",3]]],[5,"indent","","Add prefix to each non-empty line.",null,[[],["string",3]]],[5,"fill","","Fill a line of text at `width` characters. Strings are…",null,[[],["string",3]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",null,[[],[["cow",4],["vec",3]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",null,[[],[["intowrapiter",3],["hyphensplitter",3]]]],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[],["vec",3]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[],[["wrapper",3],["hyphensplitter",3]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[],["wrapper",3]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is…",0,[[],["wrapper",3]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent…",0,[[],["wrapper",3]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer…",0,[[],["wrapper",3]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[],["string",3]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[],[["vec",3],["cow",4]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[],["wrapiter",3]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[],["intowrapiter",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"split","","",3,[[],["vec",3]]],[11,"split","","",2,[[],["vec",3]]],[11,"next","","",4,[[],[["option",4],["cow",4]]]],[11,"next","","",5,[[],[["option",4],["cow",4]]]],[11,"clone","","",3,[[],["nohyphenation",3]]],[11,"clone","","",2,[[],["hyphensplitter",3]]],[11,"clone","","",0,[[],["wrapper",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[3,"Wrapper"],[8,"WordSplitter"],[3,"HyphenSplitter"],[3,"NoHyphenation"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"thread_local":{"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a `CachedThreadLocal`.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[11,"new","","Creates a new empty `CachedThreadLocal`.",0,[[],["cachedthreadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[],["cacheditermut",3]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",0,[[]]],[11,"new","","Creates a new empty `ThreadLocal`.",1,[[],["threadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[],["itermut",3]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"into_iter","","",0,[[],["cachedintoiter",3]]],[11,"into_iter","","",1,[[],["intoiter",3]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"default","","",0,[[],["cachedthreadlocal",3]]],[11,"default","","",1,[[],["threadlocal",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"CachedThreadLocal"],[3,"ThreadLocal"],[3,"CachedIntoIter"],[3,"CachedIterMut"],[3,"IterMut"],[3,"IntoIter"]]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","i":[[3,"InflateError","tiff","Decompression failed due to faulty compressed data.",null,null],[4,"TiffError","","Tiff error kinds.",null,null],[13,"FormatError","","The Image is not formatted properly.",0,null],[13,"UnsupportedError","","The Decoder does not support features required by the image.",0,null],[13,"IoError","","An I/O Error occurred while decoding the image.",0,null],[13,"LimitsExceeded","","The Limits of the Decoder is exceeded.",0,null],[13,"IntSizeError","","An integer conversion to or from a platform size failed,…",0,null],[4,"TiffFormatError","","The image is not formatted properly.",null,null],[13,"TiffSignatureNotFound","","",1,null],[13,"TiffSignatureInvalid","","",1,null],[13,"ImageFileDirectoryNotFound","","",1,null],[13,"InconsistentSizesEncountered","","",1,null],[13,"InvalidTag","","",1,null],[13,"InvalidTagValueType","","",1,null],[13,"RequiredTagNotFound","","",1,null],[13,"UnknownPredictor","","",1,null],[13,"ByteExpected","","",1,null],[13,"UnsignedIntegerExpected","","",1,null],[13,"SignedIntegerExpected","","",1,null],[13,"InflateError","","",1,null],[13,"Format","","",1,null],[13,"RequiredTagEmpty","","",1,null],[4,"TiffUnsupportedError","","The Decoder does not support features required by the image.",null,null],[13,"HorizontalPredictor","","",2,null],[13,"InterpretationWithBits","","",2,null],[13,"UnknownInterpretation","","",2,null],[13,"UnknownCompressionMethod","","",2,null],[13,"UnsupportedCompressionMethod","","",2,null],[13,"UnsupportedSampleDepth","","",2,null],[13,"UnsupportedSampleFormat","","",2,null],[13,"UnsupportedColorType","","",2,null],[13,"UnsupportedBitsPerChannel","","",2,null],[13,"UnsupportedPlanarConfig","","",2,null],[13,"UnsupportedDataType","","",2,null],[4,"ColorType","","An enumeration over supported color types and their bit…",null,null],[13,"Gray","","Pixel is grayscale",3,null],[13,"RGB","","Pixel contains R, G and B channels",3,null],[13,"Palette","","Pixel is an index into a color palette",3,null],[13,"GrayA","","Pixel is grayscale with an alpha channel",3,null],[13,"RGBA","","Pixel is RGB with an alpha channel",3,null],[13,"CMYK","","Pixel is CMYK",3,null],[0,"decoder","","",null,null],[3,"Limits","tiff::decoder","Decoding limits",null,null],[12,"decoding_buffer_size","","The maximum size of any `DecodingResult` in bytes, the…",4,null],[12,"ifd_value_size","","The maximum size of any ifd value in bytes, the default is…",4,null],[12,"intermediate_buffer_size","","Maximum size for intermediate buffer which may be used to…",4,null],[3,"Decoder","","The representation of a TIFF decoder",null,null],[4,"DecodingResult","","Result of a decoding process",null,null],[13,"U8","","A vector of unsigned bytes",5,null],[13,"U16","","A vector of unsigned words",5,null],[13,"U32","","A vector of 32 bit unsigned ints",5,null],[13,"U64","","A vector of 64 bit unsigned ints",5,null],[13,"F32","","A vector of 32 bit IEEE floats",5,null],[13,"F64","","A vector of 64 bit IEEE floats",5,null],[4,"DecodingBuffer","","",null,null],[13,"U8","","A slice of unsigned bytes",6,null],[13,"U16","","A slice of unsigned words",6,null],[13,"U32","","A slice of 32 bit unsigned ints",6,null],[13,"U64","","A slice of 64 bit unsigned ints",6,null],[13,"F32","","A slice of 32 bit IEEE floats",6,null],[13,"F64","","A slice of 64 bit IEEE floats",6,null],[0,"ifd","","Function for reading TIFF tags",null,null],[3,"Entry","tiff::decoder::ifd","",null,null],[4,"Value","","",null,null],[13,"Byte","","",7,null],[13,"Signed","","",7,null],[13,"SignedBig","","",7,null],[13,"Unsigned","","",7,null],[13,"UnsignedBig","","",7,null],[13,"Float","","",7,null],[13,"Double","","",7,null],[13,"List","","",7,null],[13,"Rational","","",7,null],[13,"RationalBig","","",7,null],[13,"SRational","","",7,null],[13,"SRationalBig","","",7,null],[13,"Ascii","","",7,null],[6,"Directory","","Type representing an Image File Directory",null,null],[11,"into_u8","","",7,[[],["tiffresult",6]]],[11,"into_u32","","",7,[[],["tiffresult",6]]],[11,"into_i32","","",7,[[],["tiffresult",6]]],[11,"into_u64","","",7,[[],["tiffresult",6]]],[11,"into_i64","","",7,[[],["tiffresult",6]]],[11,"into_f32","","",7,[[],["tiffresult",6]]],[11,"into_f64","","",7,[[],["tiffresult",6]]],[11,"into_u32_vec","","",7,[[],[["vec",3],["tiffresult",6]]]],[11,"into_u8_vec","","",7,[[],[["tiffresult",6],["vec",3]]]],[11,"into_i32_vec","","",7,[[],[["vec",3],["tiffresult",6]]]],[11,"into_f32_vec","","",7,[[],[["vec",3],["tiffresult",6]]]],[11,"into_f64_vec","","",7,[[],[["tiffresult",6],["vec",3]]]],[11,"into_u64_vec","","",7,[[],[["tiffresult",6],["vec",3]]]],[11,"into_i64_vec","","",7,[[],[["vec",3],["tiffresult",6]]]],[11,"new","","",8,[[["type",4]],["entry",3]]],[11,"new_u64","","",8,[[["type",4]],["entry",3]]],[11,"val","","",8,[[["decoder",3],["limits",3]],[["tiffresult",6],["value",4]]]],[11,"as_buffer","tiff::decoder","",5,[[],["decodingbuffer",4]]],[11,"new","","Create a new decoder that decodes from the stream `r`",9,[[],[["tiffresult",6],["decoder",3]]]],[11,"with_limits","","",9,[[["limits",3]],["decoder",3]]],[11,"dimensions","","",9,[[],["tiffresult",6]]],[11,"colortype","","",9,[[],[["tiffresult",6],["colortype",4]]]],[11,"init","","Initializes the decoder.",9,[[],[["tiffresult",6],["decoder",3]]]],[11,"next_image","","Reads in the next image. If there is no further image in…",9,[[],["tiffresult",6]]],[11,"more_images","","Returns `true` if there is at least one more image…",9,[[]]],[11,"byte_order","","Returns the byte_order",9,[[],["byteorder",4]]],[11,"read_ifd_offset","","",9,[[],[["result",4],["error",3]]]],[11,"read_byte","","Reads a TIFF byte value",9,[[],[["error",3],["result",4]]]],[11,"read_short","","Reads a TIFF short value",9,[[],[["error",3],["result",4]]]],[11,"read_sshort","","Reads a TIFF sshort value",9,[[],[["error",3],["result",4]]]],[11,"read_long","","Reads a TIFF long value",9,[[],[["result",4],["error",3]]]],[11,"read_slong","","Reads a TIFF slong value",9,[[],[["error",3],["result",4]]]],[11,"read_float","","Reads a TIFF float value",9,[[],[["result",4],["error",3]]]],[11,"read_double","","Reads a TIFF double value",9,[[],[["error",3],["result",4]]]],[11,"read_long8","","",9,[[],[["result",4],["error",3]]]],[11,"read_string","","Reads a string",9,[[],[["tiffresult",6],["string",3]]]],[11,"read_offset","","Reads a TIFF IFA offset/value field",9,[[],["tiffresult",6]]],[11,"read_offset_u64","","Reads a TIFF IFA offset/value field",9,[[],[["result",4],["error",3]]]],[11,"goto_offset","","Moves the cursor to the specified offset",9,[[],["result",6]]],[11,"goto_offset_u64","","",9,[[],["result",6]]],[11,"find_tag","","Tries to retrieve a tag. Return `Ok(None)` if the tag is…",9,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"find_tag_unsigned","","Tries to retrieve a tag and convert it to the desired…",9,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"find_tag_unsigned_vec","","Tries to retrieve a vector of all a tag\'s values and…",9,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"get_tag_unsigned","","Tries to retrieve a tag and convert it to the desired…",9,[[["tag",4]],[["tryfrom",8],["tiffresult",6]]]],[11,"get_tag","","Tries to retrieve a tag. Returns an error if the tag is…",9,[[["tag",4]],[["value",4],["tiffresult",6]]]],[11,"get_tag_u32","","Tries to retrieve a tag and convert it to the desired type.",9,[[["tag",4]],["tiffresult",6]]],[11,"get_tag_u64","","",9,[[["tag",4]],["tiffresult",6]]],[11,"get_tag_f32","","Tries to retrieve a tag and convert it to the desired type.",9,[[["tag",4]],["tiffresult",6]]],[11,"get_tag_f64","","Tries to retrieve a tag and convert it to the desired type.",9,[[["tag",4]],["tiffresult",6]]],[11,"get_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired type.",9,[[["tag",4]],[["vec",3],["tiffresult",6]]]],[11,"get_tag_u64_vec","","",9,[[["tag",4]],[["tiffresult",6],["vec",3]]]],[11,"get_tag_f32_vec","","Tries to retrieve a tag and convert it to the desired type.",9,[[["tag",4]],[["vec",3],["tiffresult",6]]]],[11,"get_tag_f64_vec","","Tries to retrieve a tag and convert it to the desired type.",9,[[["tag",4]],[["tiffresult",6],["vec",3]]]],[11,"get_tag_u8_vec","","Tries to retrieve a tag and convert it to a 8bit vector.",9,[[["tag",4]],[["tiffresult",6],["vec",3]]]],[11,"strip_count","","Number of strips in image",9,[[],["tiffresult",6]]],[11,"read_jpeg","","",9,[[],[["decodingresult",4],["tiffresult",6]]]],[11,"read_strip_to_buffer","","",9,[[["decodingbuffer",4]],["tiffresult",6]]],[11,"read_strip","","Read a single strip from the image and return it as a Vector",9,[[],[["decodingresult",4],["tiffresult",6]]]],[11,"read_image","","Decodes the entire image and return it as a Vector",9,[[],[["decodingresult",4],["tiffresult",6]]]],[0,"encoder","tiff","",null,null],[3,"Rational","tiff::encoder","Type to represent tiff values of type `RATIONAL`",null,null],[12,"n","","",10,null],[12,"d","","",10,null],[3,"SRational","","Type to represent tiff values of type `SRATIONAL`",null,null],[12,"n","","",11,null],[12,"d","","",11,null],[3,"TiffEncoder","","Tiff encoder.",null,null],[3,"DirectoryEncoder","","Low level interface to encode ifd directories.",null,null],[3,"ImageEncoder","","Type to encode images strip by strip.",null,null],[0,"colortype","","",null,null],[3,"Gray8","tiff::encoder::colortype","",null,null],[3,"Gray16","","",null,null],[3,"Gray32","","",null,null],[3,"Gray32Float","","",null,null],[3,"Gray64","","",null,null],[3,"Gray64Float","","",null,null],[3,"RGB8","","",null,null],[3,"RGB16","","",null,null],[3,"RGB32","","",null,null],[3,"RGB32Float","","",null,null],[3,"RGB64","","",null,null],[3,"RGB64Float","","",null,null],[3,"RGBA8","","",null,null],[3,"RGBA16","","",null,null],[3,"RGBA32","","",null,null],[3,"RGBA32Float","","",null,null],[3,"RGBA64","","",null,null],[3,"RGBA64Float","","",null,null],[3,"CMYK8","","",null,null],[3,"CMYK16","","",null,null],[3,"CMYK32","","",null,null],[3,"CMYK32Float","","",null,null],[3,"CMYK64","","",null,null],[3,"CMYK64Float","","",null,null],[8,"ColorType","","Trait for different colortypes that can be encoded.",null,null],[16,"Inner","","The type of each sample of this colortype",12,null],[18,"TIFF_VALUE","","The value of the tiff tag `PhotometricInterpretation`",12,null],[18,"BITS_PER_SAMPLE","","The value of the tiff tag `BitsPerSample`",12,null],[18,"SAMPLE_FORMAT","","The value of the tiff tag `SampleFormat`",12,null],[8,"TiffValue","tiff::encoder","Trait for types that can be encoded in a tiff file",null,null],[18,"BYTE_LEN","","",13,null],[18,"FIELD_TYPE","","",13,null],[10,"count","","",13,[[]]],[11,"bytes","","",13,[[]]],[10,"write","","",13,[[["tiffwriter",3]],["tiffresult",6]]],[11,"new","","",14,[[],[["tiffencoder",3],["tiffresult",6]]]],[11,"new_directory","","Create a `DirectoryEncoder` to encode an ifd directory.",14,[[],[["directoryencoder",3],["tiffresult",6]]]],[11,"new_image","","Create an \'ImageEncoder\' to encode an image one slice at a…",14,[[],[["tiffresult",6],["imageencoder",3]]]],[11,"write_image","","Convenience function to write an entire image from memory.",14,[[],["tiffresult",6]]],[11,"write_tag","","Write a single ifd tag.",15,[[["tiffvalue",8],["tag",4]],["tiffresult",6]]],[11,"write_data","","Write some data to the tiff file, the offset of the data…",15,[[["tiffvalue",8]],["tiffresult",6]]],[11,"finish","","Write out the ifd directory.",15,[[],["tiffresult",6]]],[11,"next_strip_sample_count","","Number of samples the next strip should have.",16,[[]]],[11,"write_strip","","Write a single strip.",16,[[],["tiffresult",6]]],[11,"write_data","","Write strips from data",16,[[],["tiffresult",6]]],[11,"resolution","","Set image resolution",16,[[["rational",3],["resolutionunit",4]]]],[11,"resolution_unit","","Set image resolution unit",16,[[["resolutionunit",4]]]],[11,"x_resolution","","Set image x-resolution",16,[[["rational",3]]]],[11,"y_resolution","","Set image y-resolution",16,[[["rational",3]]]],[11,"encoder","","Get a reference of the underlying `DirectoryEncoder`",16,[[],["directoryencoder",3]]],[11,"finish","","Write out image and ifd directory.",16,[[],["tiffresult",6]]],[0,"tags","tiff","",null,null],[4,"Tag","tiff::tags","TIFF tags",null,null],[13,"Artist","","",17,null],[13,"BitsPerSample","","",17,null],[13,"CellLength","","",17,null],[13,"CellWidth","","",17,null],[13,"ColorMap","","",17,null],[13,"Compression","","",17,null],[13,"Copyright","","",17,null],[13,"DateTime","","",17,null],[13,"ExtraSamples","","",17,null],[13,"FillOrder","","",17,null],[13,"FreeByteCounts","","",17,null],[13,"FreeOffsets","","",17,null],[13,"GrayResponseCurve","","",17,null],[13,"GrayResponseUnit","","",17,null],[13,"HostComputer","","",17,null],[13,"ImageDescription","","",17,null],[13,"ImageLength","","",17,null],[13,"ImageWidth","","",17,null],[13,"Make","","",17,null],[13,"MaxSampleValue","","",17,null],[13,"MinSampleValue","","",17,null],[13,"Model","","",17,null],[13,"NewSubfileType","","",17,null],[13,"Orientation","","",17,null],[13,"PhotometricInterpretation","","",17,null],[13,"PlanarConfiguration","","",17,null],[13,"ResolutionUnit","","",17,null],[13,"RowsPerStrip","","",17,null],[13,"SamplesPerPixel","","",17,null],[13,"Software","","",17,null],[13,"StripByteCounts","","",17,null],[13,"StripOffsets","","",17,null],[13,"SubfileType","","",17,null],[13,"Threshholding","","",17,null],[13,"XResolution","","",17,null],[13,"YResolution","","",17,null],[13,"JPEGTables","","",17,null],[13,"Predictor","","",17,null],[13,"TileWidth","","",17,null],[13,"TileLength","","",17,null],[13,"TileOffsets","","",17,null],[13,"TileByteCounts","","",17,null],[13,"SampleFormat","","",17,null],[13,"Unknown","","A private or extension tag",17,null],[4,"Type","","The type of an IFD entry (a 2 byte field).",null,null],[13,"BYTE","","",18,null],[13,"ASCII","","",18,null],[13,"SHORT","","",18,null],[13,"LONG","","",18,null],[13,"RATIONAL","","",18,null],[13,"SBYTE","","",18,null],[13,"UNDEFINED","","",18,null],[13,"SSHORT","","",18,null],[13,"SLONG","","",18,null],[13,"SRATIONAL","","",18,null],[13,"FLOAT","","",18,null],[13,"DOUBLE","","",18,null],[13,"LONG8","","BigTIFF 64-bit unsigned integer",18,null],[4,"CompressionMethod","","See TIFF compression tags for reference.",null,null],[13,"None","","",19,null],[13,"Huffman","","",19,null],[13,"Fax3","","",19,null],[13,"Fax4","","",19,null],[13,"LZW","","",19,null],[13,"JPEG","","",19,null],[13,"ModernJPEG","","",19,null],[13,"Deflate","","",19,null],[13,"OldDeflate","","",19,null],[13,"PackBits","","",19,null],[4,"PhotometricInterpretation","","",null,null],[13,"WhiteIsZero","","",20,null],[13,"BlackIsZero","","",20,null],[13,"RGB","","",20,null],[13,"RGBPalette","","",20,null],[13,"TransparencyMask","","",20,null],[13,"CMYK","","",20,null],[13,"YCbCr","","",20,null],[13,"CIELab","","",20,null],[4,"PlanarConfiguration","","",null,null],[13,"Chunky","","",21,null],[13,"Planar","","",21,null],[4,"Predictor","","",null,null],[13,"None","","",22,null],[13,"Horizontal","","",22,null],[4,"ResolutionUnit","","Type to represent resolution units",null,null],[13,"None","","",23,null],[13,"Inch","","",23,null],[13,"Centimeter","","",23,null],[4,"SampleFormat","","",null,null],[13,"Uint","","",24,null],[13,"Int","","",24,null],[13,"IEEEFP","","",24,null],[13,"Void","","",24,null],[13,"Unknown","","An unknown extension sample format",24,null],[11,"from_u16","","",17,[[],["option",4]]],[11,"from_u16_exhaustive","","",17,[[]]],[11,"to_u16","","",17,[[]]],[11,"from_u16","","",18,[[],["option",4]]],[11,"to_u16","","",18,[[]]],[11,"from_u16","","",19,[[],["option",4]]],[11,"to_u16","","",19,[[]]],[11,"from_u16","","",20,[[],["option",4]]],[11,"to_u16","","",20,[[]]],[11,"from_u16","","",21,[[],["option",4]]],[11,"to_u16","","",21,[[]]],[11,"from_u16","","",22,[[],["option",4]]],[11,"to_u16","","",22,[[]]],[11,"from_u16","","",23,[[],["option",4]]],[11,"to_u16","","",23,[[]]],[11,"from_u16","","",24,[[],["option",4]]],[11,"from_u16_exhaustive","","",24,[[]]],[11,"to_u16","","",24,[[]]],[6,"TiffResult","tiff","Result of an image decoding/encoding process",null,null],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","tiff::decoder","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","tiff::decoder::ifd","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","tiff::encoder","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","tiff::encoder::colortype","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","tiff::tags","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"count","tiff::encoder","",10,[[]]],[11,"write","","",10,[[["tiffwriter",3]],["tiffresult",6]]],[11,"count","","",11,[[]]],[11,"write","","",11,[[["tiffwriter",3]],["tiffresult",6]]],[11,"drop","","",15,[[]]],[11,"drop","","",16,[[]]],[11,"from","tiff","",0,[[["error",3]],["tifferror",4]]],[11,"from","","",0,[[["fromutf8error",3]],["tifferror",4]]],[11,"from","","",0,[[["tiffformaterror",4]],["tifferror",4]]],[11,"from","","",0,[[["tiffunsupportederror",4]],["tifferror",4]]],[11,"from","","",0,[[["tryfrominterror",3]],["tifferror",4]]],[11,"clone","tiff::decoder::ifd","",7,[[],["value",4]]],[11,"clone","","",8,[[],["entry",3]]],[11,"clone","tiff::decoder","",4,[[],["limits",3]]],[11,"clone","tiff::encoder","",10,[[],["rational",3]]],[11,"clone","tiff","",1,[[],["tiffformaterror",4]]],[11,"clone","","",25,[[],["inflateerror",3]]],[11,"clone","","",2,[[],["tiffunsupportederror",4]]],[11,"clone","tiff::tags","",17,[[],["tag",4]]],[11,"clone","","",18,[[],["type",4]]],[11,"clone","","",19,[[],["compressionmethod",4]]],[11,"clone","","",20,[[],["photometricinterpretation",4]]],[11,"clone","","",21,[[],["planarconfiguration",4]]],[11,"clone","","",22,[[],["predictor",4]]],[11,"clone","","",23,[[],["resolutionunit",4]]],[11,"clone","","",24,[[],["sampleformat",4]]],[11,"clone","tiff","",3,[[],["colortype",4]]],[11,"default","tiff::decoder","",4,[[],["limits",3]]],[11,"eq","tiff::decoder::ifd","",7,[[["value",4]]]],[11,"ne","","",7,[[["value",4]]]],[11,"eq","tiff","",1,[[["tiffformaterror",4]]]],[11,"ne","","",1,[[["tiffformaterror",4]]]],[11,"eq","","",25,[[["inflateerror",3]]]],[11,"ne","","",25,[[["inflateerror",3]]]],[11,"eq","","",2,[[["tiffunsupportederror",4]]]],[11,"ne","","",2,[[["tiffunsupportederror",4]]]],[11,"eq","tiff::tags","",17,[[["tag",4]]]],[11,"ne","","",17,[[["tag",4]]]],[11,"eq","","",18,[[["type",4]]]],[11,"eq","","",19,[[["compressionmethod",4]]]],[11,"eq","","",20,[[["photometricinterpretation",4]]]],[11,"eq","","",21,[[["planarconfiguration",4]]]],[11,"eq","","",22,[[["predictor",4]]]],[11,"eq","","",23,[[["resolutionunit",4]]]],[11,"eq","","",24,[[["sampleformat",4]]]],[11,"ne","","",24,[[["sampleformat",4]]]],[11,"eq","tiff","",3,[[["colortype",4]]]],[11,"ne","","",3,[[["colortype",4]]]],[11,"fmt","tiff::decoder::ifd","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","tiff::decoder","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tiff","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tiff::tags","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","tiff","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",25,[[]]],[11,"hash","","",2,[[]]],[11,"hash","tiff::tags","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","tiff","",3,[[]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"TiffError"],[4,"TiffFormatError"],[4,"TiffUnsupportedError"],[4,"ColorType"],[3,"Limits"],[4,"DecodingResult"],[4,"DecodingBuffer"],[4,"Value"],[3,"Entry"],[3,"Decoder"],[3,"Rational"],[3,"SRational"],[8,"ColorType"],[8,"TiffValue"],[3,"TiffEncoder"],[3,"DirectoryEncoder"],[3,"ImageEncoder"],[4,"Tag"],[4,"Type"],[4,"CompressionMethod"],[4,"PhotometricInterpretation"],[4,"PlanarConfiguration"],[4,"Predictor"],[4,"ResolutionUnit"],[4,"SampleFormat"],[3,"InflateError"],[3,"Gray8"],[3,"Gray16"],[3,"Gray32"],[3,"Gray32Float"],[3,"Gray64"],[3,"Gray64Float"],[3,"RGB8"],[3,"RGB16"],[3,"RGB32"],[3,"RGB32Float"],[3,"RGB64"],[3,"RGB64Float"],[3,"RGBA8"],[3,"RGBA16"],[3,"RGBA32"],[3,"RGBA32Float"],[3,"RGBA64"],[3,"RGBA64Float"],[3,"CMYK8"],[3,"CMYK16"],[3,"CMYK32"],[3,"CMYK32Float"],[3,"CMYK64"],[3,"CMYK64Float"]]},\
"unicode_width":{"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[10,"width_cjk","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string\'s displayed width in columns.",1,[[]]],[10,"width_cjk","","Returns the string\'s displayed width in columns.",1,[[]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"new","","Creates an empty `VecMap`.",1,[[]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[],["keys",3]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[],["values",3]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[],["valuesmut",3]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[],["itermut",3]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[],["drain",3]]],[11,"len","","Returns the number of elements in the map.",1,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[],["option",4]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[],["option",4]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",1,[[],["entry",4]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce",8]]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",2,[[]]],[11,"get","","Gets a reference to the value in the entry.",3,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry\'s key,…",3,[[]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["intoiter",3]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",4,[[],["iter",3]]],[11,"clone","","",6,[[],["keys",3]]],[11,"clone","","",7,[[],["values",3]]],[11,"default","","",1,[[]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"eq","","",1,[[]]],[11,"partial_cmp","","",1,[[],[["ordering",4],["option",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",1,[[["intoiterator",8]]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]},\
"weezl":{"doc":"LZW decoder and encoder","i":[[3,"StreamResult","weezl","The result of coding into an output stream.",null,null],[12,"bytes_read","","The total number of bytes consumed from the reader.",0,null],[12,"bytes_written","","The total number of bytes written into the writer.",0,null],[12,"status","","The possible error that occurred.",0,null],[3,"BufferResult","","The result of a coding operation on a pair of buffer.",null,null],[12,"consumed_in","","The number of bytes consumed from the input buffer.",1,null],[12,"consumed_out","","The number of bytes written into the output buffer.",1,null],[12,"status","","The status after returning from the write call.",1,null],[4,"BitOrder","","The order of bits in bytes.",null,null],[13,"Msb","","The most significant bit is processed first.",2,null],[13,"Lsb","","The least significant bit is processed first.",2,null],[4,"LzwError","","The error kind after unsuccessful coding of an LZW stream.",null,null],[13,"InvalidCode","","The input contained an invalid code.",3,null],[4,"LzwStatus","","The status after successful coding of an LZW stream.",null,null],[13,"Ok","","Everything went well.",4,null],[13,"NoProgress","","No bytes were read or written and no internal state…",4,null],[13,"Done","","No more data will be produced because an end marker was…",4,null],[0,"decode","","A module for all decoding needs.",null,null],[3,"Decoder","weezl::decode","The state for decoding data with an LZW algorithm.",null,null],[3,"IntoStream","","A decoding stream sink.",null,null],[11,"new","","Create a new decoder with the specified bit order and…",5,[[["bitorder",4]]]],[11,"with_tiff_size_switch","","Create a TIFF compatible decoder with the specified bit…",5,[[["bitorder",4]]]],[11,"decode_bytes","","Decode some bytes from `inp` and write result to `out`.",5,[[],["bufferresult",3]]],[11,"into_stream","","Construct a decoder into a writer.",5,[[["write",8]],[["intostream",3],["write",8]]]],[11,"has_ended","","Check if the decoding has finished.",5,[[]]],[11,"reset","","Reset all internal state.",5,[[]]],[11,"decode","","Decode data from a reader.",6,[[],["streamresult",3]]],[11,"decode_all","","Decode data from a reader, requiring an end marker.",6,[[],["streamresult",3]]],[11,"set_buffer_size","","Set the size of the intermediate decode buffer.",6,[[]]],[11,"set_buffer","","Use a particular buffer as an intermediate decode buffer.",6,[[]]],[0,"encode","weezl","A module for all encoding needs.",null,null],[3,"Encoder","weezl::encode","The state for encoding data with an LZW algorithm.",null,null],[3,"IntoStream","","A encoding stream sink.",null,null],[11,"new","","Create a new encoder with the specified bit order and…",7,[[["bitorder",4]]]],[11,"with_tiff_size_switch","","Create a TIFF compatible encoder with the specified bit…",7,[[["bitorder",4]]]],[11,"encode_bytes","","Encode some bytes from `inp` into `out`.",7,[[],["bufferresult",3]]],[11,"into_stream","","Construct a encoder into a writer.",7,[[["write",8]],[["intostream",3],["write",8]]]],[11,"finish","","Mark the encoding as in the process of finishing.",7,[[]]],[11,"reset","","Reset all internal state.",7,[[]]],[11,"encode","","Encode data from a reader.",8,[[],["streamresult",3]]],[11,"encode_all","","Encode data from a reader and an end marker.",8,[[],["streamresult",3]]],[11,"set_buffer_size","","Set the size of the intermediate encode buffer.",8,[[]]],[11,"set_buffer","","Use a particular buffer as an intermediate encode buffer.",8,[[]]],[11,"from","weezl","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","weezl::decode","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","weezl::encode","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"clone","weezl","",4,[[],["lzwstatus",4]]],[11,"clone","","",3,[[],["lzwerror",4]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"StreamResult"],[3,"BufferResult"],[4,"BitOrder"],[4,"LzwError"],[4,"LzwStatus"],[3,"Decoder"],[3,"IntoStream"],[3,"Encoder"],[3,"IntoStream"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);