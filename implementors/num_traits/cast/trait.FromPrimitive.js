(function() {var implementors = {};
implementors["num_rational"] = [{"text":"impl FromPrimitive for Ratio&lt;i8&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i16&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i32&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i64&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;i128&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;isize&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u8&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u16&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u32&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u64&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;u128&gt;","synthetic":false,"types":[]},{"text":"impl FromPrimitive for Ratio&lt;usize&gt;","synthetic":false,"types":[]}];
implementors["num_traits"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()